<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Info1 on Prof. Dr. Barne Kleinen</title><link>https://bkleinen.github.io/material/courses/info1/</link><description>Recent content in Info1 on Prof. Dr. Barne Kleinen</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 07 Oct 2024 14:46:36 +0200</lastBuildDate><atom:link href="https://bkleinen.github.io/material/courses/info1/index.xml" rel="self" type="application/rss+xml"/><item><title>Conditional Statement</title><link>https://bkleinen.github.io/material/info1-script/01_basics/conditional/</link><pubDate>Sat, 21 Oct 2023 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/info1-script/01_basics/conditional/</guid><description>&lt;h4 id="conditional-statement-if-then-else-statement">Conditional Statement (if-then-else statement)&lt;/h4>
&lt;p>A conditional statement allows you to conditionally execute code parts based on a condition, either true or false or something that results in true or false (see boolean expression).&lt;/p>
&lt;h1 id="structure">Structure&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// before conditional&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">condition&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// if-part&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// else-part&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// after conditional&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre class="mermaid">flowchart TD
 A[Start]
 B(before conditional)
 D(if-part)
 E(else-part)
 F(after conditional)

 A --> B
 B --> C{condition true?}
 C --true--> D
 C -->|false| E
 D &amp; E --> F
 F -->G[End]
&lt;/pre>

&lt;h2 id="the-else-part-can-be-omitted">The else part can be omitted&amp;hellip;&lt;/h2>
&lt;p>&amp;hellip; if you don&amp;rsquo;t need it. If the condition is false, the execution continues directly with the statements after the if-statement.&lt;/p></description></item><item><title>While Loop</title><link>https://bkleinen.github.io/material/info1-script/01_basics/while-loop/</link><pubDate>Tue, 24 Oct 2023 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/info1-script/01_basics/while-loop/</guid><description>&lt;h4 id="while-loop">While Loop&lt;/h4>
&lt;h1 id="structure">Structure&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// before loop&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">condition&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// loop body&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> 
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// after loop&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="shorter">shorter&lt;/h1>
&lt;pre class="mermaid">
flowchart TD
 S[Start]
 C{cond?}
 L(LOOP BODY)
 E(End)
 S --> C
 
 C --true?--> L
 L --> C
 C -->|false?| E
&lt;/pre>

&lt;h1 id="longer-version">longer version&lt;/h1>
&lt;pre class="mermaid">flowchart TD
 A[Start]
 B(before loop)
 L(loop body)
 F(after loop)

 A --> B
 B --> C{condition true?}
 L --> C
 C --true--> L
 C -->|false| F
 
 F -->G[End]
&lt;/pre>

&lt;pre tabindex="0">&lt;code>## Examples

## Further Reading

https://docs.oracle.com/javase/tutorial/java/nutsandbolts/while.html
&lt;/code>&lt;/pre></description></item><item><title>Info1 Script</title><link>https://bkleinen.github.io/material/info1-script/</link><pubDate>Sat, 21 Oct 2023 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/info1-script/</guid><description>&lt;ul>
&lt;li>&lt;a href="01_basics/conditional">Conditional Statement&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Notes on Sketchnotes</title><link>https://bkleinen.github.io/material/visual/sketchnotes/</link><pubDate>Wed, 20 Oct 2021 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/visual/sketchnotes/</guid><description>&lt;p>To get started with sketchnotes, I recommend one of the sketchnote workshops held at Re:publica (about 1h):&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=hJKK9m5-xEY">the one at Republica 2015&lt;/a> is great, but the sketches on the flipcarts
are sometimes hard to see.&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=IBq9VoRJQWU&amp;amp;t=1400s">in 2016&lt;/a> they projected the sketchnotes, but mirror-inverted :)&lt;/li>
&lt;/ul>
&lt;p>If you want to dig deeper:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://rohdesign.com">Martin Rhode&lt;/a> coined the term with &lt;a href="https://rohdesign.com/handbook">&amp;ldquo;The Sketchnote Handbook&amp;rdquo;&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.schrockguide.net/sketchnoting.html">Kathy Schrock on Sketchnoting in Education&lt;/a> - with lots of resources&lt;/li>
&lt;li>&lt;a href="https://sketchnotes.de/2013/04/11/ueber-sketchnotes-lehren-und-lernen/">Über Sketchnotes, lehren und lernen&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="on-visual-notetaking-in-general">On Visual Notetaking in General&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=gj3ZnKlHqxI">Wie Zeichnen beim Merken hilft, Graham Shaw, TEDxVienna&lt;/a>&lt;/li>
&lt;li>and, last not least: &lt;a href="https://www.youtube.com/watch?v=vjrJYuJP2-w">Ottis kleine Malstunde&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>BlueJ Trick - Save your Object Bench using Test Fixtures</title><link>https://bkleinen.github.io/material/info1/save_object_bench/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/info1/save_object_bench/</guid><description>&lt;p>You can save and re-create your Object Bench with a trick that uses the Unit Test Support in BlueJ, especially “Object Bench to Test Fixture” “Test Fixture to Object Bench”:&lt;/p>
&lt;h3 id="1-save-the-state-of-your-object-bench">1. Save the state of your object bench&lt;/h3>
&lt;p>Let’s say you have created a lot of objects manually and want to reuse them. To save the state of your Object Bench, first create a Test Class for an arbitrary class:
&lt;img src="../save_object_bench/image_2.png" alt="">&lt;/p></description></item><item><title>ClockDisplay Example: Reflections and Improvements</title><link>https://bkleinen.github.io/material/info1/clock_display_refactoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/info1/clock_display_refactoring/</guid><description>&lt;p>I have been working with the ClockDisplay example as shown in the Textbook &lt;a href="https://www.bluej.org/objects-first/">&amp;ldquo;Objects First with Java: A Practical Introduction Using Bluej.&amp;rdquo; by David J Barnes and Michael Kölling&lt;/a> (Barnes and Kölling 2017) for a while now. While the book contains many great examples that allow the discussion of a broad range of object oriented design,
this example has some issues that always bugged me.&lt;/p>
&lt;p>This page is about my approach(es) to improve the ClockDisplay example.&lt;/p></description></item><item><title>JUnit in BlueJ</title><link>https://bkleinen.github.io/material/info1/junit_in_bluej/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/info1/junit_in_bluej/</guid><description>&lt;h2 id="monday-04december-2023">Monday, 04.December 2023&lt;/h2>
&lt;p>JUnit is not part of the Java API, it is a third-party software.
You find all information about JUnit, including a &lt;a href="https://junit.org/junit5/docs/current/user-guide/">user guide&lt;/a> and information about and download of the latest version on &lt;a href="https://junit.org">https://junit.org&lt;/a>.&lt;/p>
&lt;p>As of this writing, the current version is 5.10.1, but the version included in BlueJ 5.2.1 is JUnit 5.5.2, as you can check within the installation of BlueJ:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">BlueJ.app/Contents/Java&amp;gt;ls junit*
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">junit-4.12.jar				junit-jupiter-params-5.5.2.jar		junit-platform-suite-api-1.5.2.jar
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">junit-jupiter-5.5.2.jar			junit-platform-commons-1.5.2.jar	junit-vintage-engine-5.5.2.jar
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">junit-jupiter-api-5.5.2.jar		junit-platform-engine-1.5.2.jar
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">junit-jupiter-engine-5.5.2.jar		junit-platform-launcher-1.5.2.jar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>As we only use a &lt;em>very&lt;/em> small portion of JUnit this should not matter - but if you look something up
in the BlueJ documentation, keep this in mind. (you could also try updating JUnit in the above directory, of course. I haven&amp;rsquo;t tried it.)&lt;/p></description></item></channel></rss>