<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Info1/WS2012 - Labs and Exercises on Prof. Dr. Barne Kleinen</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/</link><description>Recent content in Info1/WS2012 - Labs and Exercises on Prof. Dr. Barne Kleinen</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://bkleinen.github.io/classes/ws2013/info1/labs/index.xml" rel="self" type="application/rss+xml"/><item><title>Exercise 01: Programming Kara</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-01/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://github.com/htw-imi-info1/kara-exercise01">Download the Scenario&lt;/a> and read through the Kara programming exercises in the assignment.&lt;/li>
&lt;li>Write down how Kara could solve the task for each one of them. For example, if the programming exercise was Exercise 4 from Worksheet 1, where Kara was to move in a Square and drop a leaf in each corner, you could write down something as this:
1. walk one edge (call move n times),
2. drop a leaf
3. turn right
4. repeat that 4 times&lt;/li>
&lt;li>Don’t worry if you don’t know yet how to really program Kara to solve the problems, we will learn new things in the lecture that will help you to do so! Just try to think of a way Kara could solve them knowing the methods Kara has, and write down a solution with your own words or draw a diagram.&lt;/li>
&lt;li>When designing the algorithms, think of useful methods that help you/make your tasks easier and name them/use them in your algorithm description.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>&lt;a href="https://github.com/htw-imi-info1/kara-exercise01">Download the scenario for these exercises&lt;/a> if you haven&amp;rsquo;t already done so for the prelab. It contains a KaraWorld and a Kara for each programming task. Solve all Programming Exercises using this scenario, and upload the whole scenario as a zip file. For all problems, make sure to extract methods where appropriate to make the source code more readable.&lt;/p></description></item><item><title>Exercise 02: Shapes and TicketMachine</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-02/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended to acquaint you with the BlueJ environment.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong> In the lecture we have talked about data types called int and String. Java has more predefined primitive data types. What are they? Record where you found this information.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What are the types of the following values (constants)?&lt;/p></description></item><item><title>Exercise 03: Book Exercise</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-03/</guid><description>&lt;p>&lt;img src="../../images/books-8314929977.jpg" alt="Book">&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to practice creating classes with data fields, constructors, methods, assignments and conditional statements.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>&lt;strong>Please finish these exercises before coming to lab.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong>
Why does the following version of refundBalance not give the same results as what we saw in class?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">refundBalance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>P2.&lt;/strong>&lt;/p>
&lt;p>What happens if you try to compile the TicketMachine class with the following version of refundBalance?&lt;/p></description></item><item><title>Exercise 04: Rock around the Clock</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-04/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">&lt;img src="../../images/clock-stockholm-6085686394-320.jpg" alt="Clock">&lt;/a>
&lt;!-- raw HTML omitted -->Katarina Elevator in Stockholm, Foto by &lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">Arjan Richter&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to get you to implement parts of a class that is given for you. You are also to begin to see the idea of modularization, that is, splitting up code into classes.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>For the Tuesday group: we will be talking about boolean expressions in class on Tuesday. Therefore, I will set some time apart to let you work on the prelab in class as an exercise; you may however if you haven&amp;rsquo;t already done so for programming Kara do some reading about boolean expressions and prepare it before or at least give it a first try:
&lt;a href="https://en.wikibooks.org/wiki/Java_Programming/Boolean_expressions">https://en.wikibooks.org/wiki/Java_Programming/Boolean_expressions&lt;/a>&lt;/p></description></item><item><title>Exercise 05: A Better Notebook</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-05/</guid><description>&lt;p>&lt;img src="../../images/notebook-6783298985.jpg" alt="Notebook">
&lt;!-- raw HTML omitted -->Foto by &lt;a href="https://www.flickr.com/photos/waferboard/6783298985">waferboard&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended help you practice using loops.&lt;/p>
&lt;p>&lt;strong>Note: (19.11.2013) The Kara Special exercise is obligatory!&lt;/strong>&lt;/p>
&lt;p>&lt;strong>In Exercise 4, you are asked to write the remove with an Iterator. As we haven&amp;rsquo;t yet reached Iterators in class, you can either:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>implement a removeFirstNote method with the for-each loop as seen in class &lt;strong>or&lt;/strong>&lt;/li>
&lt;li>look up iterators and use the Iterator remove method&lt;/li>
&lt;/ul>
&lt;p>The while/index-variant however, should delete &lt;strong>all&lt;/strong> Notes meeting the criteria!&lt;/p></description></item><item><title>Exercise 06: Club Membership</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-06/</guid><description>&lt;p>&lt;img src="../../images/reform_club.jpg" alt="Reform Club">
&lt;!-- raw HTML omitted -->Reform Club, &lt;a href="https://commons.wikimedia.org/wiki/File:Reform_Club._Upper_level_of_the_saloon._From_London_Interiors_%281841%29.jpg">Wikimedia Commons&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended give you more practice using collections.&lt;/p>
&lt;p>##Prelab&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please prepare these exercise before coming to the lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. How do you write the import statement for using an ArrayList?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> How do you define a field that will take a collection of objects of type Student? How does it get initialized?&lt;/p></description></item><item><title>Exercise 07: Lotto and Technical Support</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-07/</guid><description>&lt;p>&lt;img src="../../images/lotto.jpg" alt="Lotto">
&lt;!-- raw HTML omitted -->German Lotto Slip, &lt;a href="https://www.flickr.com/photos/rene-germany/98668296">Foto by ReneS&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended give you practice using the Random class and HashMaps.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. How do you generate random numbers between 1 and 10 with Java? In what package is the library?&lt;/p></description></item><item><title>Exercise 08: Bouncing Balls</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-08/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice working with the basic concepts of programming.&lt;/p>
&lt;h2 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h2>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Download and open the &lt;a href="https://github.com/htw-imi-info1/exercise08">Balls project&lt;/a> (Chapter 05). Create a BallDemo object and execute the drawDemo and bounce methods. Then read the BallDemo source code. Describe, in detail, how these methods work for your report.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> Read the documentation of the Canvas class. Then answer the following questions in writing, including fragments of Java code:&lt;/p></description></item><item><title>Exercise 09: JUnit</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-09/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice testing and writing assertions.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Write down six test cases for Day and Appointment that were not given in the lecture. Give each test case (and the ones from the lecture) a name.&lt;/p>
&lt;p>&lt;strong>P2&lt;/strong>. What assertions do you need in order to be able to automate the tests?&lt;/p></description></item><item><title>Exercise 10: The World of You</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-10/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will begin a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Design your own game scenario away from the computer. Don’t worry about implementation or classes or programming. Just try and come up with something interesting. It needs to be the basic structure of a player moving through different locations. Possible examples:&lt;/p></description></item><item><title>Exercise 11: Keeping Track of Stuff</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-11-with-switch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-11-with-switch/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will continue a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. What items could be kept in the locations in your game? Come up with a list of at least 10 items. How heavy is each item?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What will the starting position of the items be? List which items are going to be in which place.&lt;/p></description></item><item><title>Exercise 11: Keeping Track of Stuff</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-11/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will continue a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. What items could be kept in the locations in your game? Come up with a list of at least 10 items. How heavy is each item?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What will the starting position of the items be? List which items are going to be in which place.&lt;/p></description></item><item><title>Exercise 12: Pick up and Carry</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-12-switch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-12-switch/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week&amp;rsquo;s lab work will finish up your project.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page. You do the prelab for the game you received from your neighbor last week.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Here are some informal specifications: A player must be able to pick up items from the current room. They can carry any number of items, but only up to a maximum weight limit. Some items are too heavy to be picked up. The player can drop one or all items in the current location. What changes are you going to have to make to your game? Don&amp;rsquo;t program them yet, just specify the changes that need to be made to each class in writing.&lt;/p></description></item><item><title>Exercise 12: Pick up and Carry</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-12/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week&amp;rsquo;s lab work will finish up your project.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Here are some informal specifications: A player must be able to pick up items from the current room. They can carry any number of items, but only up to a maximum weight limit. Some items are too heavy to be picked up. The player can drop one or all items in the current location. What changes are you going to have to make to your game? Don&amp;rsquo;t program them yet, just specify the changes that need to be made to each class in writing.&lt;/p></description></item><item><title>Exercise Startup</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-00/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-00/</guid><description>&lt;p>Welcome to the laboratory - that&amp;rsquo;s what we call these rooms filled with computer equipment. Each computer in WH C 579 is a so-called dual-boot computer that can boot to Windows or Ubuntu Linux, or Mac OS in WH C 537. As computer science students we expect you to be able to deal with Windows, Unix, and Mac OS operating systems. For this lab, you can work with Mac OS or Windows.&lt;/p></description></item></channel></rss>