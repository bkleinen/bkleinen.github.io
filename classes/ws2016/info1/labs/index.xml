<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Info1 - Labs and Exercises on Prof. Dr. Barne Kleinen</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/</link><description>Recent content in Info1 - Labs and Exercises on Prof. Dr. Barne Kleinen</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://bkleinen.github.io/classes/ws2016/info1/labs/index.xml" rel="self" type="application/rss+xml"/><item><title>Exercise 01: Programming Kara</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-01/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="https://github.com/htw-imi-info1/exercise01-kara">Download the Scenarios&lt;/a> and read through the Kara programming exercises in the assignment.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Write down how Kara could solve the task for each one of them. For example, if the programming exercise was Exercise 4 from &lt;a href="../material/info1-02-worksheet-kara1.pdf">Worksheet 1&lt;/a>, where Kara was to move in a Square and drop a leaf in each corner, you could write down something as this:&lt;/p>
&lt;pre>&lt;code>1. walk one edge (call move n times),
2. drop a leaf
3. turn right
4. repeat 4 times from step 1
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Make use of Greenfoots act()-loop - split the problem into repeating steps, and the position that Kara should be in after this step. In the example above, each call to the act() method should make kara walk one side, having her face in the direction of the next side at the end of each step.&lt;/p></description></item><item><title>Exercise 02: Shapes and TicketMachine</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-02/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended to acquaint you with the BlueJ environment.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong> In the lecture we have talked about data types called int and String. Java has more predefined primitive data types. What are they? Record where you found this information.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What are the types of the following values (constants)?&lt;/p></description></item><item><title>Exercise 03: Book Exercise</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-03/</guid><description>&lt;p>&lt;img src="../../images/books-8314929977.jpg" alt="Book">
&lt;!-- raw HTML omitted -->Books. &lt;a href="https://www.flickr.com/photos/abee5/8314929977/">Abhi Sharma&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to practice creating classes with data fields, constructors, methods, assignments and conditional statements.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>&lt;strong>Please finish these exercises before coming to lab.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong>
Why does the following version of refundBalance not give the same results as what we saw in class?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">refundBalance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>P2.&lt;/strong>&lt;/p></description></item><item><title>Exercise 04: Rock Around the Clock</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-04/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">&lt;img src="../../images/clock-stockholm-6085686394-320.jpg" alt="Clock">&lt;/a>
&lt;!-- raw HTML omitted -->Katarina Elevator in Stockholm, Foto by &lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">Arjan Richter&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to get you to implement parts of a class that is given for you. You are also to begin to see the idea of modularization, that is, splitting up code into classes.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>P1.&lt;/strong> Which of the following expressions returns true? After writing your answers on paper, open the CodePad in BlueJ and try it out.&lt;/p></description></item><item><title>Exercise 05: A Better Notebook</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-05/</guid><description>&lt;p>&lt;img src="../../images/notebook-6783298985.jpg" alt="Notebook">
&lt;!-- raw HTML omitted -->Foto by &lt;a href="https://www.flickr.com/photos/waferboard/6783298985">waferboard&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended help you practice using loops.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>P1&lt;/strong>. Write a loop on paper that prints out all multiples of 5 between 10 and 95.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> Write a method called sumBetween that adds up all numbers between two numbers, a and b, that are passed into the method as parameters. Include a but not b in the sum.&lt;/p></description></item><item><title>Exercise 06: Club Membership</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-06/</guid><description>&lt;p>&lt;img src="../../images/reform_club.jpg" alt="Reform Club">
&lt;!-- raw HTML omitted -->Reform Club, &lt;a href="https://commons.wikimedia.org/wiki/File:Reform_Club._Upper_level_of_the_saloon._From_London_Interiors_%281841%29.jpg">Wikimedia Commons&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended give you more practice using collections.&lt;/p>
&lt;h2 id="prelab">Prelab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please prepare these exercise before coming to the lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. How do you write the import statement for using an ArrayList?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> How do you define a field that will take a collection of objects of type Student? How does it get initialized?&lt;/p></description></item><item><title>Exercise 07: Lotto and Technical Support</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-07/</guid><description>&lt;p>&lt;img src="../../images/lotto.jpg" alt="Lotto">
&lt;!-- raw HTML omitted -->German Lotto Slip, &lt;a href="https://www.flickr.com/photos/rene-germany/98668296">Foto by ReneS&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended give you practice using the Random class and HashMaps.&lt;/p>
&lt;hr>
&lt;h1 id="pre-lab">Pre-Lab&lt;/h1>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. How do you generate random numbers between 1 and 10 with Java? In what package is the library?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> How do you define an array that can count how often the numbers between 1 and 10 are generated? We call this a frequency table.&lt;/p></description></item><item><title>Exercise 08: Bouncing Balls</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-08/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice working with the basic concepts of programming.&lt;/p>
&lt;h2 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h2>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Download and open the &lt;a href="https://github.com/htw-imi-info1/exercise08">Balls project&lt;/a> (Chapter 05). Create a BallDemo object and execute the drawDemo and bounce methods. Then read the BallDemo source code. Describe, in detail, how these methods work for your report.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> Read the documentation of the Canvas class. Then answer the following questions in writing, including fragments of Java code:&lt;/p></description></item><item><title>Exercise 09: Testing with JUnit</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-09/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice testing and writing assertions.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Write down six test cases for Day and Appointment that were not given in the lecture. Give each test case (and the ones from the lecture) a name.&lt;/p>
&lt;p>&lt;strong>P2&lt;/strong>. What assertions do you need in order to be able to automate the tests?&lt;/p></description></item><item><title>Exercise 10 a: The World of You</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-10-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-10-a/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will begin a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Design your own game scenario away from the computer. Don’t worry about implementation or classes or programming. Just try and come up with something interesting. It needs to be the basic structure of a player moving through different locations. Possible examples:&lt;/p></description></item><item><title>Exercise 10 b: Adding Commands</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-10-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-10-b/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will begin a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. What are enums in Java? which special methods does an enum have?&lt;/p>
&lt;p>&lt;strong>P2&lt;/strong>. What is switch statement? Write down an example.&lt;/p>
&lt;h1 id="post-lab-aka--what-to-turn-in">Post-Lab, AKA What To Turn In&lt;/h1>
&lt;p>Your completed lab report, submitted in Moodle as a pdf,
should include:&lt;/p></description></item><item><title>Exercise 10: The World of You</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-10/</guid><description>&lt;p>&lt;!-- raw HTML omitted -->This exercise has been split up in parts A &amp;amp; B and is not valid in WS2016/17!&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->See the [Schedule]({{ site.BaseURL }}/classes/ws2016/info1/schedule/)
or [Lab Index]({{ site.BaseURL }}/classes/ws2016/info1/labs/) for the correct exercises.&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will begin a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p></description></item><item><title>Exercise 11: Keeping Track of Stuff</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-11/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will continue a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. What items could be kept in the locations in your game? Come up with a list of at least 10 items. How heavy is each item?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What will the starting position of the items be? List which items are going to be in which place.&lt;/p></description></item><item><title>Exercise 12: Pick up and Carry</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-12/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week&amp;rsquo;s lab work will finish up your project.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Here are some informal specifications: A player must be able to pick up items from the current room. They can carry any number of items, but only up to a maximum weight limit. Some items are too heavy to be picked up. The player can drop one or all items in the current location. What changes are you going to have to make to your game? Don&amp;rsquo;t program them yet, just specify the changes that need to be made to each class in writing.&lt;/p></description></item><item><title>Exercise 13: CRC Cards</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-13/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please bring these exercises P1 and P2 printed out or written out with you to lab.
Please have your name on your page.&lt;/p>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> How do you obtain tickets to go see a movie? Write down the steps that you take, in order.&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> If you have tickets and have to cancel, what do you have to do? Write down the steps, in order.&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> Read up on the
&lt;a href="https://c2.com/doc/oopsla89/paper.html">Class-Responsibility-Collaboration Card method (CRC Cards)&lt;/a>.
This must be read before class, as you will not be able to do the exercise if you have no idea what this is.&lt;/p></description></item><item><title>Lab Startup</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-00/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-00/</guid><description>&lt;p>Welcome to the laboratory - that&amp;rsquo;s what we call these rooms filled with computer equipment. Each computer in WH C 576 and WH C 579 is a so-called dual-boot computer that can boot to Windows or Ubuntu Linux, or Mac OS in WH C 537. As computer science students we expect you to be able to deal with Windows, Unix, and Mac OS operating systems.&lt;/p>
&lt;p>We have lots of rules for the labs, as they are used by many different people during the week. Usually we&amp;rsquo;re in one of three available labs, you find an overview of them including a link to the rules (&amp;ldquo;Laborordnung&amp;rdquo;) &lt;a href="https://imi-bachelor.htw-berlin.de/studium/labore/">here&lt;/a>.&lt;/p></description></item></channel></rss>