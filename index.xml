<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Miscellany on Prof. Dr. Barne Kleinen</title><link>https://bkleinen.github.io/</link><description>Recent content in Miscellany on Prof. Dr. Barne Kleinen</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://bkleinen.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Info 2</title><link>https://bkleinen.github.io/classes/ss2012/info2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2012/info2/</guid><description>&lt;ul>
&lt;li>&lt;/li>
&lt;/ul></description></item><item><title>Informatics 1 (WS2011/2012)</title><link>https://bkleinen.github.io/classes/ws2011/info1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2011/info1/</guid><description>&lt;h1 id="b11-informatik-1">B1.1 Informatik 1&lt;/h1>
&lt;h1 id="wichtige-links">Wichtige Links&lt;/h1>
&lt;ul>
&lt;li>[Kurs in Moodle][1]&lt;/li>
&lt;li>[Kurs im LSF][2]&lt;/li>
&lt;li>Bluej-Projekte: [Book Projects (zip file, 1.7Mb)][3]&lt;/li>
&lt;li>[Grading Scale][4]&lt;/li>
&lt;/ul>
&lt;p>Informatik 1 ist eine Einführung in die (Objektorientierte) Programmierung, mit Java und BlueJ. Ich orientiere ich mich am Info1-Konzept von Prof. Dr. Weber-Wulff, dessen Webseite Sie [hier finden können][5], aber nicht ansehen müssen. Die für unseren Kurs relevanten Informationen werden Sie jeweils hier bzw. in Moodle finden.&lt;/p>
&lt;p>Die Kurstermine finden Sie im LSF:[ B1.1 Informatik 1][7] : 2x die Woche “Seminaristischer Unterricht” (SU) und am Freitag nachmittag [für jede Gruppe jeweils 2h Labor][8].&lt;/p></description></item><item><title>Praxisprojekt</title><link>https://bkleinen.github.io/classes/ws2011/praxisprojekt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2011/praxisprojekt/</guid><description/></item><item><title>Repetition - Finger Exercises</title><link>https://bkleinen.github.io/classes/ss2024/info2/material/00_repetition_info1_finger_exercises/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/material/00_repetition_info1_finger_exercises/</guid><description>&lt;p>This is a small collection of programming finger exercises to get you back to
programming java, and to get to know your new programming environment.&lt;/p>
&lt;p>I&amp;rsquo;ve numbered them for easier referencing in the Q&amp;amp;A.&lt;/p>
&lt;h2 id="basic-exercises">Basic Exercises&lt;/h2>
&lt;h3 id="finger-exercise-1-count-0s-in-an-array">Finger Exercise 1: Count 0s in an array&lt;/h3>
&lt;p>Write a method that takes an integer array as parameter and returns the number of 0 contained in it.&lt;/p>
&lt;h3 id="finger-exercise-2-count-occurrences-of-an-character-in-a-string">Finger Exercise 2: Count occurrences of an character in a String&lt;/h3>
&lt;p>Write a method that takes a String s and a character c as parameters and returns
the number of occurrences of c in s.&lt;/p></description></item><item><title>Repetition - Finger Exercises</title><link>https://bkleinen.github.io/classes/ws2021/info2/material/00_repetition_info1_finger_exercises/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/material/00_repetition_info1_finger_exercises/</guid><description>&lt;p>This is a small collection of programming finger exercises to get you back to
programming java, and to get to know your new programming environment.&lt;/p>
&lt;p>I&amp;rsquo;ve numbered them for easier referencing in the Q&amp;amp;A.&lt;/p>
&lt;h2 id="basic-exercises">Basic Exercises&lt;/h2>
&lt;h3 id="finger-exercise-1-count-0s-in-an-array">Finger Exercise 1: Count 0s in an array&lt;/h3>
&lt;p>Write a method that takes an integer array as parameter and returns the number of 0 contained in it.&lt;/p>
&lt;h3 id="finger-exercise-2-count-occurrences-of-an-character-in-a-string">Finger Exercise 2: Count occurrences of an character in a String&lt;/h3>
&lt;p>Write a method that takes a String s and a character c as parameters and returns
the number of occurrences of c in s.&lt;/p></description></item><item><title>Backus-Naur-Form</title><link>https://bkleinen.github.io/material/languages/bnf/</link><pubDate>Fri, 08 Oct 2021 21:32:10 +0200</pubDate><guid>https://bkleinen.github.io/material/languages/bnf/</guid><description>&lt;h2 id="the-gist">The Gist&lt;/h2>
&lt;p>You might see something like&amp;hellip;.&lt;/p>
&lt;p>if your repository is&lt;/p>
&lt;pre>&lt;code> https://github.com/&amp;lt;organisation&amp;gt;/&amp;lt;repo&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>the entry in your &lt;code>.git/config&lt;/code> would be&lt;/p>
&lt;pre>&lt;code> [remote &amp;quot;origin&amp;quot;]
 url = git@github.com:&amp;lt;organisation&amp;gt;/&amp;lt;repo&amp;gt;.git
&lt;/code>&lt;/pre>
&lt;p>Where &lt;code>\&amp;lt;organisation\&amp;gt;&lt;/code> should be replaced with the github organisation, e.g. &amp;ldquo;htw-imi-info2&amp;rdquo; and
&lt;code>\&amp;lt;repo\&amp;gt;&lt;/code> with the name of the respective git repository, e.g. &amp;ldquo;python-jupyter-notebooks&amp;rdquo;, yielding at this concrete text:&lt;/p>
&lt;pre>&lt;code>https://github.com/htw-imi-info2/python-jupyter-notebooks

[remote &amp;quot;origin&amp;quot;]
 url = git@github.com:htw-imi-info2/python-jupyter-notebooks.git
&lt;/code>&lt;/pre>
&lt;h2 id="rewrite-rules">Rewrite Rules&lt;/h2>
&lt;p>The convention of informally marking placeholders
that should be replaced with the delimiters &lt;code>&amp;lt;&lt;/code> and &lt;code>&amp;gt;&lt;/code> stems from the Backus-Naur-Form (BNF).&lt;/p></description></item><item><title>Notes on Learning Python</title><link>https://bkleinen.github.io/material/languages/python/python/</link><pubDate>Fri, 08 Oct 2021 21:32:10 +0200</pubDate><guid>https://bkleinen.github.io/material/languages/python/python/</guid><description>&lt;h2 id="some-notes-and-tips-on-getting-started-with-the-python-programming-language">Some Notes and Tips on Getting Started with the Python Programming Language&lt;/h2>
&lt;p>There are many, and many good Python resources available, many of them for
free - after all, it&amp;rsquo;s the most frequently used programming language for
introductionary courses.&lt;/p>
&lt;p>&lt;a href="../python-resources/">See Python Resources&lt;/a>&lt;/p>
&lt;h2 id="suggested-path-for-info3--info3">Suggested Path for Info3 &amp;amp; Info3&lt;/h2>
&lt;p>As we are already using IntelliJ IDEA, using the Python Flavour of IntelliJ IDEA called &amp;ldquo;PyCharm&amp;rdquo; doesn&amp;rsquo;t have that steep of a learning curve.&lt;/p></description></item><item><title>Aktuelle Themen II Agile Entwicklung mit Ruby on Rails</title><link>https://bkleinen.github.io/classes/ws2011/wtat1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2011/wtat1/</guid><description>Aktuelle Themen II Agile Entwicklung mit Ruby on Rails
- no further content here</description></item><item><title>Info 3</title><link>https://bkleinen.github.io/classes/ws2012/info3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2012/info3/</guid><description/></item><item><title>Praxisprojekt Wheelmap Spiel MapATag</title><link>https://bkleinen.github.io/classes/ss2012/praxisprojekt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2012/praxisprojekt/</guid><description>&lt;p>&lt;a href="https://imi-bachelor.htw-berlin.de/studium/projekte/showtime-im-sommersemester-2012/#c11190">-&amp;gt; SG-Seite&lt;/a>&lt;/p></description></item><item><title>Repetition - Terms</title><link>https://bkleinen.github.io/classes/ss2024/info2/material/02_terms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/material/02_terms/</guid><description>&lt;h2 id="these-are-the-terms-from-the-info1-book">These are the Terms from the Info1 Book.&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Chapter&lt;/th>
 &lt;th style="text-align: left">Term&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 01&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">object&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">instance&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">method&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">signature&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">parameter&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">type&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">state&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">source code&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">return value / result&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">method calling&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">compiler&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 02&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">field / instance variable&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">constructor&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">method&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">method signature&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">method body&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">parameter&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">accessor method&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">mutator method&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">declaration&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">initialization&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">block&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">statement&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">assignment statement&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">conditional statement&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">return statement&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">result type&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">comment&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">expression&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">boolean expression&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">operator&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">variable&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">local variable&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">scope&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">lifetime&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">actual parameter&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">formal parameters&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 03&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">abstraction&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">object creation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">modularization&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">divide and conquer&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">class diagram&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">object diagram&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">instance diagram&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">object reference&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">overloading&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">internal method call&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">external method call&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">dot notation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">debugger&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">breakpoint&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">classes define types&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">primitive type&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 04 + 07&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">collection&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">array&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">iterator&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">for-each-loop&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">while loop&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">for loop&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">index&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">import statement&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">library&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">package&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">anonymous object&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">null&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">chapter 05&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">lambda&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">functional style&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">streams&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">filter&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">map&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">reduce&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">pipeline&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 06&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">interface&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">implementation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">map&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">set&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">javadoc&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">access modifier&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">information hiding&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">coupling&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">class variable&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">static&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">constant&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">final&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">java library&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">library documentation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">documentation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">immutable&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">static variables&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 09&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">09&lt;/td>
 &lt;td style="text-align: left">testing&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">09&lt;/td>
 &lt;td style="text-align: left">debugging&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">09&lt;/td>
 &lt;td style="text-align: left">positive testing&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">09&lt;/td>
 &lt;td style="text-align: left">negative testing&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">09&lt;/td>
 &lt;td style="text-align: left">assertion&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">09&lt;/td>
 &lt;td style="text-align: left">fixture&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">09&lt;/td>
 &lt;td style="text-align: left">walkthrough&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 08&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">coupling&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">cohesion&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">code duplication&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">encapsulation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">responsibility-driven design&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">localizing change&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">method cohesion&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">class cohesion&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">refactoring&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">switch statement&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 10&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">inheritance&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">superclass (parent),&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">subclass (child)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">is-a&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">inheritance hierarchy&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">superclass constructors&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">reuse&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">abstract class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">subtype&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">substituion&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">variables and subtypes&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">polymorphic variable&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">cast&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">object&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">autoboxing&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">wrapper classes&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 11&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">static type&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">dynamic type&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">overriding&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">method polymorphism&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">toString&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">protected&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">redefinition&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">method lookup&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">method dispatch&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">method polymorphism&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 11&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">abstract method&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">abstract class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">concrete class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">abstract subclass&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">multiple inheritance&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">interface (java construct)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">implements (keyword)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 13 (not covered)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">swing&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">component&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">layout&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">event&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">event handling&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">event listener&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">frame&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">menu bar&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">menu menu item&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">content pane&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">modal dialog&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">anonymous inner class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">final variable&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">image formats&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 14&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">exception&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">unchecked exception&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">checked exception&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">exception handler&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">assertion&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">serialization&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Repetition - Terms</title><link>https://bkleinen.github.io/classes/ws2021/info2/material/02_terms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/material/02_terms/</guid><description>&lt;h2 id="these-are-the-terms-from-the-info1-book">These are the Terms from the Info1 Book.&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Chapter&lt;/th>
 &lt;th style="text-align: left">Term&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 01&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">object&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">instance&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">method&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">signature&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">parameter&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">type&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">state&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">source code&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">return value / result&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">method calling&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">compiler&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 02&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">field / instance variable&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">constructor&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">method&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">method signature&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">method body&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">parameter&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">accessor method&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">mutator method&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">declaration&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">initialization&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">block&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">statement&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">assignment statement&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">conditional statement&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">return statement&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">result type&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">comment&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">expression&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">boolean expression&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">operator&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">variable&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">local variable&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">scope&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">lifetime&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">actual parameter&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">formal parameters&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 03&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">abstraction&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">object creation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">modularization&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">divide and conquer&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">class diagram&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">object diagram&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">instance diagram&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">object reference&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">overloading&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">internal method call&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">external method call&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">dot notation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">debugger&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">breakpoint&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">classes define types&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">primitive type&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 04 + 07&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">collection&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">array&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">iterator&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">for-each-loop&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">while loop&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">for loop&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">index&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">import statement&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">library&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">package&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">anonymous object&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">null&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">chapter 05&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">lambda&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">functional style&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">streams&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">filter&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">map&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">reduce&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">pipeline&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 06&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">interface&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">implementation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">map&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">set&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">javadoc&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">access modifier&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">information hiding&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">coupling&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">class variable&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">static&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">constant&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">final&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">java library&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">library documentation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">documentation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">immutable&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">static variables&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 09&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">09&lt;/td>
 &lt;td style="text-align: left">testing&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">09&lt;/td>
 &lt;td style="text-align: left">debugging&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">09&lt;/td>
 &lt;td style="text-align: left">positive testing&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">09&lt;/td>
 &lt;td style="text-align: left">negative testing&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">09&lt;/td>
 &lt;td style="text-align: left">assertion&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">09&lt;/td>
 &lt;td style="text-align: left">fixture&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">09&lt;/td>
 &lt;td style="text-align: left">walkthrough&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 08&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">coupling&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">cohesion&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">code duplication&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">encapsulation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">responsibility-driven design&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">localizing change&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">method cohesion&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">class cohesion&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">refactoring&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">switch statement&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 10&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">inheritance&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">superclass (parent),&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">subclass (child)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">is-a&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">inheritance hierarchy&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">superclass constructors&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">reuse&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">abstract class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">subtype&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">substituion&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">variables and subtypes&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">polymorphic variable&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">cast&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">object&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">autoboxing&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">wrapper classes&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 11&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">static type&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">dynamic type&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">overriding&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">method polymorphism&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">toString&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">protected&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">redefinition&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">method lookup&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">method dispatch&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">method polymorphism&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 11&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">abstract method&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">abstract class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">concrete class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">abstract subclass&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">multiple inheritance&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">interface (java construct)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">implements (keyword)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 13 (not covered)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">swing&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">component&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">layout&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">event&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">event handling&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">event listener&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">frame&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">menu bar&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">menu menu item&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">content pane&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">modal dialog&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">anonymous inner class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">final variable&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">image formats&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">chapter 14&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">exception&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">unchecked exception&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">checked exception&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">exception handler&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">assertion&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">serialization&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Aktuelle Themen II - Agile Entwicklung mit Ruby on Rails</title><link>https://bkleinen.github.io/classes/ws2012/wtat2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2012/wtat2/</guid><description/></item><item><title>Microcontroller Programmierung mit Arduino</title><link>https://bkleinen.github.io/classes/ss2013/if1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2013/if1/</guid><description>&lt;p>Microcontroller Programmierung mit Arduino
auf der
Informatica Feminale, Bremen, 1/2 Woche, 1 ECTS&lt;/p></description></item><item><title>Java für Einsteigerinnen II</title><link>https://bkleinen.github.io/classes/ss2013/if2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2013/if2/</guid><description>&lt;p>Java für Einsteigerinnen II
auf der
Informatica Feminale Bremen, 1 Woche, 3 ECTS&lt;/p></description></item><item><title>Lab 01: Application Design</title><link>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-01/</guid><description>&lt;figure>&lt;img src="https://bkleinen.github.io/images/classes/info2/crc-cards.jpg"
 alt="CRC Cards">&lt;figcaption>
 &lt;p>CRC Cards&lt;/p>
 &lt;/figcaption>
&lt;/figure>

&lt;h2 id="learning-goals">Learning Goals&lt;/h2>
&lt;p>After this lab you should be able to agree with each of the following statements.&lt;/p>
&lt;p>I can use CRC Cards to design an application:&lt;/p>
&lt;ul>
&lt;li>Using the underline methods, I can identify candidates for classes, methods and fields.&lt;/li>
&lt;li>By working through scenarios I can identify cases where a class needs to be split up.&lt;/li>
&lt;li>By working through scenarios I can identify cases where classes need to be merged.&lt;/li>
&lt;li>By working through scenarios I can identify cases where additional classes need to be added.&lt;/li>
&lt;li>By working through scenarios I can identify what data needs to be stored.&lt;/li>
&lt;/ul>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> Find out what the &lt;em>Class-Responsibility-Collaboration Card method&lt;/em> is, what the use of CRC Cards is and how they are created. The following resources can be of help:&lt;/p></description></item><item><title>1 - Lab Startup</title><link>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-01-startup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-01-startup/</guid><description>&lt;p>&lt;img src="../images/workplace.jpg" alt="Workplace" title="workplace">
&lt;!-- raw HTML omitted -->Nerd Workplace. Foto by &lt;a href="https://www.flickr.com/photos/slworking/8539204081/">slworking2&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This Startup Lab is about installing the tools you need for Python Programming and getting some (more) hands-on experience with git, so start with that. If bored, move on to try python.&lt;/p>
&lt;h3 id="which-computer-to-use">Which Computer to use?&lt;/h3>
&lt;p>In my experience, all Students prefer to use their own computers, which is possible as all Software
we&amp;rsquo;ll use and need is free to use (at least for Students).&lt;/p></description></item><item><title>Design of the Original</title><link>https://bkleinen.github.io/material/info1/clock_display_refactoring/original_clock_display/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/info1/clock_display_refactoring/original_clock_display/</guid><description>&lt;a href =".."> up &lt;/a>




 &lt;a href ="https://bkleinen.github.io/material/info1/clock_display_refactoring/clock_display_critique/">next&amp;gt;&lt;/a>


&lt;p>The #colon;ClockDisplay project is the first example for solving a problem using communicating objects. (in the Book &lt;a href="https://www.bluej.org/objects-first/">&amp;ldquo;Objects First with Java: A Practical Introduction Using Bluej.&amp;rdquo; by David J Barnes and Michael Kölling&lt;/a>)&lt;/p>
&lt;p>Here&amp;rsquo;s a class diagram with the private fields and public methods (Constructors are omitted for clarity):&lt;/p>
&lt;pre class="mermaid">%%{
 init: {
 'theme': 'base',
 'themeVariables': {
 'primaryColor': '#f0cd91', 
 'primaryTextColor': '#000',
 'primaryBorderColor': '#000',
 'lineColor': '#F8B229',
 'secondaryColor': '#006100',
 'tertiaryColor': '#fff'
 }
 }
}%%
classDiagram
 class ClockDisplay
 class NumberDisplay
 ClockDisplay ..> NumberDisplay
 

 class ClockDisplay{
 -NumberDisplay hours
 -NumberDisplay minutes
 -String displayString
 void timeTick()
 void setTime(int hour, int minute)
 String getTime()
 -void updateDisplay()
 }
 
 NumberDisplay: -int limit
 NumberDisplay: -int value
 NumberDisplay: int getValue()
 NumberDisplay: String getDisplayValue()
 NumberDisplay: void setValue(int)
 NumberDisplay: void increment()
&lt;/pre>

&lt;p>Within the example the field &lt;code>displayString&lt;/code> in ClockDisplay is used to simulate the digital display. It is updated after every change to the time by calling the private method &lt;code>updateDisplay&lt;/code> after every change to the time. The two instances of NumberDisplay generate their part of the displayString in &lt;code>getDisplayValue&lt;/code>.
But they also hold their part of the model - the value for hours and minutes respectively.&lt;/p></description></item><item><title>e-Learning Video Summary</title><link>https://bkleinen.github.io/classes/ss2023/info3/material/e-learning-videos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/info3/material/e-learning-videos/</guid><description>&lt;p>This e-learning is about watching one of the many talks about Agile Software Development / Software Craftship / S.O.L.I.D. or TDD principles
available on YouTube and summarizing it.&lt;/p>
&lt;p>I&amp;rsquo;ll post a more detailed overview of my recommendations later this week.&lt;/p>
&lt;p>For the summary, consider doing it as a sketchnote; see my &lt;a href="material/visual/sketchnotes/">Sketchnotes&lt;/a> page for a pointer how to start.
Upload your summary/sketchnote together with the video reference &amp;amp; link (see the &lt;a href="https://www.scribbr.com/apa-examples/youtube/">Info on Scribbr on how to reference a YouTube Video&lt;/a>)&lt;/p></description></item><item><title>Links to frequently used pages</title><link>https://bkleinen.github.io/misc/links/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/misc/links/</guid><description>&lt;h1 id="tägliche-arbeit">Tägliche Arbeit&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>Moodle: &lt;a href="https://moodle.htw-berlin.de/">https://moodle.htw-berlin.de/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Wiki für Studium und Lehre: &lt;a href="https://wiki.htw-berlin.de/">https://wiki.htw-berlin.de/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Sprechstunde: &lt;p >Office Hours can be found in the
 &lt;a href="https://wiki.htw-berlin.de/confluence/display/fb4crskleinen/Office+Hours+Prof.+Kleinen">
 WIKI&lt;/a>.
 Please register there for appointments.
&lt;/p>

&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Wiki - Intranet: &lt;a href="https://wiki.rz.htw-berlin.de/">https://wiki.rz.htw-berlin.de/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>HTW ServiceportalDienstreise, SHK, Wunschzeiten und Lehrplanung: &lt;a href="https://fb-service.htw-berlin.de/">https://fb-service.htw-berlin.de/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Lehrabrechnung: &lt;a href="https://my.htw-berlin.de/">https://my.htw-berlin.de/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Zoom: &lt;a href="https://htw-berlin.zoom.us/">https://htw-berlin.zoom.us/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Account-Service: &lt;a href="https://account.htw-berlin.de">https://account.htw-berlin.de&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://account.htw-berlin.de/lvn/newProof">Lehrabrechnung (&amp;ldquo;Proof of teaching commitment&amp;rdquo;)&lt;/a>&lt;/li>
&lt;li>Account&lt;/li>
&lt;li>Email bearbeiten&lt;/li>
&lt;li>Abwesenheitsnotiz&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="lsf-modulhandbuch">LSF Modulhandbuch&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://lsf.htw-berlin.de/qisserver/rds?state=modulBeschrGast&amp;amp;moduleParameter=modDescr&amp;amp;struct=auswahlBaum&amp;amp;navigation=Y&amp;amp;next=tree.vm&amp;amp;nextdir=qispos/modulBeschr/gast&amp;amp;nodeID=auswahlBaum%7Cabschluss%3Aabschl%3D84%7Cstudiengang%3Astg%3D919%7CstgSpecials%3Avert%3D%2Cschwp%3D%2Ckzfa%3DH%2Cpversion%3D20112%7CkontoOnTop%3Apordnr%3D28584&amp;amp;expand=0&amp;amp;lastState=modulBeschrGast&amp;amp;asi=dTGrTIWIid9e5.VndJR.#auswahlBaum%7Cabschluss%3Aabschl%3D84%7Cstudiengang%3Astg%3D919%7CstgSpecials%3Avert%3D%2Cschwp%3D%2Ckzfa%3DH%2Cpversion%3D20112%7CkontoOnTop%3Apordnr%3D28584">Bachelor ansehen&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://lsf.htw-berlin.de/qisserver/rds?state=modulBeschrBearbeiter&amp;amp;moduleParameter=modDescr&amp;amp;struct=auswahlBaum&amp;amp;navigation=Y&amp;amp;next=tree.vm&amp;amp;nextdir=qispos/modulBeschr/bearbeiter&amp;amp;nodeID=auswahlBaum%7Cabschluss%3Aabschl%3D84%7Cstudiengang%3Astg%3D919%7CstgSpecials%3Avert%3D%2Cschwp%3D%2Ckzfa%3DH%2Cpversion%3D20112%7CkontoOnTop%3Apordnr%3D28584&amp;amp;expand=0&amp;amp;lastState=modulBeschrBearbeiter&amp;amp;asi=dTGrTIWIid9e5.VndJR.#auswahlBaum%7Cabschluss%3Aabschl%3D84%7Cstudiengang%3Astg%3D919%7CstgSpecials%3Avert%3D%2Cschwp%3D%2Ckzfa%3DH%2Cpversion%3D20112%7CkontoOnTop%3Apordnr%3D28584">Bachelor editieren&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://lsf.htw-berlin.de/qisserver/rds?state=modulBeschrGast&amp;amp;moduleParameter=modDescr&amp;amp;struct=auswahlBaum&amp;amp;navigation=Y&amp;amp;next=tree.vm&amp;amp;nextdir=qispos/modulBeschr/gast&amp;amp;nodeID=auswahlBaum%7Cabschluss%3Aabschl%3D90%7Cstudiengang%3Astg%3D920%7CstgSpecials%3Avert%3D%2Cschwp%3D%2Ckzfa%3DH%2Cpversion%3D20162%7CkontoOnTop%3Apordnr%3D37419&amp;amp;expand=0&amp;amp;lastState=modulBeschrGast&amp;amp;asi=dTGrTIWIid9e5.VndJR.#auswahlBaum%7Cabschluss%3Aabschl%3D90%7Cstudiengang%3Astg%3D920%7CstgSpecials%3Avert%3D%2Cschwp%3D%2Ckzfa%3DH%2Cpversion%3D20162%7CkontoOnTop%3Apordnr%3D37419">Master ansehen&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://lsf.htw-berlin.de/qisserver/rds?state=modulBeschrBearbeiter&amp;amp;moduleParameter=modDescr&amp;amp;struct=auswahlBaum&amp;amp;navigation=Y&amp;amp;next=tree.vm&amp;amp;nextdir=qispos/modulBeschr/bearbeiter&amp;amp;nodeID=auswahlBaum%7Cabschluss%3Aabschl%3D90%7Cstudiengang%3Astg%3D920%7CstgSpecials%3Avert%3D%2Cschwp%3D%2Ckzfa%3DH%2Cpversion%3D20162%7CkontoOnTop%3Apordnr%3D37419&amp;amp;expand=0&amp;amp;lastState=modulBeschrBearbeiter&amp;amp;asi=dTGrTIWIid9e5.VndJR.#auswahlBaum%7Cabschluss%3Aabschl%3D90%7Cstudiengang%3Astg%3D920%7CstgSpecials%3Avert%3D%2Cschwp%3D%2Ckzfa%3DH%2Cpversion%3D20162%7CkontoOnTop%3Apordnr%3D37419">Master bearbeiten&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="gelegentlich">Gelegentlich&lt;/h2>
&lt;ul>
&lt;li>Logos und Folien im HTW-Design: &lt;a href="https://corporatedesign.htw-berlin.de/logos/">https://corporatedesign.htw-berlin.de/logos/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.stw.berlin/mensen/mensa-htw-wilhelminenhof.html">Speiseplan der Mensa&lt;/a>&lt;/li>
&lt;li>Gastzugänge Wifi - funktioniert nicht mehr &lt;a href="https://account.htw-berlin.de/guestwifi/index">https://account.htw-berlin.de/guestwifi/index&lt;/a>&lt;/li>
&lt;li>Account / Email bearbeiten: &lt;a href="https://account.htw-berlin.de/">https://account.htw-berlin.de/&lt;/a>&lt;/li>
&lt;li>VPN Anleitung: - weg&lt;/li>
&lt;li>VPN Wenn Client schon installiert ist: Cisco AnyConnect Secure Mobility Client starten, verbinden&lt;/li>
&lt;/ul>
&lt;h2 id="bibliothek">Bibliothek&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://bibliothek.htw-berlin.de">Bibliothek&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://sisis.rz.htw-berlin.de/InfoGuideClient/start.do?Login=opacWH&amp;amp;SEARCHType=2&amp;amp;BaseURL=this">Opac&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sisis.rz.htw-berlin.de/InfoGuideClient/loginpage.do?methodToCall=showLogin">Login&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sisis.rz.htw-berlin.de/InfoGuideClient/start.do?Login=opacWH&amp;amp;SEARCHType=2&amp;amp;BaseURL=this">Verlängern &amp;amp; Suchen: WebOpac&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sisis.rz.htw-berlin.de/InfoGuideClient/start.do">Direkt zur Anmeldung&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bibliothek.htw-berlin.de/literatur-suchen/anschaffungsvorschlag/?no_cache=1">Anschaffungsvorschlag&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="intranet-links">Intranet Links&lt;/h2>
&lt;p>(vorher ins VPN!)&lt;/p></description></item><item><title>Schedule</title><link>https://bkleinen.github.io/classes/ws2024/info3/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2024/info3/schedule/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: right">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">Lecture Topic&lt;/th>
 &lt;th style="text-align: left">Lab&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: right">40&lt;/td>
 &lt;td style="text-align: left">Tue 01/10/2024&lt;/td>
 &lt;td style="text-align: left">Hochschultag&lt;/td>
 &lt;td style="text-align: left">&amp;ndash; no lecture &amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">&lt;/td>
 &lt;td style="text-align: left">Thu 03/10/2024&lt;/td>
 &lt;td style="text-align: left">Feiertag&lt;/td>
 &lt;td style="text-align: left">&amp;ndash; no lecture &amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: right">41&lt;/td>
 &lt;td style="text-align: left">Tue 08/10/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Introduction to Info3, Source Code Management&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">&lt;/td>
 &lt;td style="text-align: left">Thu 10/10/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Source Code Management (GIT) and How to learn Python&lt;/td>
 &lt;td style="text-align: left">Lab 1: Python and Git Practice&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: right">42&lt;/td>
 &lt;td style="text-align: left">Tue 15/10/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Introduction to Software Engineering and Software Development Processes&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">&lt;/td>
 &lt;td style="text-align: left">Thu 17/10/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">System Modeling and Architectural Design&lt;/td>
 &lt;td style="text-align: left">Lab 1: Python and Git Practice&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: right">43&lt;/td>
 &lt;td style="text-align: left">Tue 22/10/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Requirements Engineering&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">&lt;/td>
 &lt;td style="text-align: left">Thu 24/10/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">UML &amp;amp; System Modeling, Use Cases and User Stories&lt;/td>
 &lt;td style="text-align: left">Lab 2: Use Cases and Class Diagrams&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: right">44&lt;/td>
 &lt;td style="text-align: left">Tue 29/10/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">UML &amp;amp; System Modeling: Requirements, Product Owner Game&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">&lt;/td>
 &lt;td style="text-align: left">Thu 31/10/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Software Design Patterns (GOF)&lt;/td>
 &lt;td style="text-align: left">Lab 2: Use Cases and Class Diagrams&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: right">45&lt;/td>
 &lt;td style="text-align: left">Tue 05/11/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Software Testing&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">&lt;/td>
 &lt;td style="text-align: left">Thu 07/11/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Agile Development, Scrum&lt;/td>
 &lt;td style="text-align: left">Lab 3: Sequence Diagrams and State Machines&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: right">46&lt;/td>
 &lt;td style="text-align: left">Tue 12/11/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../material/e-learning-reviews/">e-learning / Software Design Patterns (GOF) or Clean Code&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">&lt;/td>
 &lt;td style="text-align: left">Thu 14/11/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../material/e-learning-videos/">e-learning / Video Summary&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: right">47&lt;/td>
 &lt;td style="text-align: left">Tue 19/11/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Clean Code Intro &amp;amp; Poster preparation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">&lt;/td>
 &lt;td style="text-align: left">Thu 21/11/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Clean Code Poster Session&lt;/td>
 &lt;td style="text-align: left">Lab 3: Sequence Diagrams and State Machines&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: right">48&lt;/td>
 &lt;td style="text-align: left">Tue 26/11/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Agile Testing Practices, Code Quality&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">&lt;/td>
 &lt;td style="text-align: left">Thu 28/11/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Legacy Code &amp;amp; Refactoring&lt;/td>
 &lt;td style="text-align: left">Lab 4: Testing and Refactoring&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: right">49&lt;/td>
 &lt;td style="text-align: left">Tue 03/12/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">SOLID Principles, Refactoring to Patterns&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">&lt;/td>
 &lt;td style="text-align: left">Thu 05/12/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">OO In Depth: Composition and Inheritance , Dynamic Typing, Duck Typing&lt;/td>
 &lt;td style="text-align: left">Lab 4: Testing and Refactoring&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: right">50&lt;/td>
 &lt;td style="text-align: left">Tue 10/12/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">More on Design&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">&lt;/td>
 &lt;td style="text-align: left">Thu 12/12/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Application Architectures &amp;amp; System Models&lt;/td>
 &lt;td style="text-align: left">Lab 5: Enterprise Applications&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: right">51&lt;/td>
 &lt;td style="text-align: left">Tue 17/12/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Web Applications Intro, Patterns of Enterprise Application Architecture (POEAA)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">&lt;/td>
 &lt;td style="text-align: left">Thu 19/12/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">More on Inheritance, Composition and Inheritance (Poodr Chapter 8)&lt;/td>
 &lt;td style="text-align: left">Lab 5: Enterprise Applications&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">52&lt;/td>
 &lt;td style="text-align: left">Tue 24/12/2024&lt;/td>
 &lt;td style="text-align: left">Winterpause&lt;/td>
 &lt;td style="text-align: left">&amp;ndash; no lecture &amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">&lt;/td>
 &lt;td style="text-align: left">Thu 26/12/2024&lt;/td>
 &lt;td style="text-align: left">Winterpause&lt;/td>
 &lt;td style="text-align: left">&amp;ndash; no lecture &amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">1&lt;/td>
 &lt;td style="text-align: left">Tue 31/12/2024&lt;/td>
 &lt;td style="text-align: left">Winterpause&lt;/td>
 &lt;td style="text-align: left">&amp;ndash; no lecture &amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">&lt;/td>
 &lt;td style="text-align: left">Thu 02/01/2025&lt;/td>
 &lt;td style="text-align: left">Winterpause&lt;/td>
 &lt;td style="text-align: left">&amp;ndash; no lecture &amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: right">2&lt;/td>
 &lt;td style="text-align: left">Tue 07/01/2025&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Continuous Integration &amp;amp; Deployment&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">&lt;/td>
 &lt;td style="text-align: left">Thu 09/01/2025&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Dependencies &amp;amp; how to test and handle them&lt;/td>
 &lt;td style="text-align: left">Lab 6: Refactoring to Patterns&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: right">3&lt;/td>
 &lt;td style="text-align: left">Tue 14/01/2025&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Internationalization and Localization&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">&lt;/td>
 &lt;td style="text-align: left">Thu 16/01/2025&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Repetition&lt;/td>
 &lt;td style="text-align: left">Lab 6: Refactoring to Patterns&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: right">4&lt;/td>
 &lt;td style="text-align: left">Tue 21/01/2025&lt;/td>
 &lt;td style="text-align: left">1.PZ&lt;/td>
 &lt;td style="text-align: left">&amp;ndash; the dates below are subject to change depending on the exam date &amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">&lt;/td>
 &lt;td style="text-align: left">Thu 23/01/2025&lt;/td>
 &lt;td style="text-align: left">1.PZ&lt;/td>
 &lt;td style="text-align: left">Probeklausur (TBD)&lt;/td>
 &lt;td style="text-align: left">Trail Exam and Late Lab Reviews&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: right">5&lt;/td>
 &lt;td style="text-align: left">Tue 28/01/2025&lt;/td>
 &lt;td style="text-align: left">1.PZ&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">&lt;/td>
 &lt;td style="text-align: left">Thu 30/01/2025&lt;/td>
 &lt;td style="text-align: left">1.PZ&lt;/td>
 &lt;td style="text-align: left">Exam (TBD - refer to LSF for details and the definite time &amp;amp; date!!)&lt;/td>
 &lt;td style="text-align: left">Exam&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: right">6&lt;/td>
 &lt;td style="text-align: left">Tue 04/02/2025&lt;/td>
 &lt;td style="text-align: left">1.PZ&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">&lt;/td>
 &lt;td style="text-align: left">Thu 06/02/2025&lt;/td>
 &lt;td style="text-align: left">1.PZ&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Lab 6 Reviews&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: right">&lt;/td>
 &lt;td style="text-align: left">Fri 07/02/2025&lt;/td>
 &lt;td style="text-align: left">1.PZ&lt;/td>
 &lt;td style="text-align: left">&lt;strong>&lt;a href="https://showtime.f4.htw-berlin.de/">10:00 Showtime in H001!&lt;/a>&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">Lab 7: Showtime&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;hr></description></item><item><title>Schedule</title><link>https://bkleinen.github.io/classes/ss2023/info3/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/info3/schedule/</guid><description>&lt;p>This schedule is, more than always, tentative.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Lecture Topic&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">Lab (Tue &amp;amp; Wed)&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">Tue 04/04/2023&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed 05/04/2023&lt;/td>
 &lt;td style="text-align: left">Introduction to Info3, Source Code Management&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">No Lab.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Tue 11/04/2023&lt;/td>
 &lt;td style="text-align: left">Source Code Management (GIT)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-01-startup">1 - Lab Startup&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed 12/04/2023&lt;/td>
 &lt;td style="text-align: left">Introduction to Software Engineering and Software Development Processes&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Tue 18/04/2023&lt;/td>
 &lt;td style="text-align: left">System Modeling, Architectural Design, Requirement Engineering&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-02-python">2 - Learning Python&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed 19/04/2023&lt;/td>
 &lt;td style="text-align: left">UML &amp;amp; System Modeling, Use Cases and User Stories&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Tue 25/04/2023&lt;/td>
 &lt;td style="text-align: left">UML &amp;amp; System Modeling: Requirements, Product Owner Game&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-03-pythonproject">3 - Python Project&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed 26/04/2023&lt;/td>
 &lt;td style="text-align: left">&amp;ndash; no lecture &amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Tue 02/05/2023&lt;/td>
 &lt;td style="text-align: left">Software Processes II / Requirements Analysis&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-04-usecases-classdiagrams">4 - Use Cases and Class Diagrams Part I&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed 03/05/2023&lt;/td>
 &lt;td style="text-align: left">Software Design Patterns (GOF)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Tue 09/05/2023&lt;/td>
 &lt;td style="text-align: left">Clean Code Intro &amp;amp; Poster preparation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-05-usecases-classdiagrams">5 - Use Cases and Class Diagrams Part II&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed 10/05/2023&lt;/td>
 &lt;td style="text-align: left">Clean Code Poster Session&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Tue 16/05/2023&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../material/e-learning-reviews/">e-learning / Software Design Patterns (GOF) or Clean Code&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Himmelfahrt&lt;/strong>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed 17/05/2023&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../material/e-learning-videos/">e-learning / Video Summary&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Tue 23/05/2023&lt;/td>
 &lt;td style="text-align: left">Agile Development, Scrum&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-06-sequence-diagrams">6 - Sequence Diagrams&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed 24/05/2023&lt;/td>
 &lt;td style="text-align: left">Legacy Code &amp;amp; Refactoring&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Tue 30/05/2023&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed 31/05/2023&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Tue 06/06/2023&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed 07/06/2023&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Tue 13/06/2023&lt;/td>
 &lt;td style="text-align: left">Software Testing, TDD, Code Quality&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-07-testing">7 - Testing&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed 14/06/2023&lt;/td>
 &lt;td style="text-align: left">SOLID Principles, Refactoring to Patterns&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Tue 20/06/2023&lt;/td>
 &lt;td style="text-align: left">OO In Depth: Composition and Inheritance , Dynamic Typing, Duck Typing&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-08-gilded-rose">8 - Gilded Rose&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed 21/06/2023&lt;/td>
 &lt;td style="text-align: left">More on Design&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Tue 27/06/2023&lt;/td>
 &lt;td style="text-align: left">Application Architectures &amp;amp; System Models&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-09-state-machines">9 - State Machine Diagrams&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed 28/06/2023&lt;/td>
 &lt;td style="text-align: left">Web Applications Intro, Patterns of Enterprise Application Architecture (POEAA)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Tue 04/07/2023&lt;/td>
 &lt;td style="text-align: left">More on Inheritance, Composition and Inheritance (Poodr Chapter 8)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-10-webapps-1">10 - Web Applications 1&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed 05/07/2023&lt;/td>
 &lt;td style="text-align: left">Dependencies &amp;amp; how to test and handle them, Internationalization and Localization&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Tue 11/07/2023&lt;/td>
 &lt;td style="text-align: left">Continuous Integration &amp;amp; Deployment&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-11-webapps-2">11 - Web Applications 2&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed 12/07/2023&lt;/td>
 &lt;td style="text-align: left">Probeklausur (vorr. WH-C 576/579)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">Tue 18/07/2023&lt;/td>
 &lt;td style="text-align: left">TBD/Repetition (Exam Period Starts)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed 19/07/2023&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Exam PZ1&lt;/strong> (refer to LSF for details and the definite time &amp;amp; date!!)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">30&lt;/td>
 &lt;td style="text-align: left">Tue 25/07/2023&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed 26/07/2023&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 27/07/2023&lt;/td>
 &lt;td style="text-align: left">15:00-16:00 Klausureinsicht in einem der 3 Labs, alternativ ab 9.8. in der &lt;a href="https://wiki.htw-berlin.de/confluence/display/fb4crskleinen/Office+Hours+Prof.+Kleinen">Sprechstunde&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">31&lt;/td>
 &lt;td style="text-align: left">Tue 01/08/2023&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed 02/08/2023&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 04/08/2023&lt;/td>
 &lt;td style="text-align: left">&lt;strong>&lt;a href="https://showtime.f4.htw-berlin.de/">10:00 Showtime in H001!&lt;/a>&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h4 id="klausurtermine-lt-lsf-stand-2762023">Klausurtermine lt. LSF Stand 27.6.2023:&lt;/h4>
&lt;p>PZ1: Mi.	15:45 bis 17:15	Einzel	am 19.07.2023&lt;/p></description></item><item><title>Lab 02: Programming &amp; Tools, Review of CRC Model</title><link>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-02/</guid><description>&lt;h2 id="learning-goals">Learning Goals&lt;/h2>
&lt;p>After this lab you should be able to agree with each of the following statements&lt;/p>
&lt;p>I am familiar with programming in IntelliJ:&lt;/p>
&lt;ul>
&lt;li>I can create a new Java project in IntelliJ&lt;/li>
&lt;li>I remember most of the concepts from A1 Ex1&lt;/li>
&lt;li>I can run my new Java project in IntelliJ&lt;/li>
&lt;/ul>
&lt;p>I am ready to use Git:&lt;/p>
&lt;ul>
&lt;li>I can clone an online repository&lt;/li>
&lt;li>I can create an empty repository on GitLab or GitHub&lt;/li>
&lt;li>I can update my local repository&amp;rsquo;s remotes&lt;/li>
&lt;li>I can add changes to be committed&lt;/li>
&lt;li>I can commit changes&lt;/li>
&lt;li>I can push changes&lt;/li>
&lt;/ul>
&lt;p>I have reviewed the Domain Model&lt;/p></description></item><item><title>2 - Learning Python</title><link>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-02-python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-02-python/</guid><description>&lt;p>As always, you need to prepare a report together and each hand in this same report in moodle.&lt;/p>
&lt;h2 id="part-1-python-learning-with-unit-tests">Part 1: Python Learning with Unit Tests&lt;/h2>
&lt;p>Continue the collaborative work on the Python Learning Repository: &lt;a href="https://github.com/htw-imi-info3/python-learning">https://github.com/htw-imi-info3/python-learning&lt;/a>.&lt;/p>
&lt;p>** note that you need write permissions for the repository! I&amp;rsquo;ll add everyone to the team on github in the labs. **&lt;/p>
&lt;p>This part can be done together, but each person must have their own topic/file and each one must commit a new file to the repo and review two other files. However, you can (and should) help each other and discuss them in your group.&lt;/p></description></item><item><title>e-learning reviews - Software Design Patterns (GOF) or Clean Code</title><link>https://bkleinen.github.io/classes/ss2023/info3/material/e-learning-reviews/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/info3/material/e-learning-reviews/</guid><description>&lt;p>This e-learning is about watching reviewing your own and another python project and apply
clean code principles and/or find patterns that are worth applying for the project.&lt;/p>
&lt;p>I will add instructions on how to upload your project later this week
and will do a raffle on saturday for the &amp;ldquo;other&amp;rdquo; project.&lt;/p></description></item><item><title>Info2 SS2015 Schedule</title><link>https://bkleinen.github.io/classes/ss2015/info2/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/info2/schedule/</guid><description>&lt;h2 id="tentative-schedule---lab-topics-are-subject-to-change">Tentative Schedule - Lab Topics are subject to change!&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">Lecture&lt;/th>
 &lt;th style="text-align: left">Lecture Topic&lt;/th>
 &lt;th style="text-align: left">Lab&lt;/th>
 &lt;th style="text-align: left">Lab Topic&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1/15&lt;/td>
 &lt;td style="text-align: left">Fri, 10 Apr 2015&lt;/td>
 &lt;td style="text-align: left">Welcome Back, Overview, Designing Applications&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2/16&lt;/td>
 &lt;td style="text-align: left">Tue, 14 Apr 2015&lt;/td>
 &lt;td style="text-align: left">Toolbox: Java, Eclipse&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Designing an Application, CRC Cards (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 17 Apr 2015&lt;/td>
 &lt;td style="text-align: left">Error Handling and Exceptions reviewed,&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3/17&lt;/td>
 &lt;td style="text-align: left">Tue, 21 Apr 2015&lt;/td>
 &lt;td style="text-align: left">Networking in Java. File I/O.&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Implementing CRC cards (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 24 Apr 2015&lt;/td>
 &lt;td style="text-align: left">Double Lecture: Concurrency; Binary Search, Complexity&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4/18&lt;/td>
 &lt;td style="text-align: left">Tue, 28 Apr 2015&lt;/td>
 &lt;td style="text-align: left">Properties of Algorithms, Maximum Contiguous Subsequence Sum&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Networking Exercise (Pre-Lab!&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 01 May 2015&lt;/td>
 &lt;td style="text-align: left">&amp;mdash; NO LECTURE - 1. Mai - Bank Holiday &amp;mdash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5/19&lt;/td>
 &lt;td style="text-align: left">Tue, 05 May 2015&lt;/td>
 &lt;td style="text-align: left">Arrays and Lists&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Histogram (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 08 May 2015&lt;/td>
 &lt;td style="text-align: left">Stacks&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6/20&lt;/td>
 &lt;td style="text-align: left">Tue, 12 May 2015&lt;/td>
 &lt;td style="text-align: left">Recursion&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Execution Times (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 15 May 2015&lt;/td>
 &lt;td style="text-align: left">e-learning (find the exercise in moodle)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7/21&lt;/td>
 &lt;td style="text-align: left">Tue, 19 May 2015&lt;/td>
 &lt;td style="text-align: left">Queues, Priority Queues, Collections: Sets, Bags, Maps.&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">Reverse Polish Notation (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 22 May 2015&lt;/td>
 &lt;td style="text-align: left">Recursion&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8/22&lt;/td>
 &lt;td style="text-align: left">Tue, 26 May 2015&lt;/td>
 &lt;td style="text-align: left">Sorting, Divide &amp;amp; Conquer, Maximum Contiguous Subsequence revisited&lt;/td>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">Recursive Triangles (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 29 May 2015&lt;/td>
 &lt;td style="text-align: left">Quicksort, Radix Sort&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9/23&lt;/td>
 &lt;td style="text-align: left">Tue, 02 Jun 2015&lt;/td>
 &lt;td style="text-align: left">Random numbers, Probabilistic Algorithms&lt;/td>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">Eight Queens (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 05 Jun 2015&lt;/td>
 &lt;td style="text-align: left">Graphs, Graph Algorithms&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10/24&lt;/td>
 &lt;td style="text-align: left">Tue, 09 Jun 2015&lt;/td>
 &lt;td style="text-align: left">Searching, Nearest Neighbor, Branch and Bound&lt;/td>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">Probablistic Algorithms (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 12 Jun 2015&lt;/td>
 &lt;td style="text-align: left">Trees, Heapsort, Sorting Algorithms Conclusion&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11/25&lt;/td>
 &lt;td style="text-align: left">Tue, 16 Jun 2015&lt;/td>
 &lt;td style="text-align: left">(ausgefallen)&lt;/td>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">(ausgefallen)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 19 Jun 2015&lt;/td>
 &lt;td style="text-align: left">Finite State Automata&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12/26&lt;/td>
 &lt;td style="text-align: left">Tue, 23 Jun 2015&lt;/td>
 &lt;td style="text-align: left">Finite State Automata + AVL Trees&lt;/td>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">Getting from A to B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 26 Jun 2015&lt;/td>
 &lt;td style="text-align: left">(ausgefallen)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13/27&lt;/td>
 &lt;td style="text-align: left">Tue, 30 Jun 2015&lt;/td>
 &lt;td style="text-align: left">Hashs / String Searching and Pattern Matching&lt;/td>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">Finite State Automata and Sorting&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Tue, 30 Jun 2015&lt;/td>
 &lt;td style="text-align: left">Scanning and Parsing Algorithms&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14/28&lt;/td>
 &lt;td style="text-align: left">Tue, 07 Jul 2015&lt;/td>
 &lt;td style="text-align: left">Ruby&lt;/td>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">Scrabble Cheater Basic Edition (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Tue, 07 Jul 2015&lt;/td>
 &lt;td style="text-align: left">Ruby&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15/29&lt;/td>
 &lt;td style="text-align: left">Tue, 14 Jul 2015&lt;/td>
 &lt;td style="text-align: left">Trial Exam&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">Scrabble Cheater Deluxe (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 17 Jul 2015&lt;/td>
 &lt;td style="text-align: left">Repetition / Trial Exam Review&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16/30&lt;/td>
 &lt;td style="text-align: left">Tue, 21 Jul 2015&lt;/td>
 &lt;td style="text-align: left">Exam&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 24 Jul 2015&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17/31&lt;/td>
 &lt;td style="text-align: left">Tue, 28 Jul 2015&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;-&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 31 Jul 2015&lt;/td>
 &lt;td style="text-align: left">IMI Showtime&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Projektvergabe und Belegung</title><link>https://bkleinen.github.io/classes/ss2024/projects/organisation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/projects/organisation/</guid><description>&lt;p>Die Projekte werden NUR beim Projektvergabetermin verteilt! D.h. um an einem Projekt teilnehmen zu können, müssen Sie an diesem Termin teilnehmen.&lt;/p>
&lt;p>&lt;strong>Bachelor: Mittwoch, 10.04.2024 12:15 -13:45 WH-C 349 (Zeit im LSF mit 12:45 ist falsch)&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Master: Mittwoch, 10.04.2024 14:00 -15:30 WH-C 349&lt;/strong>&lt;/p>
&lt;h3 id="agenda-projektvergabe">Agenda Projektvergabe&lt;/h3>
&lt;ol>
&lt;li>Intro und Organisatorisches (ca. 15 min)&lt;/li>
&lt;li>Projekt-Pitches: Die Projektbetreuer:innen stellen die Projekte in jeweils 5-8 min vor und beantworten Fragen zum Projekt&lt;/li>
&lt;li>Projektverteilung: Studierende können in ausgeloster Reihenfolge das Projekt wählen. Wenn ihr Wunschprojekt keine Plätze mehr hat, muss eine Alternative gewählt werden.&lt;/li>
&lt;li>Projektgruppen und Projektbetreuer_innen tauschen Kontaktinformationen aus und legen Termine für die wöchentlichen Projektbesprechungen fest. Es hat sich bewährt, dass sich die Projektgruppe einen Tag pro Woche z.B. in einem unserer Projekträume (siehe Wiki) gemeinsam arbeitet, auch hierfür sollten die Termine möglichst sofort festgelegt werden.&lt;/li>
&lt;/ol>
&lt;h3 id="todos-nach-der-projektvergabe">Todos nach der Projektvergabe&lt;/h3>
&lt;ul>
&lt;li>Studis melden sich im LSF für das in der Projektvergabe festgelegte Projekt an (d.h. nach der Projektvergabe)&lt;/li>
&lt;li>läuft eine &lt;a href="https://lsf.htw-berlin.de/qisserver/rds?state=user&amp;amp;type=0">automatische Platzvergabe im LSF&lt;/a>, werden Sie abgelehnt. Das ist normal, denn:&lt;/li>
&lt;li>die Zulassung erfolgt manuell gemäß den Teilnehmerlisten, wie sie in den Projektvergabeterminen festgelegt wurde.&lt;/li>
&lt;li>nur für Bachelor: der Kurs Projektmanagement B24.2 ist Teil des Gesamtmoduls und muß erfolgreich abgeschlossen werden. Für diesen müssen Sie sich einzeln im LSF anmelden. Die Zulassung erfolgt auch hier manuell.&lt;/li>
&lt;/ul></description></item><item><title>Schedule</title><link>https://bkleinen.github.io/classes/ss2023/m17-masterseminar/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/m17-masterseminar/schedule/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Lecture Topic&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">Thu 06/04/2023&lt;/td>
 &lt;td style="text-align: left">&amp;ndash; no class &amp;ndash;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Thu 13/04/2023&lt;/td>
 &lt;td style="text-align: left">Introductions, Doing Research&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Thu 20/04/2023&lt;/td>
 &lt;td style="text-align: left">Writing a Bibliography&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Thu 27/04/2023&lt;/td>
 &lt;td style="text-align: left">Libraries in Berlin&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Thu 04/05/2023&lt;/td>
 &lt;td style="text-align: left">Referencing and Plagiarism avoidance&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Thu 11/05/2023&lt;/td>
 &lt;td style="text-align: left">(ausgefallen)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Thu 18/05/2023&lt;/td>
 &lt;td style="text-align: left">&amp;ndash; no class (Himmelfahrt) &amp;ndash;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Thu 25/05/2023&lt;/td>
 &lt;td style="text-align: left">Journal Club I&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Thu 01/06/2023&lt;/td>
 &lt;td style="text-align: left">Writing Strategies, How to give a talk&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Thu 08/06/2023&lt;/td>
 &lt;td style="text-align: left">Presentations with media&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Thu 15/06/2023&lt;/td>
 &lt;td style="text-align: left">IC Talks Round 1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Thu 22/06/2023&lt;/td>
 &lt;td style="text-align: left">IC Talks Round 2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Thu 29/06/2023&lt;/td>
 &lt;td style="text-align: left">Journal Club II (the real one)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Thu 06/07/2023&lt;/td>
 &lt;td style="text-align: left">Editing exercise&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Thu 13/07/2023&lt;/td>
 &lt;td style="text-align: left">Ethics Exercise&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">Thu 20/07/2023&lt;/td>
 &lt;td style="text-align: left">Licensing Models&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">30&lt;/td>
 &lt;td style="text-align: left">Thu 27/07/2023&lt;/td>
 &lt;td style="text-align: left">Career Management&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">31&lt;/td>
 &lt;td style="text-align: left">Thu 03/08/2023&lt;/td>
 &lt;td style="text-align: left">&amp;ndash; no class &amp;ndash;&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Tentative Schedule</title><link>https://bkleinen.github.io/classes/ss2024/m17-masterseminar/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/m17-masterseminar/schedule/</guid><description>&lt;p>This Term, the Master Seminar will be held with three Day-Long Meetings
in Person @ HTW Wilhelminenhof and Zoom-Sessions.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Time&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">Thu 04/04/2024&lt;/td>
 &lt;td style="text-align: left">17:00-18:30&lt;/td>
 &lt;td style="text-align: left">Zoom&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Thu 11/04/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Mon 15/04/2024&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;strong>09:00-18:00&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;strong>1. Blocktermin&lt;/strong>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 18/04/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Thu 25/04/2024&lt;/td>
 &lt;td style="text-align: left">17:00-18:30&lt;/td>
 &lt;td style="text-align: left">Zoom&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Thu 02/05/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Thu 09/05/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;em>Himmelfahrt&lt;/em>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Thu 16/05/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Fri 17/05/2024&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;strong>09:00-18:00&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;strong>2. Blocktermin&lt;/strong>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Thu 23/05/2024&lt;/td>
 &lt;td style="text-align: left">17:00-18:30&lt;/td>
 &lt;td style="text-align: left">Zoom&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Thu 30/05/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Thu 06/06/2024&lt;/td>
 &lt;td style="text-align: left">17:00-18:30&lt;/td>
 &lt;td style="text-align: left">Zoom&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Thu 13/06/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Thu 20/06/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Thu 27/06/2024&lt;/td>
 &lt;td style="text-align: left">17:00-18:30&lt;/td>
 &lt;td style="text-align: left">Zoom&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Thu 04/07/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Mon 08/07/2024&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;strong>09:00-18:00&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;strong>3. Blocktermin&lt;/strong>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 11/07/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">Thu 18/07/2024&lt;/td>
 &lt;td style="text-align: left">17:00-18:30&lt;/td>
 &lt;td style="text-align: left">Zoom&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">30&lt;/td>
 &lt;td style="text-align: left">Thu 25/07/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">31&lt;/td>
 &lt;td style="text-align: left">Thu 01/08/2024&lt;/td>
 &lt;td style="text-align: left">17:00-18:30&lt;/td>
 &lt;td style="text-align: left">Zoom&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Tentative Schedule</title><link>https://bkleinen.github.io/classes/ws2023/m17-masterseminar/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2023/m17-masterseminar/schedule/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Lecture Topic&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">40&lt;/td>
 &lt;td style="text-align: left">Tue 03/10/2023&lt;/td>
 &lt;td style="text-align: left">&amp;ndash; Feiertag: no class &amp;ndash;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Tue 10/10/2023&lt;/td>
 &lt;td style="text-align: left">Introduction&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Tue 17/10/2023&lt;/td>
 &lt;td style="text-align: left">Planung&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Tue 24/10/2023&lt;/td>
 &lt;td style="text-align: left">Zeitplanung, Literaturliste, Zitieren&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Tue 31/10/2023&lt;/td>
 &lt;td style="text-align: left">Wissenschaftliches Schreiben &amp;ldquo;How to&amp;hellip;&amp;rdquo; Blockaden etc. / bis dahin Journal Club Paper raussuchen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Tue 07/11/2023&lt;/td>
 &lt;td style="text-align: left">-ausgefallen-&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Tue 14/11/2023&lt;/td>
 &lt;td style="text-align: left">** Lightning Talks &amp;ldquo;Fokus&amp;rdquo; + &lt;strong>Journal Club&lt;/strong>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Tue 21/11/2023&lt;/td>
 &lt;td style="text-align: left">Kolloquium - Präsentationsstruktur Planen Vorbereitung Schwerpunkt Theorie&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Tue 28/11/2023&lt;/td>
 &lt;td style="text-align: left">Q+A 30 min 1/2 Termin &amp;amp; Wie macht man wiss. Umfragen?&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Tue 05/12/2023&lt;/td>
 &lt;td style="text-align: left">** &lt;strong>Talks 1/2&lt;/strong> (Pflicht), Q+A 30min&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Tue 12/12/2023&lt;/td>
 &lt;td style="text-align: left">** &lt;strong>Journal Club second edition&lt;/strong>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Tue 19/12/2023&lt;/td>
 &lt;td style="text-align: left">Glühwein und Ethik&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">52&lt;/td>
 &lt;td style="text-align: left">Tue 26/12/2023&lt;/td>
 &lt;td style="text-align: left">&amp;ndash; no class &amp;ndash; Winterpause&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Tue 02/01/2024&lt;/td>
 &lt;td style="text-align: left">e-learning (TBD)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Tue 09/01/2024&lt;/td>
 &lt;td style="text-align: left">** Zitieren, &lt;strong>gegenseitig textteile lesen&lt;/strong> (Pflicht)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Tue 16/01/2024&lt;/td>
 &lt;td style="text-align: left">** &lt;strong>Talks 2/2&lt;/strong> (Pflicht), Q&amp;amp;A 30min&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Tue 23/01/2024&lt;/td>
 &lt;td style="text-align: left">TBD&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Tue 30/01/2024&lt;/td>
 &lt;td style="text-align: left">TBD&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Trans@HTW</title><link>https://bkleinen.github.io/misc/trans/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/misc/trans/</guid><description>&lt;div class="alert alert-light" role="alert">
 
"Artikel 2 des Grundgesetzes garantiert das Recht auf freie Entfaltung der Persönlichkeit, auf Leben, auf körperliche Unversehrtheit und schützt die Freiheit der Person. Da steht nicht: garantiert »die halb-freie Entfaltung der Persönlichkeit«, da steht auch nicht: »die freie Entfaltung nur jener Persönlichkeiten, die sich an ihre bei der Geburt festgestellte Geschlechtszugehörigkeit halten«, da steht nicht: »die Freiheit nur jener Personen, die den traditionellen Vorstellungen von ›natürlicher‹ Männlichkeit und Weiblichkeit entsprechen«. Da steht: »das Recht auf freie Entfaltung der Persönlichkeit«."
 &lt;br/>&lt;a href="https://www.fischerverlage.de/buch/carolin-emcke-gegen-den-hass-9783596296873">Emcke, Carolin. &lt;i>Gegen den Hass&lt;/i>.&lt;/a>(German Edition) (Kindle Locations 1666-1671). FISCHER E-Books. Kindle Edition.

&lt;/div>

&lt;h1 id="transtin-an-der-htw">Trans*/TIN* an der HTW:&lt;/h1>
&lt;p>Last update 14.4.2024&lt;/p></description></item><item><title>Lab 03: Implementing CRC Cards</title><link>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-03/</guid><description>&lt;h2 id="learning-goals">Learning Goals&lt;/h2>
&lt;p>After this lab you should be able to agree with each of the following statements. This looks like a lot, but it is all repetition from what you learned in Info1. Ideally you agree with each statement even before starting the lab.&lt;/p>
&lt;p>I remember programming concepts concerning classes and objects:&lt;/p>
&lt;ul>
&lt;li>I know the difference between classes and objects.&lt;/li>
&lt;li>I can instantiate an object.&lt;/li>
&lt;/ul>
&lt;p>I remember programming concepts concerning fields and variable types:&lt;/p></description></item><item><title>Lab 03 Handout: A Note on the Notation of CRC Cards</title><link>https://bkleinen.github.io/classes/ss2024/info2/labs/note-on-crc-cards/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/labs/note-on-crc-cards/</guid><description>&lt;p>We&amp;rsquo;ve discussed the relationship between the Classes &amp;ldquo;Student&amp;rdquo; and &amp;ldquo;Course&amp;rdquo; (aka Module, Class) in last week&amp;rsquo;s lab and lecture.&lt;/p>
&lt;p>I&amp;rsquo;ve pointed out that if you change the syntax of the representation, e.g. because you use some kind of diagramming tool, you have to be careful not to loose any information.&lt;/p>
&lt;p>if you consider these two CRC cards below, a CRC card contains information about these three things&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;ul>
&lt;li>Class Name&lt;/li>
&lt;li>Responsibilities&lt;/li>
&lt;li>&lt;del>Collaborators&lt;/del> Dependencies (&lt;a href="#why-i-use-the-termdependencies-instead-of-collaborators">see below&lt;/a>)&lt;/li>
&lt;/ul>
&lt;h4 id="crc-cards">CRC-Cards&lt;/h4>
&lt;p>Consider these two CRC-Cards:
&lt;div class="card border text-dark bg-light mb-3" style="max-width: 26rem;">
 &lt;div class="card-header">&lt;h5 class="card-title">Student&lt;/h5>&lt;/div>
 
 &lt;div class="card-body">
 &lt;div class="row g-0">
 &lt;div class="col-md-8">
 &lt;div class="card-body">
 &lt;p class="card-text fs-6">Stores Information about Student (e.g. Matrikel, email, name, &amp;hellip;)&lt;/p></description></item><item><title>3 - Python Project</title><link>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-03-pythonproject/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-03-pythonproject/</guid><description>&lt;p>As always, you need to prepare a report together and each hand in this same report in moodle.&lt;/p>
&lt;p>The Report should contain:&lt;/p>
&lt;ul>
&lt;li>names of all team members&lt;/li>
&lt;li>a log of what you did&lt;/li>
&lt;li>notes of commands used &amp;amp; learned&lt;/li>
&lt;li>references to sources used&lt;/li>
&lt;li>encountered issues and the solutions found or&lt;/li>
&lt;li>why you gave up on something - see below&lt;/li>
&lt;li>a brief overall reflection on the lab.
This can be done together or individually.&lt;/li>
&lt;/ul>
&lt;h2 id="part-0-python-project-ideas-pitch-and-group-selection">Part 0: Python Project Ideas Pitch and Group Selection&lt;/h2>
&lt;p>Bring your Project Ideas to the Lab. You can pitch your project ideas in the beginning of the lab and form teams based on interest just for this project.&lt;/p></description></item><item><title>Benotung und Modulprüfung</title><link>https://bkleinen.github.io/classes/ss2024/projects/pruefung/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/projects/pruefung/</guid><description>&lt;p>Das Modul Praxisprojekt besteht sowohl im Bachelor als auch im Master zwei benoteten Teilmodulprüfungen - der Durchführung und der Showtime. Im Bachelor kommt Projektmanagement als undifferenziert bewertetes Teilmodul dazu:&lt;/p>
&lt;h4 id="bachelor">Bachelor&lt;/h4>
&lt;ul>
&lt;li>B24 (siehe Anlage 4B der StuPo) 15 LP&lt;/li>
&lt;li>B24.1 Projekt: Analyse, Planung, Durchführung. Die Prüfungsleistung wird in Form einer Projektdokumentation erbracht. (70%, Benotet durch Projektbetreuer)&lt;/li>
&lt;li>B24.2 Projektmanagement: undifferenzierte Bewertung&lt;/li>
&lt;li>B24.3 Präsentation und Verteidigung der Projektergebnisse - die Prüfungsleistung wird durch die Showtime Vorbereitung und Durchführung erbracht (30%, Benotet durch hauptamtliche Lehrkräfte des Studiengangs)&lt;/li>
&lt;li>Prüfungszeitraum: (v.a. Notenverbuchung): jeweils der 1. PZ&lt;/li>
&lt;/ul>
&lt;h4 id="master">Master&lt;/h4>
&lt;ul>
&lt;li>M6 (Project 1) und M11 (Project 2), jeweils 12 LP&lt;/li>
&lt;li>Benotung:
&lt;ul>
&lt;li>Konzept, Studie, Prototyp oder Dokumentation (75% der Note durch Betreuer_in) und&lt;/li>
&lt;li>öffentliche Präsentation (Showtime) als Messestand und Kurzpräsentation (25% der Note durch hauptamtliche Lehrkräfte des Studiengangs).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Prüfungszeitraum: (v.a. Notenverbuchung): jeweils der 2. PZ&lt;/li>
&lt;/ul></description></item><item><title>ClockDisplay Critique</title><link>https://bkleinen.github.io/material/info1/clock_display_refactoring/clock_display_critique/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/info1/clock_display_refactoring/clock_display_critique/</guid><description>&lt;a href ="https://bkleinen.github.io/material/info1/clock_display_refactoring/original_clock_display/">&amp;lt;prev&lt;/a>



 &lt;a href =".."> up &lt;/a>




 &lt;a href ="https://bkleinen.github.io/material/info1/clock_display_refactoring/simple_clock_display/">next&amp;gt;&lt;/a>


&lt;p>The ClockDisplay aims at showing object interaction, which it does.&lt;/p>
&lt;h2 id="the-problems-i-see-are">The problems I see are:&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>it mixes Model and Representation. Furthermore, the Model or more simply put the stored state, which is the time the clocks shows at the moment, is distributed between three objects - a NumberDisplay for hours and minutes respectively, and the ClockDisplay holding the knowledge how to combine the two.&lt;/p></description></item><item><title>Email Collector for LSF</title><link>https://bkleinen.github.io/misc/lsf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/misc/lsf/</guid><description>&lt;script>

 function convert(){
 const source = document.getElementById("lsfstuff").value;
 const arrayOfLines = source.match(/[^\r\n]+/g);

 let matchRegEx = /.*\d{6}\s*([^\t]*?)\s*\t\s*([^\t]*?)\s*s0(\d{6})@htw-berlin.de.*/
 let replaceString = "$2 $1 &lt;s0$3@htw-berlin.de>";

 let useManuelleZuteilungsliste = document.getElementById("manuelleZuteilungsliste").checked;
 if (useManuelleZuteilungsliste) {
 // for longer list: "Teilnahme- und manuelle Zuteilungsliste" - nur für SGS
 matchRegEx = /^(\d{6})\s*([^\t]*?)\s\s(.*?)\s\s.*/;
 replaceString = "$2 $3 &lt;s0$1@htw-berlin.de>";
 } else {
 let emailVersandListe = document.getElementById("emailVersandListe").checked;
 if (emailVersandListe) {
 // for longer list: "Teilnahme- und manuelle Zuteilungsliste" - nur für SGS
 matchRegEx = /^(\d{6})\s*([^,]*),([^\t]*).*/;
 replaceString = "$3 $2 &lt;s0$1@htw-berlin.de>";
 }
 }

 document.getElementById("whichRegex").innerHTML = "Used Default: "
 + !useManuelleZuteilungsliste
 + "&lt;br>RE: " + matchRegEx
 + "&lt;br>Replaced with: " + replaceString.replace('&lt;','&amp;lt;').replace('>','&amp;gt;');



 //let matchRegEx = document.getElementById("regex-select").value;
 //matchRegEx = new RegExp(matchRegEx);
 //const replaceString = document.getElementById("replace-select").value;


 const yesNo = { 'student' : [], 'ignore' : []};
 const reduceFunct = (acc,line) => {
 acc[line.match(matchRegEx) ? 'student' : 'ignore'].push(line);
 return acc;
 }
 arrayOfLines.reduce( reduceFunct,yesNo);
 console.log(yesNo.student)
 const emails = yesNo.student.map(x => x.replace(matchRegEx, replaceString));
 console.log(emails)
 const emailSet = new Set(emails);
 const emailsSingle = Array.from(emailSet).sort();
 document.getElementById("emailarea").innerHTML = emailsSingle.join("\n");
 document.getElementById("number_emails").innerHTML = arrayOfLines.length + " lines read, "+emailsSingle.length + " unique addresses";
 document.getElementById("ignored").innerHTML = yesNo.ignore.join("\n");
 document.getElementById("ignoredNumber").innerHTML = yesNo.ignore.length + " ignored lines"
 }
&lt;/script>


&lt;h2>Email Collector for LSF&lt;/h2>

&lt;div class="container-fluid">
 &lt;div class="row">

 &lt;div class="col-6" >

 &lt;div class="form-check">
 &lt;input class="form-check-input" type="radio" name="useRegExp" id="regexpDefault" checked>
 &lt;label class="form-check-label" for="flexRadioDefault2">
 Use Default Replacement
 &lt;/label>
 &lt;/div>
 &lt;div class="form-check">
 &lt;input class="form-check-input" type="radio" name="useRegExp" id="manuelleZuteilungsliste">
 &lt;label class="form-check-label" for="flexRadioDefault1">
 Use Replacement for "Teilnahme- und manuelle Zuteilungsliste"
 &lt;/label>
 &lt;/div>

 &lt;div class="form-check">
 &lt;input class="form-check-input" type="radio" name="useRegExp" id="emailVersandListe">
 &lt;label class="form-check-label" for="flexRadioDefault1">
 Use Replacement for Email-Versandliste
 &lt;/label>
 &lt;/div>

 &lt;/div>

 &lt;div class="col-6">
 &lt;button onclick="convert()" class="btn btn-primary">Show Email Adresses&lt;/button>
 &lt;/div>
 &lt;/div>

 &lt;/div>

 &lt;div class="row">
 &lt;div class="col-6">
 &lt;div id ="ignoredNumber">Ignored Lines&lt;/div>
 &lt;textarea id = "ignored" cols="60" rows="4">&lt;/textarea>
 &lt;/div>
 &lt;div class="col-6">
 RegExp used:
 &lt;div id ="whichRegex"> &lt;/div>
 &lt;/div>
 &lt;/div>

 &lt;div class="row">
 &lt;div class="col-6">
 &lt;div>Paste list from LSF here&lt;/div>
 &lt;textarea id = "lsfstuff" cols="60" rows="100" onchange="convert()" >&lt;/textarea>
 &lt;/div>
 &lt;div class="col-6">
 &lt;div id = "number_emails">here be dragons&lt;/div>
 &lt;textarea id = "emailarea" cols="60" rows="100">&lt;/textarea>
 &lt;/div>
 &lt;/div>


&lt;/div>



Links Liste aus "Spezielle Information (Namenliste mit Anmeldungen und Ablehnungen)"pasten.
&lt;a href="#anleitung">mehr info unten.&lt;/a>
 &lt;table>
 &lt;tr>
 &lt;tr valign="top">
 &lt;td>


 &lt;/td>

 &lt;td>
 &lt;/td>
 &lt;/tr>
 &lt;/table>
&lt;hr/>
&lt;h2 id ="anleitung">Anleitung&lt;/h2>
&lt;p>In die Box links den Inhalt der Tabelle "Spezielle Information (Namenliste mit Anmeldungen und Ablehnungen)"
 pasten.&lt;br/> Weg dorthin: Unten auf "Anmeldezahlen" und dann "Spezielle Information" klicken.&lt;/p></description></item><item><title>Info1 - Workbooks</title><link>https://bkleinen.github.io/classes/ss2022/info1/workbook/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/info1/workbook/</guid><description>&lt;h2 id="workbook-chapter-summaries-and-exercises">Workbook: Chapter Summaries and Exercises&lt;/h2>
&lt;p>We encourage you to maintain hand-written notes and sketches. For this, we&amp;rsquo;ve prepared
a workbook template (available in moodle) containing additional exercises and room for your notes.
You can hand in your weekly notes for additional points .&lt;/p>
&lt;p>We will provide Paper Worksheets for each Chapter in Moodle and encourage you to print
them out and work on them with real pens.&lt;/p>
&lt;h2 id="bind-them-to-an-a5-workbook">Bind them to an A5 Workbook&lt;/h2>
&lt;p>They will be provided in a format that allows you to bind them as a book
later if you wish to.&lt;/p></description></item><item><title>Kara Class Diagram</title><link>https://bkleinen.github.io/classes/ws2024/info1/resources/mermaid/kara-class-diagram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2024/info1/resources/mermaid/kara-class-diagram/</guid><description>&lt;h2 id="kara-class-diagram">Kara Class Diagram&lt;/h2>
&lt;pre class="mermaid">%%{
 init: {
 'theme': 'base',
 'themeVariables': {
 'primaryColor': '#f69e9d', 
 'primaryTextColor': '#000',
 'primaryBorderColor': '#000',
 'lineColor': '#F8B229',
 'secondaryColor': '#f4f4f4',
 'activationBorderColor': '#000',
 'tertiaryColor': '#fff'
 }
 }
}%%
classDiagram
 Kara &lt;|-- MyKara
 Actor &lt;|-- Kara
 
 class Actor{
 -int x
 -int y
 -int rotation
 +int getX()
 +int getY()
 +int getRotation()
 }
 class Kara{

 void move()
 void turnLeft()
 void turnRight()
 void putLeaf()
 void removeLeaf()
 boolean onLeaf()
 boolean treeFront()
 boolean treeLeft()
 boolean treeRight()
 boolean mushroomFront()
 }
 class MyKara{
 void act()
 void aroundTree()
 }
&lt;/pre>

&lt;h3 id="with-object-top-of-inheritance-hierarchy">With Object (top of inheritance hierarchy)&lt;/h3>
&lt;pre class="mermaid">%%{
 init: {
 'theme': 'base',
 'themeVariables': {
 'primaryColor': '#f69e9d', 
 'primaryTextColor': '#000',
 'primaryBorderColor': '#000',
 'lineColor': '#F8B229',
 'secondaryColor': '#f4f4f4',
 'activationBorderColor': '#000',
 'tertiaryColor': '#fff'
 }
 }
}%%
classDiagram

 Kara &lt;|-- MyKara
 Actor &lt;|-- Kara
 Object &lt;|-- Actor
 
 class Object{
 String toString()
 ...()
 }
 class Actor{
 -int x
 -int y
 -int rotation
 +int getX()
 +int getY()
 +int getRotation()
 }
 class Kara{

 void move()
 void turnLeft()
 void turnRight()
 void putLeaf()
 void removeLeaf()
 boolean onLeaf()
 boolean treeFront()
 boolean treeLeft()
 boolean treeRight()
 boolean mushroomFront()
 }
 class MyKara{
 void act()
 void aroundTree()
 }
&lt;/pre></description></item><item><title>Kara Class Diagram</title><link>https://bkleinen.github.io/classes/ws2023/info1/resources/mermaid/kara-class-diagram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2023/info1/resources/mermaid/kara-class-diagram/</guid><description>&lt;h2 id="kara-class-diagram">Kara Class Diagram&lt;/h2>
&lt;pre class="mermaid">%%{
 init: {
 'theme': 'base',
 'themeVariables': {
 'primaryColor': '#f69e9d', 
 'primaryTextColor': '#000',
 'primaryBorderColor': '#000',
 'lineColor': '#F8B229',
 'secondaryColor': '#f4f4f4',
 'activationBorderColor': '#000',
 'tertiaryColor': '#fff'
 }
 }
}%%
classDiagram
 Kara &lt;|-- MyKara
 Actor &lt;|-- Kara
 
 class Actor{
 -int x
 -int y
 -int rotation
 +int getX()
 +int getY()
 +int getRotation()
 }
 class Kara{

 void move()
 void turnLeft()
 void turnRight()
 void putLeaf()
 void removeLeaf()
 boolean onLeaf()
 boolean treeFront()
 boolean treeLeft()
 boolean treeRight()
 boolean mushroomFront()
 }
 class MyKara{
 void act()
 void aroundTree()
 }
&lt;/pre>

&lt;h3 id="with-object-top-of-inheritance-hierarchy">With Object (top of inheritance hierarchy)&lt;/h3>
&lt;pre class="mermaid">%%{
 init: {
 'theme': 'base',
 'themeVariables': {
 'primaryColor': '#f69e9d', 
 'primaryTextColor': '#000',
 'primaryBorderColor': '#000',
 'lineColor': '#F8B229',
 'secondaryColor': '#f4f4f4',
 'activationBorderColor': '#000',
 'tertiaryColor': '#fff'
 }
 }
}%%
classDiagram

 Kara &lt;|-- MyKara
 Actor &lt;|-- Kara
 Object &lt;|-- Actor
 
 class Object{
 String toString()
 ...()
 }
 class Actor{
 -int x
 -int y
 -int rotation
 +int getX()
 +int getY()
 +int getRotation()
 }
 class Kara{

 void move()
 void turnLeft()
 void turnRight()
 void putLeaf()
 void removeLeaf()
 boolean onLeaf()
 boolean treeFront()
 boolean treeLeft()
 boolean treeRight()
 boolean mushroomFront()
 }
 class MyKara{
 void act()
 void aroundTree()
 }
&lt;/pre></description></item><item><title>4 - Use Cases and Class Diagrams Part I</title><link>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-04-usecases-classdiagrams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-04-usecases-classdiagrams/</guid><description>&lt;p>&lt;img src="../images/study-partner.jpg" alt="Table" title="pumpkins">
&lt;!-- raw HTML omitted -->Foto by &lt;a href="https://unsplash.com/photos/SYTO3xs06fU">Marvin Meyer&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;h3 id="1-know-what-the-lab-is-about">1. Know what the lab is about&lt;/h3>
&lt;p>In this exercise you will do the first part of working on a&lt;/p>
&lt;ul>
&lt;li>Use Case Diagram&lt;/li>
&lt;li>Scenarios&lt;/li>
&lt;li>A Class Diagram
for an application called &amp;ldquo;StudyPartner&amp;rdquo;.&lt;/li>
&lt;/ul>
&lt;h4 id="2--study-partner-app">2. Study Partner App&lt;/h4>
&lt;p>The Product Manager has asked you to design and develop the app for IMI:&lt;/p>
&lt;p>&lt;strong>Study Partner&lt;/strong> is planned to be an application where IMI-Students can find and meet fellow IMI-Students for various kinds of joint study activities.&lt;/p></description></item><item><title>A very simple ClockDisplay</title><link>https://bkleinen.github.io/material/info1/clock_display_refactoring/simple_clock_display/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/info1/clock_display_refactoring/simple_clock_display/</guid><description>&lt;a href ="https://bkleinen.github.io/material/info1/clock_display_refactoring/clock_display_critique/">&amp;lt;prev&lt;/a>



 &lt;a href =".."> up &lt;/a>




 &lt;a href ="https://bkleinen.github.io/material/info1/clock_display_refactoring/kara-clock-display/">next&amp;gt;&lt;/a>


&lt;p>All the ClockDisplay example really does is returning a String like &amp;ldquo;13:45&amp;rdquo; from &lt;code>getTime()&lt;/code> after either the time has been set to 13:45 by calling &lt;code>setTime()&lt;/code> or after calling the &lt;code>timeTick()&lt;/code> method the appropriate amount of times.&lt;/p>
&lt;p>This can, of course, be implemented in a much simpler way. While this may be true for most of the small examples we use for programming and software engineering classes, I feel that the way the display is split into two NumberDisplays &lt;strong>in combination with the timeTick / increment&lt;/strong> makes little sense and seems to be quite confusing for students. Also, see the &lt;a href="../clock_display_critique">general critique on the previous page&lt;/a>.&lt;/p></description></item><item><title>Book Diagrams</title><link>https://bkleinen.github.io/classes/ws2024/info1/resources/mermaid/all-mermaid-diagrams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2024/info1/resources/mermaid/all-mermaid-diagrams/</guid><description>&lt;pre>&lt;code>classDiagram

 class TicketMachine{
 TicketMachine(int ticketPrice)
 int getPrice()
 int getBalance()
 void insertMoney(int amount)
 void printTicket()
 }
&lt;/code>&lt;/pre></description></item><item><title>Book Diagrams</title><link>https://bkleinen.github.io/classes/ws2023/info1/resources/mermaid/all-mermaid-diagrams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2023/info1/resources/mermaid/all-mermaid-diagrams/</guid><description>&lt;pre>&lt;code>classDiagram

 class TicketMachine{
 TicketMachine(int ticketPrice)
 int getPrice()
 int getBalance()
 void insertMoney(int amount)
 void printTicket()
 }
&lt;/code>&lt;/pre></description></item><item><title>Code Examples</title><link>https://bkleinen.github.io/classes/ws2024/info1/code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2024/info1/code/</guid><description>&lt;p>Don&amp;rsquo;t worry about noting down any code changes I make in class - I will upload everything to &lt;a href="https://github.com/htw-imi-info1">github&lt;/a>!&lt;/p>
&lt;p>If I make changes during class, I will push them to the branch with the semester name.
To switch to the branch, select the according semester in the branches menu in the upper left corner on each repository&amp;rsquo;s main page.(it shows &amp;ldquo;main&amp;rdquo; usually - the default branch)
Note that it might also be quite convenient to look at the code on the github page online,
the commit history shows you the exact changes I made during class.
Click on &amp;ldquo;commits&amp;rdquo; and then one individual commit, and you you&amp;rsquo;ll see the changes.&lt;/p></description></item><item><title>Code Examples</title><link>https://bkleinen.github.io/classes/ws2023/info1/code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2023/info1/code/</guid><description>&lt;p>Don&amp;rsquo;t worry about noting down any code changes I make in class - I will upload everything to &lt;a href="https://github.com/htw-imi-info1">github&lt;/a>!&lt;/p>
&lt;p>If I make changes during class, I will push them to the branch with the semester name.
To switch to the branch, select the according semester in the branches menu in the upper left corner on each repository&amp;rsquo;s main page.(it shows &amp;ldquo;main&amp;rdquo; usually - the default branch)
Note that it might also be quite convenient to look at the code on the github page online,
the commit history shows you the exact changes I made during class.
Click on &amp;ldquo;commits&amp;rdquo; and then one individual commit, and you you&amp;rsquo;ll see the changes.&lt;/p></description></item><item><title>Info1 - Code Examples Overview</title><link>https://bkleinen.github.io/classes/ss2022/info1/code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/info1/code/</guid><description>&lt;h2 id="lecture-code-examples">Lecture Code Examples&lt;/h2>
&lt;p>Don&amp;rsquo;t worry about noting down any code changes I make in class - I will upload everything to github!
The &amp;ldquo;Changes in ss2022&amp;rdquo; links will only work after I&amp;rsquo;ve uploaded those changes.&lt;/p>
&lt;p>Note that it might also be quite convenient to look at the code on the github page online,
the commit history shows you the exact changes I made. Click on &amp;ldquo;commits&amp;rdquo; and then one
individual commit, and you you&amp;rsquo;ll see the changes.&lt;/p></description></item><item><title>Kara ClockDisplays</title><link>https://bkleinen.github.io/material/info1/clock_display_refactoring/kara-clock-display/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/info1/clock_display_refactoring/kara-clock-display/</guid><description>&lt;a href ="https://bkleinen.github.io/material/info1/clock_display_refactoring/simple_clock_display/">&amp;lt;prev&lt;/a>



 &lt;a href =".."> up &lt;/a>




 &lt;a href ="https://bkleinen.github.io/material/info1/clock_display_refactoring/led_display/">next&amp;gt;&lt;/a>


&lt;p>&amp;hellip; not yet here, see &lt;a href="https://bkleinen.github.io/classes/ws2023/info1/labs/karaclock-complete/">KaraClock Exercises&lt;/a> for now&lt;/p></description></item><item><title>Lab 04: Histogram</title><link>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-04/</guid><description>&lt;h2 id="learning-goals">Learning Goals&lt;/h2>
&lt;p>After this lab you should be able to agree with each of the following statements.&lt;/p>
&lt;p>I can handle File-based IO with Java:&lt;/p>
&lt;ul>
&lt;li>I can read from a text file using a Reader, eg. BufferedReader.&lt;/li>
&lt;li>I can write to a text file using a Writer, eg. BufferedWriter.&lt;/li>
&lt;li>I close my streams after I finished reading or writing.&lt;/li>
&lt;li>I can use try-with-resources to make sure that in the end, a resource is always closed&lt;/li>
&lt;/ul>
&lt;p>I can handle Exceptions:&lt;/p></description></item><item><title>Projects Shortlist Summer 2024</title><link>https://bkleinen.github.io/classes/ss2024/projects/project-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/projects/project-list/</guid><description>&lt;p>Projektbeschreibungen sind im &lt;a href="https://wiki.htw-berlin.de/confluence/display/fb4imi/Projekte+im+SoSe+2024">Wiki&lt;/a> (nur mit HTW-Login und für IMIs).&lt;/p>
&lt;h5 id="bachelor-projekte">Bachelor-Projekte&lt;/h5>
&lt;p>B1: Infinite Zoom in 3D (Tobias Lenz)&lt;/p>
&lt;p>B2: Digital Signage für den Makerspace (Barne Kleinen)&lt;/p>
&lt;p>B3: Entwicklung einer Anwendung zur zyklusadaptierten Leistungsoptimierung im Sport (David Koschnick)&lt;/p>
&lt;p>B4: AI-driven product research agent: Enable informed decisions on idealo (Jakob Panten, Tilo Nitze)&lt;/p>
&lt;p>B5: PAM - Process Modelling and Management (Weiterentwicklung des Tools) (Martin Singer)&lt;/p>
&lt;p>B6: AR und Videomapping (Alexander Kramer)&lt;/p>
&lt;h5 id="master-projekte">Master-Projekte&lt;/h5>
&lt;p>M1: Gaming for Future II: Turning the simulation into a game (David Müller)&lt;/p></description></item><item><title>5 - Use Cases and Class Diagrams Part II</title><link>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-05-usecases-classdiagrams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-05-usecases-classdiagrams/</guid><description>&lt;p>This is part 2 - refer to &lt;a href="../lab-04-usecases">Part 1&lt;/a> for the assignment.&lt;/p>
&lt;p>Don&amp;rsquo;t worry too much about the differentiation of Part 1 and 2, just add
missing parts and refine your design based on what you&amp;rsquo;ve learned.&lt;/p>
&lt;p>Depending on the reviews of Part1, additional guidance might be added here.&lt;/p>
&lt;h2 id="results-submission">Results Submission&lt;/h2>
&lt;ul>
&lt;li>Hand in a lab report (including your diagrams)&lt;/li>
&lt;/ul>
&lt;p>More info on the &lt;a href="..">Labs&lt;/a> page.&lt;/p></description></item><item><title>Lab 05: Chatterbox</title><link>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-05/</guid><description>&lt;h2 id="learning-goals">Learning Goals&lt;/h2>
&lt;p>After this lab you should be able to agree with each of the following statements.&lt;/p>
&lt;p>I can use the Socket API for TCP connections:&lt;/p>
&lt;ul>
&lt;li>I can create a server that listens for and accepts connections&lt;/li>
&lt;li>I can create a client that makes a connection request to the server&lt;/li>
&lt;li>I can send text from a client to a server via streams&lt;/li>
&lt;li>I can send text from a server to a client via streams&lt;/li>
&lt;li>I can use multithreading to simultaneously process tcp requests and input from the user&lt;/li>
&lt;li>(if you do the &amp;ldquo;for the bored&amp;rdquo; part: I can use multithreading for the server to handle multiple connection requests)&lt;/li>
&lt;/ul>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Write down the code for the following questions and be able to explain what is happening.&lt;/p></description></item><item><title>6 - Sequence Diagrams</title><link>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-06-sequence-diagrams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-06-sequence-diagrams/</guid><description>&lt;p>&lt;img src="../images/sequence.jpg" alt="Launch Sequence">&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->Pelican launch sequence. &lt;a href="https://www.flickr.com/photos/69214385@N04/9172233502">Foto by Don McCullough &lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ul>
&lt;li>Read Martin Fowler&amp;rsquo;s Chapter about Sequence Diagrams from the book &amp;ldquo;UML Distilled&amp;rdquo; &lt;a href="https://www.informit.com/articles/article.aspx?p=169507">is available as a sample chapter online.&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;h3 id="part-1-sequence-diagrams-of-known-classes">Part 1: Sequence Diagrams of Known Classes&lt;/h3>
&lt;p>As an introductionary exercise for Sequence Diagrams, pick one of the following example projects from Info1 and draw a sequence diagram for the main use case:&lt;/p></description></item><item><title>Lab 06: Execution times</title><link>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-06/</guid><description>&lt;h2 id="learning-goals">Learning Goals&lt;/h2>
&lt;p>After this lab you should be able to agree with each of the following statements.&lt;/p>
&lt;p>I can evaluate the efficiency of algorithms:&lt;/p>
&lt;ul>
&lt;li>I understand the correlation between input and running time for different program structures&lt;/li>
&lt;li>I can use big-o-notation to describe the running time of algorithms&lt;/li>
&lt;li>I can calculate the running time of algorithms by adding up running times of different structures&lt;/li>
&lt;li>I can compare running times based on their running time in big-o-notation&lt;/li>
&lt;/ul>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> Programs A and B are analyzed and are found to have worst-case running times no greater than $150 N \log N$ and $N^2$, respectively. Answer the following questions, if possible:&lt;/p></description></item><item><title>7 - Testing</title><link>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-07-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-07-testing/</guid><description>&lt;p>&lt;img src="../images/test-button.jpg" alt="Test Button">
&lt;!-- raw HTML omitted -->Test Button in Car. &lt;a href="https://www.flickr.com/photos/cosmic_spanner/3766667411">Foto by Mike Roberts&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;h4 id="1-read-about-closed--and-open-box-tests">1. Read about Closed- and Open-Box Tests.&lt;/h4>
&lt;p>I chose &amp;ldquo;Closed- and Open-Box Tests&amp;rdquo; as a more inclusive replacement for the terms &amp;ldquo;Black- and White-Box&amp;rdquo; Tests (&lt;a href="#why-i-replaced-the-terms">why?&lt;/a>). I could not find a general agreement on the best replacements, so I chose this terms as I think they are also even a better metaphor for the strategies to find test cases they describe:&lt;/p></description></item><item><title>Lab 07: Reverse Polish Notation</title><link>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-07/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Source code scaffold for this exercise: 
 
 
 
 
 &lt;a href="https://github.com/htw-imi-info2/Lab07_ReversePolishNotation">https://github.com/htw-imi-info2/Lab07_ReversePolishNotation&lt;/a>
&lt;/p>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> Make sure that you understand postfix evaluation. If you do the complete Pre-Lab you will be able to understand the algorithms given in the &lt;a href="../lab-07-handout">hand out&lt;/a>.&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> What is the order of precedence for the operators &amp;ldquo;+&amp;rdquo;, &amp;ldquo;-&amp;rdquo;, &amp;ldquo;*&amp;rdquo;, &amp;ldquo;/&amp;rdquo;, &amp;ldquo;^&amp;rdquo;? If we wanted to include &amp;ldquo;(&amp;rdquo; and &amp;ldquo;)&amp;rdquo; in this order, where would each of them be?&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> Łukasiewicz was a Polish logician, so his notation for parentheses-free expressions is often called Reverse Polish Notation. To get your brain in gear, convert the following expressions to RPN! What are the values of the expressions?&lt;/p></description></item><item><title>Lab 07 Handout: Infix/Prefix/Postfix</title><link>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-07-handout/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-07-handout/</guid><description>&lt;h2 id="definitions">Definitions&lt;/h2>
&lt;p>&lt;strong>Infix:&lt;/strong> The operator is placed between the two operands: 3 + 5&lt;/p>
&lt;p>&lt;strong>Prefix:&lt;/strong> The operator is placed before the two operands: + 3 5&lt;/p>
&lt;p>&lt;strong>Postfix:&lt;/strong> The operator is placed after the two operands: 3 5 +&lt;/p>
&lt;h2 id="calculator-algorithm">Calculator algorithm&lt;/h2>
&lt;ol>
&lt;li>Convert infix to postfix&lt;/li>
&lt;li>Use stack to evaluate postfix&lt;/li>
&lt;li>Output top of stack (should be the only element)&lt;/li>
&lt;/ol>
&lt;h3 id="convert-infix-to-postfix-algorithm">Convert infix to postfix algorithm&lt;/h3>
&lt;ol>
&lt;li>Given a sequence of tokens s and a result r&lt;/li>
&lt;li>While s is not empty:
&lt;ol>
&lt;li>Let t = next token.&lt;/li>
&lt;li>If t is an operand, r = r + t;&lt;/li>
&lt;li>If t is an open parenthesis, push it.&lt;/li>
&lt;li>If t is a close parenthesis:
&lt;ol>
&lt;li>while top &amp;lt;&amp;gt; open parenthesis
&lt;ol>
&lt;li>r = r + top&lt;/li>
&lt;li>pop&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>pop // removes the open parenthesis&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>If t is an operator
&lt;ol>
&lt;li>while not (top is of lower precedence than t OR t is right associative and top is of equal precedence)
&lt;ol>
&lt;li>r = r + top&lt;/li>
&lt;li>pop&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>push t&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>while stack not empty
&lt;ol>
&lt;li>r = r + top&lt;/li>
&lt;li>pop&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h3 id="evaluate-postfix-algorithm">Evaluate postfix algorithm&lt;/h3>
&lt;ol>
&lt;li>Given a sequence of tokens s&lt;/li>
&lt;li>While s is not empty:
&lt;ol>
&lt;li>Let t = next token.&lt;/li>
&lt;li>If t is an operand, push it;&lt;/li>
&lt;li>If t is an operator:
&lt;ol>
&lt;li>put the top into rhs, pop it;&lt;/li>
&lt;li>put the top into lhs, pop it;&lt;/li>
&lt;li>calculate lhs t rhs;&lt;/li>
&lt;li>push the result&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>The top of the stack is the result.&lt;/li>
&lt;/ol></description></item><item><title>8 - Gilded Rose</title><link>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-08-gilded-rose/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-08-gilded-rose/</guid><description>&lt;p>&lt;a href="../images/The_Gilded_Rose.webp">&lt;img src="../images/The_Gilded_Rose.jpg" alt="The Gilded Rose">&lt;/a>&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->The Gilded Rose, Trade District, &lt;a href="https://wowpedia.fandom.com/wiki/Gilded_Rose">World of Warcraft.&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h1 id="the-gilded-rose-kata">The Gilded Rose Kata&lt;/h1>
&lt;p>&amp;ndash; Working with Legacy Code and Refactoring to Patterns &amp;ndash;&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;h3 id="about-coding-katas">About Coding Katas&lt;/h3>
&lt;p>The Term &amp;lsquo;Kata&amp;rsquo; is a Metaphor taken from Martial Arts for a Pattern of Movements to Practice and Perfect those same Movements (&lt;a href="https://en.wikipedia.org/wiki/Kata">Wikipedia:Kata&lt;/a>). According to (&lt;a href="https://en.wikipedia.org/wiki/Kata">Wikipedia:Kata&lt;/a>), it was introduced as a practice to Software Craftsmanship by &lt;a href="http://codekata.com/">Dave Thomas in his blog&lt;/a>, to practice developing software using techniques like TDD, Refactoring or the SOLID principles. There are several Code Kata Collections; see &lt;a href="https://kata-log.rocks/gilded-rose-kata">Kata-Log&lt;/a> for an example that can be browsed by topic and constraint.&lt;/p></description></item><item><title>Lab 08: Recursive Triangles</title><link>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-08/</guid><description>&lt;p>&lt;img src="../images/SierpinskiTriangle.png" alt="Sierpinski Triangle" title="Sierpinski Triangle">&lt;/p>
&lt;p>Source code scaffold for this exercise: 
 
 
 
 
 &lt;a href="https://github.com/htw-imi-info2/Lab08_SierpinskiTriangle">https://github.com/htw-imi-info2/Lab08_SierpinskiTriangle&lt;/a>
&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> What exactly is an equilateral triangle? Draft a class that draws a triangle. What data do you need to know in order to put a triangle at a particular position on the screen?&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> What is the mathematical formula for finding the midpoint of a line segment that connects two Points?&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> What is the resolution of your computer screen? How can you find out? What is the largest equilateral triangle that you can show on a screen with this resolution?&lt;/p></description></item><item><title>LED ClockDisplay</title><link>https://bkleinen.github.io/material/info1/clock_display_refactoring/led_display/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/info1/clock_display_refactoring/led_display/</guid><description>&lt;a href ="https://bkleinen.github.io/material/info1/clock_display_refactoring/kara-clock-display/">&amp;lt;prev&lt;/a>



 &lt;a href =".."> up &lt;/a>





&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;h2 id="leddisplay-extends-clockdisplay">LEDDisplay extends ClockDisplay&lt;/h2>
&lt;pre class="mermaid">%%{
 init: {
 'theme': 'base',
 'themeVariables': {
 'primaryColor': '#f0cd91', 
 'primaryTextColor': '#000',
 'primaryBorderColor': '#000',
 'lineColor': '#F8B229',
 'secondaryColor': '#006100',
 'tertiaryColor': '#fff'
 }
 }
}%%
classDiagram
 class ClockDisplay
 class LEDDisplay
 class NumberDisplay
 ClockDisplay &lt;|-- LEDDisplay
 LEDDisplay ..> NumberDisplay
 

 class ClockDisplay{
 -String displayString
 -int minutesInDay
 void timeTick()
 void setTime(int hour, int minute)
 String getTime()
 void updateDisplay()
 String getDisplayValue(int value)
 initRealDisplay(int hour, int minute)
 updateRealDisplay()

 }
 class LEDDisplay{
 -NumberDisplay hours
 -NumberDisplay minutes
 initRealDisplay(int hour, int minute)
 updateRealDisplay()
 }

 NumberDisplay: void setValue(int)
 
&lt;/pre>

&lt;h2 id="clockdisplay-additional-methods-for-clock-and-automatic-ticker">ClockDisplay: additional methods for clock and automatic Ticker&lt;/h2>
&lt;pre class="mermaid">%%{
 init: {
 'theme': 'base',
 'themeVariables': {
 'primaryColor': '#f0cd91', 
 'primaryTextColor': '#000',
 'primaryBorderColor': '#000',
 'lineColor': '#F8B229',
 'secondaryColor': '#006100',
 'tertiaryColor': '#fff'
 }
 }
}%%
classDiagram

 class ClockDisplay{
 void start()
 void stop()
 void toggleTicker()
 void setTickerSpeed(int)
 }
&lt;/pre>

&lt;h2 id="leddisplay-settime---complete">LEDDisplay: setTime() - complete&lt;/h2>
&lt;pre class="mermaid">%%{
 init: {
 'theme': 'base',
 'themeVariables': {
 'primaryColor': '#f69e9d', 
 'primaryTextColor': '#000',
 'primaryBorderColor': '#000',
 'lineColor': '#F8B229',
 'secondaryColor': '#f4f4f4',
 'activationBorderColor': '#000',
 'tertiaryColor': '#fff'
 }
 }
}%%
sequenceDiagram
 actor YOU
 activate #colon;LEDDisplay
 YOU->>+#colon;LEDDisplay: setTime(13,45)
 #colon;LEDDisplay->>+#colon;LEDDisplay: updateDisplay()
 

 activate #colon;LEDDisplay
 #colon;LEDDisplay->>+#colon;LEDDisplay: updateRealDisplay()

 activate hours#colon;NumberDisplay

 #colon;LEDDisplay->>+hours#colon;NumberDisplay: updateDisplay(13)
 activate lower#colon;LEDDigit
 hours#colon;NumberDisplay->>+lower#colon;LEDDigit:display(3)
 deactivate lower#colon;LEDDigit
 activate upper#colon;LEDDigit
 hours#colon;NumberDisplay->>+upper#colon;LEDDigit:display(1)
 deactivate upper#colon;LEDDigit
 deactivate hours#colon;NumberDisplay


 activate minutes#colon;NumberDisplay
 #colon;LEDDisplay->>+minutes#colon;NumberDisplay: updateDisplay(45)

 activate lower_m#colon;LEDDigit
 minutes#colon;NumberDisplay->>+lower_m#colon;LEDDigit:display(5)
 deactivate lower_m#colon;LEDDigit
 activate upper_m#colon;LEDDigit
 minutes#colon;NumberDisplay->>+upper_m#colon;LEDDigit:display(4)
 deactivate upper_m#colon;LEDDigit

 deactivate minutes#colon;NumberDisplay


 deactivate #colon;LEDDisplay

 deactivate #colon;LEDDisplay
 deactivate #colon;LEDDisplay
 #colon;LEDDisplay-->>-YOU:void
&lt;/pre>

&lt;h2 id="leddisplay-settime---clockdisplay--numberdisplay">LEDDisplay: setTime() - ClockDisplay &amp;amp; NumberDisplay&lt;/h2>
&lt;pre class="mermaid">%%{
 init: {
 'theme': 'base',
 'themeVariables': {
 'primaryColor': '#f69e9d', 
 'primaryTextColor': '#000',
 'primaryBorderColor': '#000',
 'lineColor': '#F8B229',
 'secondaryColor': '#f4f4f4',
 'activationBorderColor': '#000',
 'tertiaryColor': '#fff'
 }
 }
}%%
sequenceDiagram
 actor YOU
 activate #colon;LEDDisplay
 YOU->>+#colon;LEDDisplay: setTime(13,45)
 #colon;LEDDisplay->>+#colon;LEDDisplay: updateDisplay()
 

 activate #colon;LEDDisplay
 #colon;LEDDisplay->>+#colon;LEDDisplay: updateRealDisplay()

 activate hours#colon;NumberDisplay

 #colon;LEDDisplay->>+hours#colon;NumberDisplay: updateDisplay(13)
 
 deactivate hours#colon;NumberDisplay


 activate minutes#colon;NumberDisplay
 #colon;LEDDisplay->>+minutes#colon;NumberDisplay: updateDisplay(45)


 deactivate minutes#colon;NumberDisplay


 deactivate #colon;LEDDisplay

 deactivate #colon;LEDDisplay
 deactivate #colon;LEDDisplay
 #colon;LEDDisplay-->>-YOU:void
&lt;/pre>

&lt;h2 id="leddisplay-settime---both-numberdisplays---leddigit">LEDDisplay: setTime() - both NumberDisplays &amp;amp; LEDDigit&lt;/h2>
&lt;pre class="mermaid">%%{
 init: {
 'theme': 'base',
 'themeVariables': {
 'primaryColor': '#f69e9d', 
 'primaryTextColor': '#000',
 'primaryBorderColor': '#000',
 'lineColor': '#F8B229',
 'secondaryColor': '#f4f4f4',
 'activationBorderColor': '#000',
 'tertiaryColor': '#fff'
 }
 }
}%%
sequenceDiagram
 
 #colon;LEDDisplay->>+#colon;NumberDisplay: updateDisplay(13)
 activate lower#colon;LEDDigit
 #colon;NumberDisplay->>+lower#colon;LEDDigit:display(3)
 deactivate lower#colon;LEDDigit
 activate upper#colon;LEDDigit
 #colon;NumberDisplay->>+upper#colon;LEDDigit:display(1)
 deactivate upper#colon;LEDDigit
 deactivate #colon;NumberDisplay
&lt;/pre>

&lt;h2 id="clockdisplay-original-settime-copy">ClockDisplay original: setTime() copy&lt;/h2>
&lt;pre class="mermaid">%%{
 init: {
 'theme': 'base',
 'themeVariables': {
 'primaryColor': '#f69e9d', 
 'primaryTextColor': '#000',
 'primaryBorderColor': '#000',
 'lineColor': '#F8B229',
 'secondaryColor': '#f4f4f4',
 'activationBorderColor': '#000',
 'tertiaryColor': '#fff'
 }
 }
}%%
sequenceDiagram
 actor YOU
 YOU->>+#colon;ClockDisplay: setTime(13,45)
 #colon;ClockDisplay->>+hours#colon;NumberDisplay:setValue(13)
 hours#colon;NumberDisplay-->>-#colon;ClockDisplay:void
 #colon;ClockDisplay->>+minutes#colon;NumberDisplay:setValue(45)
 minutes#colon;NumberDisplay-->>-#colon;ClockDisplay:void
 
 #colon;ClockDisplay->>+#colon;ClockDisplay:updateDisplay()
 #colon;ClockDisplay->>+hours#colon;NumberDisplay:getDisplayValue()
 hours#colon;NumberDisplay-->>-#colon;ClockDisplay:displayString
 #colon;ClockDisplay->>+minutes#colon;NumberDisplay:getDisplayValue()
 minutes#colon;NumberDisplay-->>-#colon;ClockDisplay:displayString
 
 deactivate #colon;ClockDisplay

 #colon;ClockDisplay-->>-YOU:void
&lt;/pre>

&lt;h2 id="leddisplay-settime-numberdisplay-leddigit">LEDDisplay: setTime() NumberDisplay-&amp;gt;LEDDigit&lt;/h2>
&lt;pre class="mermaid">%%{
 init: {
 'theme': 'base',
 'themeVariables': {
 'primaryColor': '#f69e9d', 
 'primaryTextColor': '#000',
 'primaryBorderColor': '#000',
 'lineColor': '#F8B229',
 'secondaryColor': '#f4f4f4',
 'activationBorderColor': '#000',
 'tertiaryColor': '#fff'
 }
 }
}%%
sequenceDiagram
 activate #colon;LEDDigit
 #colon;NumberDisplay->>+#colon;LEDDigit: display(9)
 loop each Segment
 alt segment needs to be shown for value
 activate #colon;Segment
 #colon;LEDDigit->>+#colon;Segment: makeVisible()
 deactivate #colon;Segment
 else
 #colon;LEDDigit->>+#colon;Segment: makeInvisible()
 deactivate #colon;Segment
 end
 end
 deactivate #colon;LEDDigit
&lt;/pre>

&lt;h3 id="initialization-maybe-old">Initialization (maybe old)&lt;/h3>
&lt;pre class="mermaid">%%{
 init: {
 'theme': 'base',
 'themeVariables': {
 'primaryColor': '#f69e9d', 
 'primaryTextColor': '#000',
 'primaryBorderColor': '#000',
 'lineColor': '#F8B229',
 'secondaryColor': '#f4f4f4',
 'activationBorderColor': '#000',
 'tertiaryColor': '#fff'
 }
 }
}%%
sequenceDiagram
 actor YOU
 create participant ClockDisplay
 YOU->>+ClockDisplay: new()

 create participant LEDClockDisplay
 ClockDisplay->>+LEDClockDisplay: new()
 create participant Canvas
 LEDClockDisplay->>+Canvas: new()
 Canvas-->>-LEDClockDisplay: canvas
 LEDClockDisplay-->>-ClockDisplay: leds

 loop [ for each number display part]
 create participant NumberDisplay
 ClockDisplay->>+NumberDisplay:new()
 NumberDisplay-->>-ClockDisplay:aNumberDisplay
 ClockDisplay->>+LEDClockDisplay: add(aNumberDisplay)
 LEDClockDisplay->>+NumberDisplay:initDisplay(pos, canvas)
 
 loop [ for each led digit]
 create participant LEDDigit
 NumberDisplay->>+LEDDigit:new(pos, canvas)

 loop [ for each led segment]
 create participant Segment
 LEDDigit->>+Segment:new(pos, canvas)
 Segment-->>-LEDDigit: segment
 end

 LEDDigit-->>-NumberDisplay: digit
 end

 NumberDisplay-->>-LEDClockDisplay:void
 LEDClockDisplay-->>-ClockDisplay:void


 end

 ClockDisplay-->>-YOU:void
&lt;/pre>

&lt;p>loop [ for each display part]&lt;/p></description></item><item><title>9 - State Machine Diagrams</title><link>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-09-state-machines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-09-state-machines/</guid><description>&lt;p>&lt;img src="../images/turing-tape.jpg" alt="Tape of a fancy Turing Machine">&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->&lt;a href="https://en.wikipedia.org/wiki/Turing_machine_gallery">Tape of a fancy Turing Machine from Wikipedia&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>For an introduction to state machine diagrams, see &lt;a href="https://www.agilemodeling.com/artifacts/stateMachineDiagram.htm">https://www.agilemodeling.com/artifacts/stateMachineDiagram.htm&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>for the parser exercise, have a look at &lt;a href="https://en.wikipedia.org/wiki/Deterministic_finite_automaton">Finite Automata&lt;/a> - in their context of formal languages their typical event is reading a character from an input stream, and can be (and usually are) represented by state machine diagrams.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="part-1-state-machine-diagrams">Part 1: State Machine Diagrams&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Model the modified goat/cabbage/wolf problem: The farmer is in Schöneweide and wants to get his goat, his cabbage and his wolf over to Oberschöneweide. Only one thing can fit in his boat at a time beside himself. He cannot leave the cabbage and the goat or the goat and the wolf alone on the same side of the river, for obvious reasons. Is it possible for him to get all three possessions across the Spree? Draw a State Machine Diagram modelling both solutions to this problem.&lt;/p></description></item><item><title>Lab 09: Eight Queens</title><link>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-09/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> Make a chess board and mark how a Queen moves and threatens.&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> Define a matrix (two-dimensional array) of integers in Java. Write a method to put a &lt;em>-1&lt;/em> in every cell of the matrix.&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> Given two cells in a matrix, (r1, c1) and (r2, c2). How can you determine if
a) the cells are in the same row?
b) the cells are in the same column?
c) the cells are in the same ascending diagonal (lower left to upper right)?
d) the cells are in the same descending diagonal (upper left to lower right)?&lt;/p></description></item><item><title>Conditional Statement</title><link>https://bkleinen.github.io/material/info1-script/01_basics/conditional/</link><pubDate>Sat, 21 Oct 2023 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/info1-script/01_basics/conditional/</guid><description>&lt;h4 id="conditional-statement-if-then-else-statement">Conditional Statement (if-then-else statement)&lt;/h4>
&lt;p>A conditional statement allows you to conditionally execute code parts based on a condition, either true or false or something that results in true or false (see boolean expression).&lt;/p>
&lt;h1 id="structure">Structure&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// before conditional&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">condition&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// if-part&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// else-part&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// after conditional&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre class="mermaid">flowchart TD
 A[Start]
 B(before conditional)
 D(if-part)
 E(else-part)
 F(after conditional)

 A --> B
 B --> C{condition true?}
 C --true--> D
 C -->|false| E
 D &amp; E --> F
 F -->G[End]
&lt;/pre>

&lt;h2 id="the-else-part-can-be-omitted">The else part can be omitted&amp;hellip;&lt;/h2>
&lt;p>&amp;hellip; if you don&amp;rsquo;t need it. If the condition is false, the execution continues directly with the statements after the if-statement.&lt;/p></description></item><item><title>10 - Web Applications 1</title><link>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-10-webapps-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-10-webapps-1/</guid><description>&lt;h2 id="prelab">Prelab&lt;/h2>
&lt;p>&lt;strong>P1.&lt;/strong> Make sure the &lt;a href="https://github.com/htw-imi-info3/django_lab_scaffold/">scaffold app&lt;/a> is installed and running on your machine. Refer to the &lt;a href="https://github.com/htw-imi-info3/django_lab_scaffold/blob/main/README.md">README.md&lt;/a> for instructions. &lt;a href="https://github.com/htw-imi-info3/django_lab_scaffold/">https://github.com/htw-imi-info3/django_lab_scaffold/&lt;/a>&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> Startup the app, and create some testdata, using both the studybuddy_app app and the admin app.&lt;/p>
&lt;p>&lt;strong>P3.&lt;/strong> Have a look at the sourcecode, especially the studybuddy_app part and the Meetup model. Can you make sense of the source code? Take notes of things that are unclear and questions.&lt;/p>
&lt;p>&lt;strong>P4.&lt;/strong> How does rsvp (participate in meetup) work?&lt;/p></description></item><item><title>Lab 10: Finite State Automata and Sorting Algorithms</title><link>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-10/</guid><description>&lt;div class="alert alert-warning" role="alert">
 
 As we haven't discussed Heapsort in enough detail yet, you can postpone the Heapsort walkthroughs to a later lab/time after we discussed Trees, Heaps and Heapsort in more detail. 

&lt;/div>

&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> What is the difference between an NFA and an DFA?&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> Which sorting algorithms have you learned about so far? Review their algorithms.&lt;/p>
&lt;p>&lt;a href="https://www.geeksforgeeks.org/">Geeks for Geeks&lt;/a> has some helpful explanations, including nice videos. Useful for a quick reminder of the algorithms. Eg. &lt;a href="https://www.geeksforgeeks.org/selection-sort/">Selection Sort&lt;/a>.&lt;/p></description></item><item><title>11 - Web Applications 2</title><link>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-11-webapps-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/info3/labs/lab-11-webapps-2/</guid><description>&lt;h2 id="prelab">Prelab&lt;/h2>
&lt;p>&lt;strong>P1.&lt;/strong> Bring your Application from last Week.&lt;/p>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;h3 id="part-1-amend-the-page-structure">Part 1: Amend the Page Structure&lt;/h3>
&lt;p>Change the index and home pages (Home and StudyBuddy in the navigation) if appropriate.&lt;/p>
&lt;h3 id="part-2-make-your-model-editable">Part 2: Make your Model Editable&lt;/h3>
&lt;p>Last Week, you&amp;rsquo;ve created a Detail View for your Model.
make your model editable by adding the appropriate paths, views and last not least a template with a form for editing your model.&lt;/p>
&lt;p>This exercise is about the basic mechanics of forms and handling form data/requests in the app.&lt;/p></description></item><item><title>Lab 12: Scrabble Cheater - Basic Edition</title><link>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-12-old/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-12-old/</guid><description>&lt;p>&lt;img src="./../images/scrabble_4468636695_2434bc60ff_b.jpg" alt="Scrabble" title="scrabble tile rack">
Foto by &lt;a href="https://www.flickr.com/photos/mk1971/4468636695">Mags_cat&lt;/a>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> Review the rules of &lt;a href="https://en.wikipedia.org/wiki/Scrabble">Scrabble&lt;/a>, if you have never played it before.&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> What is a permutation?&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> What would a normalization function for different permutations of words look like? That is, &amp;ldquo;JAVA&amp;rdquo; and &amp;ldquo;VAJA&amp;rdquo; are permutations, what would a normalized permutation look like?&lt;/p>
&lt;p>&lt;em>&lt;strong>P4.&lt;/strong>&lt;/em> How do you determine if two Strings are permutations of each other?&lt;/p></description></item><item><title>Lab 12: Scrabble Cheater - Basic Edition</title><link>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-12/</guid><description>&lt;p>&lt;img src="./../images/scrabble_4468636695_2434bc60ff_b.jpg" alt="Scrabble" title="scrabble tile rack">
Foto by &lt;a href="https://www.flickr.com/photos/mk1971/4468636695">Mags_cat&lt;/a>&lt;/p>
&lt;p>TBD!!!!&lt;/p>
&lt;ul>
&lt;li>Permutation#equals method should check on equal words, not on equality based on permutation.&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> Review the rules of &lt;a href="https://en.wikipedia.org/wiki/Scrabble">Scrabble&lt;/a>, if you have never played it before.&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> What is a permutation?&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> What would a normalization function for different permutations of words look like? That is, &amp;ldquo;JAVA&amp;rdquo; and &amp;ldquo;VAJA&amp;rdquo; are permutations, what would a normalized permutation look like?&lt;/p></description></item><item><title>While Loop</title><link>https://bkleinen.github.io/material/info1-script/01_basics/while-loop/</link><pubDate>Tue, 24 Oct 2023 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/info1-script/01_basics/while-loop/</guid><description>&lt;h4 id="while-loop">While Loop&lt;/h4>
&lt;h1 id="structure">Structure&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// before loop&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">condition&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// loop body&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> 
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// after loop&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="shorter">shorter&lt;/h1>
&lt;pre class="mermaid">
flowchart TD
 S[Start]
 C{cond?}
 L(LOOP BODY)
 E(End)
 S --> C
 
 C --true?--> L
 L --> C
 C -->|false?| E
&lt;/pre>

&lt;h1 id="longer-version">longer version&lt;/h1>
&lt;pre class="mermaid">flowchart TD
 A[Start]
 B(before loop)
 L(loop body)
 F(after loop)

 A --> B
 B --> C{condition true?}
 L --> C
 C --true--> L
 C -->|false| F
 
 F -->G[End]
&lt;/pre>

&lt;pre tabindex="0">&lt;code>## Examples

## Further Reading

https://docs.oracle.com/javase/tutorial/java/nutsandbolts/while.html
&lt;/code>&lt;/pre></description></item><item><title>M1 Labs Overall Schedule</title><link>https://bkleinen.github.io/classes/ws2019/m1-web/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/m1-web/schedule/</guid><description>&lt;!-- raw HTML omitted -->
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">JF&lt;/th>
 &lt;th style="text-align: left">Topic Area&lt;/th>
 &lt;th style="text-align: left">Lecturer&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">40&lt;/td>
 &lt;td style="text-align: left">Wed, 2019-10-02&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">no class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Wed, 2019-10-09&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">no class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Wed, 2019-10-16&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Wed, 2019-10-23&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Wed, 2019-10-30&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Wed, 2019-11-06&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Wed, 2019-11-13&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Wed, 2019-11-20&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Wed, 2019-11-27&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Wed, 2019-12-04&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Kai Barthel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Wed, 2019-12-11&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Wed, 2019-12-18&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Wed, 2020-01-08&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Wed, 2020-01-15&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">2 x Web Technology (starting at 8:00)&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Wed, 2020-01-22&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Wed, 2020-01-29&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>M1 Labs Overall Schedule</title><link>https://bkleinen.github.io/classes/ss2020/m1-web/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/m1-web/schedule/</guid><description>&lt;p>This schedule is, as always, tentative.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">JF&lt;/th>
 &lt;th style="text-align: left">Topic Area&lt;/th>
 &lt;th style="text-align: left">Lecturer&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">Wed 01/04/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">no class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Wed 08/04/2020&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Wed 15/04/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Wed 22/04/2020&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Wed 29/04/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Wed 06/05/2020&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Wed 13/05/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Wed 20/05/2020&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Wed 27/05/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Kai Barthel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Wed 03/06/2020&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Wed 10/06/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Wed 17/06/2020&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Wed 24/06/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Wed 01/07/2020&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Wed 08/07/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">Wed 15/07/2020&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>M1 Labs Overall Schedule</title><link>https://bkleinen.github.io/classes/ws2020/m1-web/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/m1-web/schedule/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic Area&lt;/th>
 &lt;th style="text-align: left">Lecturer&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Wed 07/10/2020&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Wed 14/10/2020&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Wed 21/10/2020&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Wed 28/10/2020&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Wed 04/11/2020&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Wed 11/11/2020&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Wed 18/11/2020&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Wed 25/11/2020&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Wed 02/12/2020&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Wed 09/12/2020&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Wed 16/12/2020&lt;/td>
 &lt;td style="text-align: left">- TBD -&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">52&lt;/td>
 &lt;td style="text-align: left">Wed 23/12/2020&lt;/td>
 &lt;td style="text-align: left">Vorlesungsfrei&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">53&lt;/td>
 &lt;td style="text-align: left">Wed 30/12/2020&lt;/td>
 &lt;td style="text-align: left">Vorlesungsfrei&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Wed 06/01/2021&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Wed 13/01/2021&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Wed 20/01/2021&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Wed 27/01/2021&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Wed 03/02/2021&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">Wed 10/02/2021&lt;/td>
 &lt;td style="text-align: left">- TBD -&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>M1 Labs Overall Schedule</title><link>https://bkleinen.github.io/classes/ss2021/m1-web/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/m1-web/schedule/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic Area&lt;/th>
 &lt;th style="text-align: left">Lecturer&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">Wed 07/04/2021&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Wed 14/04/2021&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Wed 21/04/2021&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Kai Barthel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Wed 28/04/2021&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Wed 05/05/2021&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Wed 12/05/2021&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Wed 19/05/2021&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Wed 26/05/2021&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Wed 02/06/2021&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Wed 09/06/2021&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Wed 16/06/2021&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Wed 23/06/2021&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Wed 30/06/2021&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Wed 07/07/2021&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Wed 14/07/2021&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>M1 Labs Overall Schedule</title><link>https://bkleinen.github.io/classes/ws2021/m1-web/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/m1-web/schedule/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic Area&lt;/th>
 &lt;th style="text-align: left">Lecturer&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">40&lt;/td>
 &lt;td style="text-align: left">Wed 06/10/2021&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Wed 13/10/2021&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Wed 20/10/2021&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Kai Barthel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Wed 27/10/2021&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Wed 03/11/2021&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Wed 10/11/2021&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Wed 17/11/2021&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Wed 24/11/2021&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Wed 01/12/2021&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Wed 08/12/2021&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Wed 15/12/2021&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Wed 22/12/2021&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">52&lt;/td>
 &lt;td style="text-align: left">Wed 29/12/2021&lt;/td>
 &lt;td style="text-align: left">Vorlesungsfrei&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Wed 05/01/2022&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Wed 12/01/2022&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Wed 19/01/2022&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Wed 26/01/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Wed 02/02/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">Wed 09/02/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>M1 Labs Overall Schedule</title><link>https://bkleinen.github.io/classes/ss2022/m1-web/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/m1-web/schedule/</guid><description>&lt;p>tentative schedule&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic Area&lt;/th>
 &lt;th style="text-align: left">Lecturer&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">Wed 06/04/2022&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Wed 13/04/2022&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Wed 20/04/2022&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Kai Barthel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Wed 27/04/2022&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Wed 04/05/2022&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Sat 7/05/2022 9-14&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Michele Krüger&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Sat 21/05/2022 9-14&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Michele Krüger&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Wed 11/05/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Wed 18/05/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Wed 25/05/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Wed 01/06/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Wed 08/06/2022&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Wed 15/06/2022&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Wed 22/06/2022&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Wed 29/06/2022&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Wed 06/07/2022&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Wed 13/07/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">Wed 20/07/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">30&lt;/td>
 &lt;td style="text-align: left">Wed 27/07/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>09:00 bis 14:00	14tägl	07.05.2022 bis 21.05.2022&lt;/p></description></item><item><title>M1 WS 2022 Labs Schedule</title><link>https://bkleinen.github.io/classes/ws2022/m1-web/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2022/m1-web/schedule/</guid><description>&lt;h2 id="kopie-vom-sose-2023-needs-to-be-updated">Kopie vom SoSe 2023!!! needs to be updated&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic Area&lt;/th>
 &lt;th style="text-align: left">Lecturer&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">x&lt;/td>
 &lt;td style="text-align: left">xxxx&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">x&lt;/td>
 &lt;td style="text-align: left">xxxx&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">x&lt;/td>
 &lt;td style="text-align: left">xxxx&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Kai Barthel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">x&lt;/td>
 &lt;td style="text-align: left">xxxx&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">x&lt;/td>
 &lt;td style="text-align: left">xxxx&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">x&lt;/td>
 &lt;td style="text-align: left">xxxx&lt;/td>
 &lt;td style="text-align: left">(Mittwoch vor Himmelfahrt)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">x&lt;/td>
 &lt;td style="text-align: left">xxxx&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Philipp Bönsch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">x&lt;/td>
 &lt;td style="text-align: left">xxxx&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Philipp Bönsch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">x&lt;/td>
 &lt;td style="text-align: left">xxxx&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Philipp Bönsch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">x&lt;/td>
 &lt;td style="text-align: left">xxxx&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Philipp Bönsch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">x&lt;/td>
 &lt;td style="text-align: left">xxxx&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Philipp Bönsch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">x&lt;/td>
 &lt;td style="text-align: left">xxxx&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">x&lt;/td>
 &lt;td style="text-align: left">xxxx&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">x&lt;/td>
 &lt;td style="text-align: left">xxxx&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">x&lt;/td>
 &lt;td style="text-align: left">xxxx&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">x&lt;/td>
 &lt;td style="text-align: left">xxxx&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">x&lt;/td>
 &lt;td style="text-align: left">xxxx&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>M1 SS 2023 Labs Schedule</title><link>https://bkleinen.github.io/classes/ss2023/m1-web/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/m1-web/schedule/</guid><description>&lt;p>First Draft and Subject to change!&lt;/p>
&lt;p>Mi.	12:15 bis 13:45	woch	12.04.2023 bis 02.08.2023 WH Gebäude C 579&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic Area&lt;/th>
 &lt;th style="text-align: left">Lecturer&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Wed 12/04/2023&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Wed 19/04/2023&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Wed 26/04/2023&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Kai Barthel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Wed 03/05/2023&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Wed 10/05/2023&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Wed 17/05/2023&lt;/td>
 &lt;td style="text-align: left">(Mittwoch vor Himmelfahrt)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Wed 24/05/2023&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Philipp Bönsch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Wed 31/05/2023&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Philipp Bönsch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Wed 07/06/2023&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Philipp Bönsch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Wed 14/06/2023&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Philipp Bönsch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Wed 21/06/2023&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Philipp Bönsch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Wed 28/06/2023&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Wed 05/07/2023&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Wed 12/07/2023&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">Wed 19/07/2023&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">30&lt;/td>
 &lt;td style="text-align: left">Wed 26/07/2023&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Gefei Zhang&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">31&lt;/td>
 &lt;td style="text-align: left">Wed 02/08/2023&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>M1 WS 2023/24 Labs Schedule</title><link>https://bkleinen.github.io/classes/ws2023/m1-web/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2023/m1-web/schedule/</guid><description>&lt;p>Stand: 14.2.2024 /
&lt;a href="https://bkleinen.github.io/classes/m1">M1 Schedule Overview&lt;/a>
/
&lt;a href="https://github.com/bkleinen/bkleinen.github.io/blob/main/content/classes/ws2023/m1-web/schedule/index.md">Edit this page via github&lt;/a>&lt;/p>
&lt;p>Mi.	12:15 bis 13:45	 WH C 579&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic Area&lt;/th>
 &lt;th style="text-align: left">Lecturer&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">40&lt;/td>
 &lt;td style="text-align: left">Wed 04/10/2023&lt;/td>
 &lt;td style="text-align: left">Hochschultag, Vorlesungsfrei&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Wed 11/10/2023&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Wed 18/10/2023&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Wed 25/10/2023&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Wed 01/11/2023&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Wed 08/11/2023&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Wed 15/11/2023&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Philipp Bönsch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Wed 22/11/2023&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Philipp Bönsch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Wed 29/11/2023&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Philipp Bönsch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Wed 06/12/2023&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Philipp Bönsch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Wed 13/12/2023&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Philipp Bönsch&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Wed 20/12/2023&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">52&lt;/td>
 &lt;td style="text-align: left">Wed 27/12/2023&lt;/td>
 &lt;td style="text-align: left">Winterpause&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Wed 03/01/2024&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Wed 10/01/2024&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Kai Barthel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Wed 17/01/2024&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Wed 24/01/2024&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Wed 31/01/2024&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>M1 Schedules - History</title><link>https://bkleinen.github.io/classes/m1/</link><pubDate>Sat, 10 Feb 2024 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/m1/</guid><description>&lt;ul>

 

 
 
 

 
 
 

 

 
 
 

 
 
 

 

 
 
 

 

 
 
 

 

 
 
 

 

 
 
 

 

 
 
 

 

 
 
 

 

 
 
 

 

 
 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 

 
 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 

 

 

 

 
 
 

 
 
 

 
 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 

 
 
 

 

 
 
 

 
 
 

 
 
 

 
 
 

 
 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 

 

 
 
 

 

 
 
 

 
 
 

 

 
 
 

 

 
 
 

 

 

 

 
 
 

 

 
 
 

 
 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

&lt;/ul></description></item><item><title>M1 SoSe 2024 Labs Schedule</title><link>https://bkleinen.github.io/classes/ss2024/m1-web/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/m1-web/schedule/</guid><description>&lt;p>Stand: 24.4.2024 /
&lt;a href="https://bkleinen.github.io/classes/m1">M1 Schedule Overview&lt;/a>
/
&lt;a href="https://github.com/bkleinen/bkleinen.github.io/blob/main/content/classes/ss2024/m1-web/schedule/index.md">Edit this page via github&lt;/a> (ask BK for repo permissions first)&lt;/p>
&lt;p>Time and Room: See &lt;a href="https://lsf.htw-berlin.de/qisserver/rds?state=verpublish&amp;amp;status=init&amp;amp;vmfile=no&amp;amp;publishid=204497&amp;amp;moduleCall=webInfo&amp;amp;publishConfFile=webInfo&amp;amp;publishSubDir=veranstaltung">LSF&lt;/a>&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic Area&lt;/th>
 &lt;th style="text-align: left">Lecturer&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">Wed 03/04/2024&lt;/td>
 &lt;td style="text-align: left">(erster Vorlesungstag)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Wed 10/04/2024&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://wiki.htw-berlin.de/confluence/display/fb4imi/Projekte+im+SoSe+2024">Projektvergabe Bachelor parallel (Master gleich im Anschluss!)&lt;/a>&lt;/td>
 &lt;td style="text-align: left">siehe &lt;a href="https://lsf.htw-berlin.de/qisserver/rds?state=verpublish&amp;amp;status=init&amp;amp;vmfile=no&amp;amp;publishid=204920&amp;amp;moduleCall=webInfo&amp;amp;publishConfFile=webInfo&amp;amp;publishSubDir=veranstaltung">LSF&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Wed 17/04/2024&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Wed 24/04/2024&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Wed 01/05/2024&lt;/td>
 &lt;td style="text-align: left">Feiertag&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Wed 08/05/2024&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Wed 15/05/2024&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Wed 22/05/2024&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Wed 29/05/2024&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Guido Pagliettini&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Wed 05/06/2024&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Guido Pagliettini&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Wed 12/06/2024&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Guido Pagliettini&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Wed 19/06/2024&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Guido Pagliettini&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Wed 26/06/2024&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Wed 03/07/2024&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Wed 10/07/2024&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Kai Barthel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">Wed 17/07/2024 (PZ1)&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">30&lt;/td>
 &lt;td style="text-align: left">Wed 24/07/2024 (PZ1)&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">31&lt;/td>
 &lt;td style="text-align: left">Wed 31/07/2024 (PZ1)&lt;/td>
 &lt;td style="text-align: left">Web Technology /TBD&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>M1 WS 2024/2025 Labs Schedule</title><link>https://bkleinen.github.io/classes/ws2024/m1-web/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2024/m1-web/schedule/</guid><description>&lt;p>Stand: 09.06.2024 - first draft!!
&lt;a href="https://bkleinen.github.io/classes/m1">M1 Schedule Overview&lt;/a>
/
&lt;a href="https://github.com/progwebtec/progwebtec.github.io/blob/main/content/classes/ws2024/m1-web/schedule/index.md">Edit this page via github&lt;/a> (ask BK for repo permissions first)&lt;/p>
&lt;p>Time and Room: See &lt;a href="#tbd">LSF&lt;/a>&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic Area&lt;/th>
 &lt;th style="text-align: left">Lecturer&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">40&lt;/td>
 &lt;td style="text-align: left">Wed 02/10/2024&lt;/td>
 &lt;td style="text-align: left">(erster Vorlesungstag)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Wed 09/10/2024&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Wed 16/10/2024&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Wed 23/10/2024&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Kai Barthel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Wed 30/10/2024&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Wed 06/11/2024&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Wed 13/11/2024&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Wed 20/11/2024&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Wed 27/11/2024&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Wed 04/12/2024&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Wed 11/12/2024&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Wed 18/12/2024&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">52&lt;/td>
 &lt;td style="text-align: left">Wed 25/12/2024&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Wed 01/01/2025&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Wed 08/01/2025&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Guido Pagliettini&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Wed 15/01/2025&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Guido Pagliettini&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Wed 22/01/2025 (1.PZ)&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Guido Pagliettini&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Wed 29/01/2025 (1.PZ)&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Guido Pagliettini&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">Wed 05/02/2025 (1.PZ)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Videos Software Engineering</title><link>https://bkleinen.github.io/bibliographies/se_videos/</link><pubDate>Sat, 22 Apr 2023 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/bibliographies/se_videos/</guid><description/></item><item><title>Working with HTW Machines</title><link>https://bkleinen.github.io/material/ops/hrz/</link><pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/ops/hrz/</guid><description>&lt;h2 id="copy-files-from-your-hrz-home-directory-aka-htw-space">Copy files from your HRZ Home Directory (aka HTW-Space)&lt;/h2>
&lt;p>There are rather verbose manuals about various ways to
copy files from your HTW-RZ home directory to somewhere else.
(see
&lt;a href="https://rz.htw-berlin.de/anleitungen/speicherplatz/htw-space/webdrive/freigabe-dateien-und-ordner/">Freigabe von Dateien und Ordner über den Webdrive&lt;/a>
)&lt;/p>
&lt;p>The gist is: you may connect via SSH File Transfer Protocol to the server
webdrive.htw-berlin.de (on default port 22)- see example below.
The &lt;a href="https://man.openbsd.org/sftp">sftp&lt;/a> program used in the example is included in
the &lt;a href="https://www.openssh.com/manual.html">OpenSSH Package&lt;/a>; most probably you&amp;rsquo;ll
already have it installed on your computer, e.g. in git-bash on a windows machine.&lt;/p></description></item><item><title>Code Highlighting</title><link>https://bkleinen.github.io/material/hugo/code_highlighting/</link><pubDate>Sat, 23 Oct 2021 08:44:57 +0200</pubDate><guid>https://bkleinen.github.io/material/hugo/code_highlighting/</guid><description>&lt;h2 id="syntax-highlighting-tryout">Syntax Highlighting Tryout&lt;/h2>
&lt;p>Notes:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>switch off javascript that adds bootstrap styles to tables in frontmatter:
&lt;code>NoStripedTables: true&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>many styles available, they can either be set in config (see markup.toml) or
with the setting &lt;code>noClasses=false&lt;/code> via stylesheets. see &lt;code>syntax-xxx.scss&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://gohugo.io/content-management/syntax-highlighting/">Hugo Doc&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Chroma Styles:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://xyproto.github.io/splash/docs/all.html">Chroma Style Gallery&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://xyproto.github.io/splash/docs/longer/all.html">Longer&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="example-from-page">Example from page:&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="hl">&lt;span class="lnt">199
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line hl">&lt;span class="cl">&lt;span class="c1">// ... code
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;h3 id="without-anything">Without anything&lt;/h3>
&lt;pre tabindex="0">&lt;code>$ ls -lart
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="bash">Bash&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">199
&lt;/span>&lt;span class="lnt">200
&lt;/span>&lt;span class="lnt">201
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ ls -lart
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">some output
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">199
&lt;/span>&lt;span class="lnt">200
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ls -lart&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">asdffs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="heading">&lt;/h3>
&lt;p>style = &amp;lsquo;monokai&amp;rsquo;&lt;/p></description></item><item><title>Debian Server</title><link>https://bkleinen.github.io/material/ops/debian-server/</link><pubDate>Wed, 20 Oct 2021 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/ops/debian-server/</guid><description>&lt;p>This is a short Manual on how to configure a Debian virtual Server hosted at HTW FB4.&lt;/p>
&lt;h1 id="general-things">General Things&lt;/h1>
&lt;h2 id="snowflakes">Snowflakes&lt;/h2>
&lt;p>Configuring a server manually results in a &lt;a href="https://martinfowler.com/bliki/SnowflakeServer.html">Snowflake Server&lt;/a>.&lt;/p>
&lt;p>I&amp;rsquo;ve logged the config changes as best I could in this repo, check the &lt;a href="https://github.com/htw-imi-networks/example-config/commits/main">commits&lt;/a>:
&lt;a href="https://github.com/htw-imi-networks/example-config">https://github.com/htw-imi-networks/example-config&lt;/a>&lt;/p>
&lt;h2 id="shell--path">Shell &amp;amp; Path&lt;/h2>
&lt;p>&amp;hellip; TBD&lt;/p>
&lt;h3 id="path">Path&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># echo $PATH&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="editor">Editor&lt;/h2>
&lt;p>You should be able to survive in one of the available editors, e.g. &lt;a href="https://bkleinen.github.io/material/ops/vi/">VI&lt;/a>&lt;/p>
&lt;p>Set the default editor to ensure it is used eg. by visudo:&lt;/p></description></item><item><title>Notes on Sketchnotes</title><link>https://bkleinen.github.io/material/visual/sketchnotes/</link><pubDate>Wed, 20 Oct 2021 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/visual/sketchnotes/</guid><description>&lt;p>To get started with sketchnotes, I recommend one of the sketchnote workshops held at Re:publica (about 1h):&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=hJKK9m5-xEY">the one at Republica 2015&lt;/a> is great, but the sketches on the flipcarts
are sometimes hard to see.&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=IBq9VoRJQWU&amp;amp;t=1400s">in 2016&lt;/a> they projected the sketchnotes, but mirror-inverted :)&lt;/li>
&lt;/ul>
&lt;p>If you want to dig deeper:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://rohdesign.com">Martin Rhode&lt;/a> coined the term with &lt;a href="https://rohdesign.com/handbook">&amp;ldquo;The Sketchnote Handbook&amp;rdquo;&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.schrockguide.net/sketchnoting.html">Kathy Schrock on Sketchnoting in Education&lt;/a> - with lots of resources&lt;/li>
&lt;li>&lt;a href="https://sketchnotes.de/2013/04/11/ueber-sketchnotes-lehren-und-lernen/">Über Sketchnotes, lehren und lernen&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="on-visual-notetaking-in-general">On Visual Notetaking in General&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=gj3ZnKlHqxI">Wie Zeichnen beim Merken hilft, Graham Shaw, TEDxVienna&lt;/a>&lt;/li>
&lt;li>and, last not least: &lt;a href="https://www.youtube.com/watch?v=vjrJYuJP2-w">Ottis kleine Malstunde&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Nginx</title><link>https://bkleinen.github.io/material/ops/nginx/</link><pubDate>Fri, 08 Oct 2021 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/ops/nginx/</guid><description>&lt;h2 id="nginx">nginX&lt;/h2>
&lt;ul>
&lt;li>Website: &lt;a href="https://nginx.org/">https://nginx.org/&lt;/a>&lt;/li>
&lt;li>Documentation: &lt;a href="https://nginx.org/en/docs/">https://nginx.org/en/docs/&lt;/a>&lt;/li>
&lt;li>Download: &lt;a href="https://nginx.org/en/download.html">nginx: download&lt;/a>&lt;/li>
&lt;li>Installation: &lt;a href="https://nginx.org/en/docs/install.html">https://nginx.org/en/docs/install.html&lt;/a>
&lt;ul>
&lt;li>Windows: &lt;a href="http://nginx.org/en/docs/windows.html">http://nginx.org/en/docs/windows.html&lt;/a>&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Beginner&amp;rsquo;s guide: &lt;a href="http://nginx.org/en/docs/beginners_guide.html">http://nginx.org/en/docs/beginners_guide.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>ءBy default, the configuration file is named nginx.conf and placed in the
directory &lt;code>/usr/local/nginx/conf&lt;/code>, &lt;code>/etc/nginx&lt;/code>, or &lt;code>/usr/local/etc/nginx&lt;/code>.&lt;/p>
&lt;h3 id="notes--macos">Notes / MacOs&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>installation with homebrew:&lt;/p>
&lt;pre>&lt;code> brew install nginx
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>start nginx&lt;/p>
&lt;pre>&lt;code> nginx -s
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Where signal may be one of the following:&lt;/p>
&lt;pre>&lt;code> stop — fast shutdown
 quit — graceful shutdown
 reload — reloading the configuration file
 reopen — reopening the log files
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>put configuration under version control:&lt;/p></description></item><item><title>VI</title><link>https://bkleinen.github.io/material/ops/vi/</link><pubDate>Fri, 08 Oct 2021 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/ops/vi/</guid><description>&lt;h1 id="vi">VI&lt;/h1>
&lt;p>You should learn a couple of vi commands to survive, as vi is available on most *nix computers.&lt;/p>
&lt;h2 id="the-absolute-minimum">The absolute minimum&lt;/h2>
&lt;p>There are two modes in vi: normal and insert.
You need to know which mode you are in, as different commands are available.
&lt;a href="https://www.nngroup.com/articles/modes/">(Why this may be problematic has been discussed thoroughly in the UX field)&lt;/a>&lt;/p>
&lt;ul>
&lt;li>Normal Mode:
&lt;ul>
&lt;li>vi starts there&lt;/li>
&lt;li>&lt;strong>get there with &lt;code>ESC&lt;/code>&lt;/strong>&lt;/li>
&lt;li>start command with&lt;code>:&lt;/code>&lt;/li>
&lt;li>&lt;code>:w&lt;/code> write (save) file&lt;/li>
&lt;li>&lt;code>:q&lt;/code> quit (without save, won’t quit if there are changes)&lt;/li>
&lt;li>&lt;strong>&lt;code>:wq&lt;/code> quit and save&lt;/strong>&lt;/li>
&lt;li>&lt;code>:q!&lt;/code> quit without save no matter what&lt;/li>
&lt;li>&amp;lt; &lt;code>h&lt;/code> ^&lt;code> j&lt;/code> v &lt;code>k &lt;/code> &amp;gt;&lt;code>l&lt;/code> the keys under your right hand double as cursor keys; this makes editing fast!&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Insert Mode:
&lt;ul>
&lt;li>type to insert text&lt;/li>
&lt;li>get there with any insert command, eg
&lt;ul>
&lt;li>&lt;strong>&lt;code>i&lt;/code> insert before cursor&lt;/strong>&lt;/li>
&lt;li>&lt;code>a&lt;/code> insert after cursor&lt;/li>
&lt;li>&lt;code>o&lt;/code> insert in new line after this one&lt;/li>
&lt;li>&lt;code>O&lt;/code> insert in new line before this one&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="some-links-and-further-resources">Some Links and further Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html">Graphical vi-vim Cheat Sheet and Tutorial&lt;/a>, &lt;a href="https://www.glump.net/_media/howto/desktop/vim-graphical-cheat-sheet-and-tutorial/vi-vim-cheat-sheet-and-tutorial.pdf">also available in one PDF&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.viemu.com/a-why-vi-vim.html">Why, oh WHY, do those #?@! nutheads use vi?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikibooks.org/wiki/Learning_the_vi_Editor/Vim/Modes">Learning the vi Editor/Vim/Modes - Wikibooks, open books for an open world&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title/><link>https://bkleinen.github.io/classes/ss2014/info3/labs/tech-stuff/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info3/labs/tech-stuff/</guid><description>&lt;h2 id="which-computer-to-use">Which Computer to use?&lt;/h2>
&lt;p>As most of your colleagues in the former semesters completely ignored the new &lt;a href="https://imi-bachelor.htw-berlin.de/studium/labore/web-technology/">iMacs in our Web Technology lab&lt;/a> and rather unfolded their old, dirty little subnotebooks in front of the 27&amp;rsquo;&amp;rsquo; screens (which even cannot be used as an external monitor), I expect that you will also mainly use your personal computers for working on the exercises. If doing so, you need to make sure to have a set of software available.&lt;/p></description></item><item><title/><link>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-08-chat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-08-chat/</guid><description>&lt;h2 id="layout-lab">chat&amp;mdash;
title: &amp;lsquo;Info2: Exercise 08: Multi-Threaded Chat Application&amp;rsquo;
author: kleinen
layout: lab&lt;/h2>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Experiment with the Source Code Examples for Concurrency.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Do a Class Design for your Chat Application: Don&amp;rsquo;t put all of the Server in one and all of the Client in another class; design small classes with one responsibility and small methods. Especially the user interface should not be intermingled with the rest of the application.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="assignment-multi-threaded-chat">Assignment: Multi-Threaded Chat&lt;/h2>
&lt;p>This builds on &lt;a href="../lab-03">Assignment 3, Chatterbox&lt;/a>, where you built a little Chat Application that was only able to handle one connection from one client. Now you are required to build a full Chat Application with a Server that allows multiple clients to connect, and sends chat messages to all connected clients. To do this simultaneously, e.g. accept user input in the client and receive messages from the server, you will need multiple threads both in the client and the server.&lt;/p></description></item><item><title/><link>https://bkleinen.github.io/classes/ss2017/media-programming-rails/assignments/week-1-takeouts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/media-programming-rails/assignments/week-1-takeouts/</guid><description>&lt;p>&lt;a href="https://github.com/htw-imi-m1-ss2017/ruby-learning">https://github.com/htw-imi-m1-ss2017/ruby-learning&lt;/a>&lt;/p>
&lt;h3 id="working-on-your-project">Working on your project&lt;/h3>
&lt;ol>
&lt;li>Write down your project vision.&lt;/li>
&lt;li>Write down your product backlog. Roughly prioritize it for business value. Don&amp;rsquo;t hesitate to write down as many stories as you want, you don&amp;rsquo;t have to implement them all.&lt;/li>
&lt;li>Pick a user story that you can implement with simple CRUD operations.&lt;/li>
&lt;li>Draw a scribble for the screens involved.&lt;/li>
&lt;li>Draw a first sketch of the data model that is suffient for this story.&lt;/li>
&lt;li>Create a new rails application.&lt;/li>
&lt;li>Generate your first model/view/controller using &lt;code>rails generate scaffold&lt;/code>&lt;/li>
&lt;li>Have a look at the generated html templates (find dem in app/views). Change and document one thing that makes sense within your application.&lt;/li>
&lt;li>Next, pick a user story that requires to add a little bit of functionality to your app.&lt;/li>
&lt;li>Implement it by at least creating a new controller action and route by hand.&lt;/li>
&lt;/ol>
&lt;h3 id="reading-and-preparation">Reading and preparation&lt;/h3>
&lt;p>Starting next week, You will work on your project within the lab.
I will publish the next assignment by monday, enabling you to
start working on it and have your questions ready in the lab.
For preparation, please read through&lt;/p></description></item><item><title/><link>https://bkleinen.github.io/classes/ss2022/info1/material/videos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/info1/material/videos/</guid><description>&lt;p>&lt;a href="https://www.youtube.com/watch?v=Q1BuFi4UvpQ">(1) Chapter 1, video 2: exploring fundamental concepts via BlueJ. - YouTube&lt;/a>&lt;/p></description></item><item><title/><link>https://bkleinen.github.io/classes/ws2015/wt1wa/rails-topics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/wt1wa/rails-topics/</guid><description>&lt;h1 id="themen-für-rails-projekte">Themen für Rails-Projekte&lt;/h1>
&lt;ul>
&lt;li>Shop&lt;/li>
&lt;li>Terminmanagement für Gruppen, z.B. für Sportverein&lt;/li>
&lt;li>Forensystem&lt;/li>
&lt;li>CMS&lt;/li>
&lt;li>Todo-App&lt;/li>
&lt;li>Rezepte&lt;/li>
&lt;li>Live-Chat&lt;/li>
&lt;li>Twitter-Clone&lt;/li>
&lt;li>Bug-Reporting&lt;/li>
&lt;li>Wiki&lt;/li>
&lt;li>(Fußball-)Tipp-Spiel&lt;/li>
&lt;li>Trainingstagebuch&lt;/li>
&lt;li>WG-Verwaltung: Einkaufsliste, Finanzen,&lt;/li>
&lt;li>WG: Putzplan&lt;/li>
&lt;li>Github-Clone&lt;/li>
&lt;/ul></description></item><item><title/><link>https://bkleinen.github.io/classes/ws2016/media-programming-rails/media-programming-rails/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/media-programming-rails/media-programming-rails/</guid><description>&lt;p>[M1 Media Programming / Web Technology]({{ site.BaseURL }}/classes/ws2016/media-programming-rails):
[Schedule]({{ site.BaseURL }}/classes/ws2016/media-programming-rails/schedule/)
| &lt;a href="https://moodle.htw-berlin.de/course/view.php?id=11772">Moodle&lt;/a>
| &lt;a href="https://github.com/media-programming-rails">Github&lt;/a>
| &lt;a href="https://lsf.htw-berlin.de/qisserver/rds?state=wsearchv&amp;amp;search=2&amp;amp;veranstaltung.veranstid=120088">LSF&lt;/a>&lt;/p></description></item><item><title/><link>https://bkleinen.github.io/classes/ws2017/info3/labs/labs-notes-fuer-naechstes-mal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/info3/labs/labs-notes-fuer-naechstes-mal/</guid><description>&lt;p>in lab01 klar schreiben ob source code mit abgegeben werden soll oder nicht&lt;/p></description></item><item><title/><link>https://bkleinen.github.io/classes/ws2020/info3/flipped/lecacy-code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/info3/flipped/lecacy-code/</guid><description>&lt;p>&lt;a href="https://kata-log.rocks/parallel-change-kata">https://kata-log.rocks/parallel-change-kata&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://understandlegacycode.com/blog/key-points-of-working-effectively-with-legacy-code/">https://understandlegacycode.com/blog/key-points-of-working-effectively-with-legacy-code/&lt;/a>&lt;/p></description></item><item><title/><link>https://bkleinen.github.io/classes/ws2020/info3/labs/labs-notes-fuer-naechstes-mal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/info3/labs/labs-notes-fuer-naechstes-mal/</guid><description>&lt;p>in lab01 klar schreiben ob source code mit abgegeben werden soll oder nicht&lt;/p></description></item><item><title/><link>https://bkleinen.github.io/classes/ws2021/networks/flipped/weekplan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/networks/flipped/weekplan/</guid><description>&lt;html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:x="urn:schemas-microsoft-com:office:excel"
xmlns="http://www.w3.org/TR/REC-html40">

&lt;head>
&lt;meta http-equiv=Content-Type content="text/html; charset=utf-8">
&lt;meta name=ProgId content=Excel.Sheet>
&lt;meta name=Generator content="Microsoft Excel 15">
&lt;link rel=File-List href="schedule.fld/filelist.xml">
&lt;style id="schedule_1553_Styles">
&lt;!--table
	{mso-displayed-decimal-separator:"\,";
	mso-displayed-thousand-separator:"\.";}
@page
	{margin:.75in .7in .75in .7in;
	mso-header-margin:.3in;
	mso-footer-margin:.3in;}
tr
	{mso-height-source:auto;}
col
	{mso-width-source:auto;}
br
	{mso-data-placement:same-cell;}
.style0
	{mso-number-format:General;
	text-align:general;
	vertical-align:bottom;
	white-space:nowrap;
	mso-rotate:0;
	mso-background-source:auto;
	mso-pattern:auto;
	color:black;
	font-size:12.0pt;
	font-weight:400;
	font-style:normal;
	text-decoration:none;
	font-family:Calibri, sans-serif;
	mso-font-charset:0;
	border:none;
	mso-protection:locked visible;
	mso-style-name:Normal;
	mso-style-id:0;}
td
	{mso-style-parent:style0;
	padding-top:1px;
	padding-right:1px;
	padding-left:1px;
	mso-ignore:padding;
	color:black;
	font-size:12.0pt;
	font-weight:400;
	font-style:normal;
	text-decoration:none;
	font-family:Calibri, sans-serif;
	mso-font-charset:0;
	mso-number-format:General;
	text-align:general;
	vertical-align:bottom;
	border:none;
	mso-background-source:auto;
	mso-pattern:auto;
	mso-protection:locked visible;
	white-space:nowrap;
	mso-rotate:0;}
.xl65
	{mso-style-parent:style0;
	color:#212529;
	font-size:16.0pt;
	font-family:"Helvetica Neue", sans-serif;
	mso-font-charset:0;
	background:#FFC000;
	mso-pattern:black none;}
.xl66
	{mso-style-parent:style0;
	color:#212529;
	font-size:16.0pt;
	font-family:"Helvetica Neue", sans-serif;
	mso-font-charset:0;
	background:#70AD47;
	mso-pattern:black none;}
.xl67
	{mso-style-parent:style0;
	color:#212529;
	font-size:16.0pt;
	font-family:"Helvetica Neue", sans-serif;
	mso-font-charset:0;
	background:#5B9BD5;
	mso-pattern:black none;}
.xl68
	{mso-style-parent:style0;
	color:#212529;
	font-size:16.0pt;
	font-family:"Helvetica Neue", sans-serif;
	mso-font-charset:0;}
.xl69
	{mso-style-parent:style0;
	font-size:16.0pt;
	font-family:"Helvetica Neue", sans-serif;
	mso-font-charset:0;}
.xl70
	{mso-style-parent:style0;
	font-size:16.0pt;
	font-family:"Helvetica Neue", sans-serif;
	mso-font-charset:0;
	mso-number-format:"Short Date";}
.xl71
	{mso-style-parent:style0;
	color:#ED7D31;
	font-size:16.0pt;
	font-family:"Helvetica Neue", sans-serif;
	mso-font-charset:0;
	background:#FFC000;
	mso-pattern:black none;}
.xl72
	{mso-style-parent:style0;
	font-size:16.0pt;
	font-family:"Helvetica Neue", sans-serif;
	mso-font-charset:0;
	background:#70AD47;
	mso-pattern:black none;}
.xl73
	{mso-style-parent:style0;
	font-size:16.0pt;
	font-family:"Helvetica Neue", sans-serif;
	mso-font-charset:0;
	background:#5B9BD5;
	mso-pattern:black none;}
.xl74
	{mso-style-parent:style0;
	font-size:16.0pt;
	font-family:"Helvetica Neue", sans-serif;
	mso-font-charset:0;
	background:#FFC000;
	mso-pattern:black none;}
.xl75
	{mso-style-parent:style0;
	color:#212529;
	font-size:16.0pt;
	font-family:"Helvetica Neue", sans-serif;
	mso-font-charset:0;
	background:#FFE699;
	mso-pattern:black none;}
.xl76
	{mso-style-parent:style0;
	color:#212529;
	font-size:16.0pt;
	font-family:"Helvetica Neue", sans-serif;
	mso-font-charset:0;
	background:#A9D08E;
	mso-pattern:black none;}
.xl77
	{mso-style-parent:style0;
	color:#212529;
	font-size:16.0pt;
	font-family:"Helvetica Neue", sans-serif;
	mso-font-charset:0;
	background:#9BC2E6;
	mso-pattern:black none;}
.xl78
	{mso-style-parent:style0;
	color:#212529;
	font-size:16.0pt;
	font-family:"Helvetica Neue", sans-serif;
	mso-font-charset:0;
	background:#FFD966;
	mso-pattern:black none;}
.xl79
	{mso-style-parent:style0;
	font-size:16.0pt;
	font-family:"Helvetica Neue", sans-serif;
	mso-font-charset:0;
	mso-number-format:"Short Date";
	background:#9BC2E6;
	mso-pattern:black none;}
-->
&lt;/style>
&lt;/head>

&lt;body link="#0563C1" vlink="#954F72" class=xl69>
&lt;!--[if !excel]>&amp;nbsp;&amp;nbsp;&lt;![endif]-->
&lt;!--The following information was generated by Microsoft Excel's Publish as Web
Page wizard.-->
&lt;!--If the same item is republished from Excel, all information between the DIV
tags will be replaced.-->
&lt;!----------------------------->
&lt;!--START OF OUTPUT FROM EXCEL PUBLISH AS WEB PAGE WIZARD -->
&lt;!----------------------------->

&lt;div id="schedule_1553" align=center x:publishsource="Excel">

&lt;table border=0 cellpadding=0 cellspacing=0 width=1995 style='border-collapse:
 collapse;table-layout:fixed;width:1492pt'>
 &lt;col class=xl69 width=127 style='mso-width-source:userset;mso-width-alt:4053;
 width:95pt'>
 &lt;col class=xl69 width=132 style='mso-width-source:userset;mso-width-alt:4224;
 width:99pt'>
 &lt;col class=xl69 width=121 style='mso-width-source:userset;mso-width-alt:3882;
 width:91pt'>
 &lt;col class=xl69 width=95 span=17 style='mso-width-source:userset;mso-width-alt:
 3029;width:71pt'>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 width=127 style='height:20.0pt;width:95pt'>&lt;/td>
 &lt;td class=xl69 width=132 style='width:99pt'>&lt;/td>
 &lt;td class=xl69 width=121 style='width:91pt'>&lt;/td>
 &lt;td class=xl69 width=95 style='width:71pt'>&lt;/td>
 &lt;td class=xl69 width=95 style='width:71pt'>&lt;/td>
 &lt;td class=xl69 width=95 style='width:71pt'>&lt;/td>
 &lt;td class=xl69 width=95 style='width:71pt'>&lt;/td>
 &lt;td class=xl69 width=95 style='width:71pt'>&lt;/td>
 &lt;td class=xl69 width=95 style='width:71pt'>&lt;/td>
 &lt;td class=xl69 width=95 style='width:71pt'>&lt;/td>
 &lt;td class=xl69 width=95 style='width:71pt'>&lt;/td>
 &lt;td class=xl69 width=95 style='width:71pt'>&lt;/td>
 &lt;td class=xl69 width=95 style='width:71pt'>&lt;/td>
 &lt;td class=xl69 width=95 style='width:71pt'>&lt;/td>
 &lt;td class=xl69 width=95 style='width:71pt'>&lt;/td>
 &lt;td class=xl69 width=95 style='width:71pt'>&lt;/td>
 &lt;td class=xl69 width=95 style='width:71pt'>&lt;/td>
 &lt;td class=xl69 width=95 style='width:71pt'>&lt;/td>
 &lt;td class=xl69 width=95 style='width:71pt'>&lt;/td>
 &lt;td class=xl69 width=95 style='width:71pt'>&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>Week&lt;/td>
 &lt;td class=xl69 align=right>1&lt;/td>
 &lt;td class=xl69 align=right>2&lt;/td>
 &lt;td class=xl69 align=right>3&lt;/td>
 &lt;td class=xl69 align=right>4&lt;/td>
 &lt;td class=xl69 align=right>5&lt;/td>
 &lt;td class=xl69 align=right>6&lt;/td>
 &lt;td class=xl69 align=right>7&lt;/td>
 &lt;td class=xl69 align=right>8&lt;/td>
 &lt;td class=xl69 align=right>9&lt;/td>
 &lt;td class=xl69 align=right>10&lt;/td>
 &lt;td class=xl69 align=right>11&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69 align=right>12&lt;/td>
 &lt;td class=xl69 align=right>13&lt;/td>
 &lt;td class=xl69 align=right>14&lt;/td>
 &lt;td class=xl69 align=right>15&lt;/td>
 &lt;td class=xl69 align=right>16&lt;/td>
 &lt;td class=xl69 align=right>17&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>starting&lt;/td>
 &lt;td class=xl70 align=right>07.10.21&lt;/td>
 &lt;td class=xl70 align=right>14.10.21&lt;/td>
 &lt;td class=xl70 align=right>21.10.21&lt;/td>
 &lt;td class=xl70 align=right>28.10.21&lt;/td>
 &lt;td class=xl70 align=right>04.11.21&lt;/td>
 &lt;td class=xl70 align=right>11.11.21&lt;/td>
 &lt;td class=xl70 align=right>18.11.21&lt;/td>
 &lt;td class=xl70 align=right>25.11.21&lt;/td>
 &lt;td class=xl70 align=right>02.12.21&lt;/td>
 &lt;td class=xl70 align=right>09.12.21&lt;/td>
 &lt;td class=xl70 align=right>16.12.21&lt;/td>
 &lt;td class=xl70 align=right>23.12.21&lt;/td>
 &lt;td class=xl70 align=right>30.12.21&lt;/td>
 &lt;td class=xl70 align=right>06.01.22&lt;/td>
 &lt;td class=xl70 align=right>13.01.22&lt;/td>
 &lt;td class=xl70 align=right>20.01.22&lt;/td>
 &lt;td class=xl70 align=right>27.01.22&lt;/td>
 &lt;td class=xl70 align=right>03.02.22&lt;/td>
 &lt;td class=xl70 align=right>10.02.22&lt;/td>
 &lt;/tr>
 &lt;tr height=53 style='mso-height-source:userset;height:40.0pt'>
 &lt;td height=53 class=xl69 style='height:40.0pt'>Intro&lt;/td>
 &lt;td class=xl79>Lab Intro G1&lt;/td>
 &lt;td class=xl79>Lab Intro G2&lt;/td>
 &lt;td class=xl70>&lt;/td>
 &lt;td class=xl70>&lt;/td>
 &lt;td class=xl70>&lt;/td>
 &lt;td class=xl70>&lt;/td>
 &lt;td class=xl70>&lt;/td>
 &lt;td class=xl70>&lt;/td>
 &lt;td class=xl70>&lt;/td>
 &lt;td class=xl70>&lt;/td>
 &lt;td class=xl70>&lt;/td>
 &lt;td class=xl70>&lt;/td>
 &lt;td class=xl70>&lt;/td>
 &lt;td class=xl70>&lt;/td>
 &lt;td class=xl70>&lt;/td>
 &lt;td class=xl70>&lt;/td>
 &lt;td class=xl70>&lt;/td>
 &lt;td class=xl70>&lt;/td>
 &lt;td class=xl70>&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>Chapter 1&lt;/td>
 &lt;td class=xl65 colspan=4 style='mso-ignore:colspan'>Computer Networks and the
 Internet&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>&lt;/td>
 &lt;td class=xl65>R 1&lt;/td>
 &lt;td class=xl65>R 2&lt;/td>
 &lt;td class=xl75>Lab G1&lt;/td>
 &lt;td class=xl75>Lab G2&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>Chapter 2&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl66 colspan=2 style='mso-ignore:colspan'>Application Layer&lt;/td>
 &lt;td class=xl72>&amp;nbsp;&lt;/td>
 &lt;td class=xl72>&amp;nbsp;&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl66>R1&lt;/td>
 &lt;td class=xl66>R2&lt;/td>
 &lt;td class=xl76>L1&lt;/td>
 &lt;td class=xl76>L2&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>Chapter 3&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl67 colspan=2 style='mso-ignore:colspan'>Transport Layer&lt;/td>
 &lt;td class=xl73>&amp;nbsp;&lt;/td>
 &lt;td class=xl73>&amp;nbsp;&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl67>R1&lt;/td>
 &lt;td class=xl67>R2&lt;/td>
 &lt;td class=xl77>L1&lt;/td>
 &lt;td class=xl77>L2&lt;/td>
 &lt;td class=xl68>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>Chapter 4&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl65 colspan=4 style='mso-ignore:colspan'>The Network Layer: Data
 Plane&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl65>R1&lt;/td>
 &lt;td class=xl65>R2&lt;/td>
 &lt;td class=xl78>L1&lt;/td>
 &lt;td class=xl78>L2&lt;/td>
 &lt;td class=xl68>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>Chapter 5&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl66 colspan=4 style='mso-ignore:colspan'>The Network Layer:
 Control Plane&lt;/td>
 &lt;td class=xl72>&amp;nbsp;&lt;/td>
 &lt;td class=xl72>&amp;nbsp;&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl66>R1&lt;/td>
 &lt;td class=xl66>R2&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl76>L1&lt;/td>
 &lt;td class=xl76>L2&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>Chapter 6&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl67 colspan=3 style='mso-ignore:colspan'>The Link Layer and LANs&lt;/td>
 &lt;td class=xl73>&amp;nbsp;&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl67>R1&lt;/td>
 &lt;td class=xl67>R2&lt;/td>
 &lt;td class=xl77>L1&lt;/td>
 &lt;td class=xl77>L2&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>&lt;/td>
 &lt;td class=xl65>R 1&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69 colspan=6 style='mso-ignore:colspan'>read/watch Part 1 of this
 Chapter during this week&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>&lt;/td>
 &lt;td class=xl65>R 2&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69 colspan=6 style='mso-ignore:colspan'>read/watch Part 2 of this
 Chapter during this week&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>&lt;/td>
 &lt;td class=xl65>Lab G1&lt;/td>
 &lt;td class=xl66>L1&lt;/td>
 &lt;td class=xl68 colspan=6 style='mso-ignore:colspan'>Group 1 prepares lab for
 this Chapter during the week&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;/tr>
 &lt;tr height=27 style='height:20.0pt'>
 &lt;td height=27 class=xl69 style='height:20.0pt'>&lt;/td>
 &lt;td class=xl65>Lab G2&lt;/td>
 &lt;td class=xl66>L2&lt;/td>
 &lt;td class=xl68 colspan=6 style='mso-ignore:colspan'>Group 2 prepares lab for
 this Chapter during the week&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;td class=xl69>&lt;/td>
 &lt;/tr>
 &lt;![if supportMisalignedColumns]>
 &lt;tr height=0 style='display:none'>
 &lt;td width=127 style='width:95pt'>&lt;/td>
 &lt;td width=132 style='width:99pt'>&lt;/td>
 &lt;td width=121 style='width:91pt'>&lt;/td>
 &lt;td width=95 style='width:71pt'>&lt;/td>
 &lt;td width=95 style='width:71pt'>&lt;/td>
 &lt;td width=95 style='width:71pt'>&lt;/td>
 &lt;td width=95 style='width:71pt'>&lt;/td>
 &lt;td width=95 style='width:71pt'>&lt;/td>
 &lt;td width=95 style='width:71pt'>&lt;/td>
 &lt;td width=95 style='width:71pt'>&lt;/td>
 &lt;td width=95 style='width:71pt'>&lt;/td>
 &lt;td width=95 style='width:71pt'>&lt;/td>
 &lt;td width=95 style='width:71pt'>&lt;/td>
 &lt;td width=95 style='width:71pt'>&lt;/td>
 &lt;td width=95 style='width:71pt'>&lt;/td>
 &lt;td width=95 style='width:71pt'>&lt;/td>
 &lt;td width=95 style='width:71pt'>&lt;/td>
 &lt;td width=95 style='width:71pt'>&lt;/td>
 &lt;td width=95 style='width:71pt'>&lt;/td>
 &lt;td width=95 style='width:71pt'>&lt;/td>
 &lt;/tr>
 &lt;![endif]>
&lt;/table>

&lt;/div>


&lt;!----------------------------->
&lt;!--END OF OUTPUT FROM EXCEL PUBLISH AS WEB PAGE WIZARD-->
&lt;!----------------------------->
&lt;/body>

&lt;/html></description></item><item><title>A1 - Rails, ActiveRecord and Associations</title><link>https://bkleinen.github.io/classes/ws2017/wtat2/topics/a1-activerecord-example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/wtat2/topics/a1-activerecord-example/</guid><description>&lt;h2 id="assignment-1-example-imi-calendar">Assignment 1 Example: IMI-Calendar&lt;/h2>
&lt;p>This is an example for &lt;a href="../a1-activerecord/">Assignment 1&lt;/a>&lt;/p>
&lt;h3 id="create-a-project-description-and-backlog">Create a project description and backlog&lt;/h3>
&lt;p>Currently, there is no channel to promote events offered for a range of IMI-Students across several classes.
The Web-Application should provide a simple interface for creating and promoting events. Events should be shown
on a web site. In addition to that, it should be possible to subscribe to events via calendar applications or
as an atom feed.&lt;/p></description></item><item><title>A1 - Rails, ActiveRecord and Associations</title><link>https://bkleinen.github.io/classes/ws2017/wtat2/topics/a1-activerecord/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/wtat2/topics/a1-activerecord/</guid><description>&lt;h2 id="assignment-1">Assignment 1&lt;/h2>
&lt;p>&lt;a href="../a1-activerecord-example">Example&lt;/a>&lt;/p>
&lt;p>Write down your project description/vision. Create a backlog.&lt;/p>
&lt;p>Find 2-3 central model classes / resources for your
project and create them - model, views and controller within a new rails application.
Implement at least one model association and make it visible in the view.&lt;/p>
&lt;h3 id="create-a-project-description-and-backlog">Create a project description and backlog&lt;/h3>
&lt;p>Provide a short summary of what your web-app should do.&lt;/p>
&lt;p>Then, write down all the user stories you can think of. Use the form of&lt;/p></description></item><item><title>About Mermaid</title><link>https://bkleinen.github.io/material/mermaid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/mermaid/</guid><description>&lt;p>&lt;a href="https://mermaid.js.org/">Mermaid&lt;/a> renders diagrams from simple markdown code. It can be used&lt;/p>
&lt;ul>
&lt;li>via integrating the available js library (yarn add mermaid),&lt;/li>
&lt;li>online via &lt;a href="https://mermaid.live/">Mermaid-Live&lt;/a>,&lt;/li>
&lt;li>is available in &lt;a href="https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/creating-diagrams">Github markdown files&lt;/a> (and others)&lt;/li>
&lt;li>and can be &lt;a href="https://gohugo.io/content-management/diagrams/#mermaid-diagrams">easily integrated into hugo&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/li>
&lt;/ul>
&lt;p>Here are some examples taken from Mermaid Live:&lt;/p>
&lt;pre class="mermaid">stateDiagram-v2
 [*] --> Still
 Still --> [*]
 Still --> Moving
 Moving --> Still
 Moving --> Crash
 Crash --> [*]
&lt;/pre>

&lt;pre>&lt;code>flowchart TD
 A[Christmas] --&amp;gt;|Get money| B(Go shopping)
 B --&amp;gt; C{Let me think}
 C --&amp;gt;|One| D[Laptop]
 C --&amp;gt;|Two| E[iPhone]
 C --&amp;gt;|Three| F[fa:fa-car Car]
&lt;/code>&lt;/pre>
&lt;pre class="mermaid">flowchart TD
 A[Christmas] -->|Get money| B(Go shopping)
 B --> C{Let me think}
 C -->|One| D[Laptop]
 C -->|Two| E[iPhone]
 C -->|Three| F[fa:fa-car Car]
&lt;/pre>

&lt;pre class="mermaid">stateDiagram-v2
 [*] --> Still
 Still --> [*]
 Still --> Moving
 Moving --> Still
 Moving --> Crash
 Crash --> [*]
&lt;/pre>

&lt;h1 id="flowchart-cheatsheet">Flowchart Cheatsheet&lt;/h1>
&lt;pre class="mermaid">flowchart TD
 A[Start] --> B{Is it?}
 B -->|Yes| C[OK]
 C --> D[Rethink]
 D --> B
 B ---->|No| E[End]
 id1>This is the text in the box]
 id2{{This is the text in the box}}
&lt;/pre>

&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>themes/greenpage/layouts/_default/_markup/&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p></description></item><item><title>About this Site</title><link>https://bkleinen.github.io/misc/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/misc/about/</guid><description>&lt;h1 id="about-this-site">About this site&lt;/h1>
&lt;h2 id="broken-links">Broken Links&lt;/h2>
&lt;p>Old links to to pages that have disappeared end up here -
this site contains an archive of more than 10 years.&lt;/p></description></item><item><title>All Example Pages 21.12.21</title><link>https://bkleinen.github.io/classes/ws2021/m-wt1-webapplications/assignments/all_links/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/m-wt1-webapplications/assignments/all_links/</guid><description>&lt;p>Hallo
&lt;a href="https://bkleinen.github.io/classes/ws2021/m-wt1-webapplications/">WT1 Web Applications WS 2021/22 - Prof. Dr. Barne Kleinen&lt;/a>
&lt;a href="https://moodle.htw-berlin.de/course/view.php?id=33322">Kurs: WT1 Web Applications - Gruppe A- WiSe2021/22&lt;/a>
&lt;a href="https://github.com/matcornic/hugo-theme-learn">matcornic/hugo-theme-learn: Porting Grav Learn theme to Hugo&lt;/a>
&lt;a href="https://github.com/htw-imi-wt1-ws2021">htw-imi-wt1-ws2021&lt;/a>
&lt;a href="https://github.com/matcornic/hugo-theme-learn">matcornic/hugo-theme-learn: Porting Grav Learn theme to Hugo&lt;/a>
&lt;a href="http://localhost:4242/~kleinen/classes/ws2021/m-wt1-webapplications/assignments/">Web Applications WS2021/2022 - Graded Assignments - Prof. Dr. Barne Kleinen&lt;/a>
&lt;a href="https://bkleinen.github.io/material/courses/networks/">networks - Prof. Dr. Barne Kleinen&lt;/a>
&lt;a href="https://www.seuh.org/seuh2022/">SEUH 2022&lt;/a>
&lt;a href="https://github.com/seuh2022">seuh2022&lt;/a>
&lt;a href="https://github.com/seuh2022/seuh2022/blob/master/.github/workflows/deploy-staging.yml">seuh2022/deploy-staging.yml at master · seuh2022/seuh2022&lt;/a>
&lt;a href="https://seuh2022.github.io/seuh2022/">STAGING &amp;mdash; SEUH 2022&lt;/a>
&lt;a href="https://github.com/seuh2022/seuh2022/actions">Actions · seuh2022/seuh2022&lt;/a>
&lt;a href="http://bkleinen.github.io/">Prof. Dr. Barne Kleinen - Prof. Dr. Barne Kleinen&lt;/a>
&lt;a href="https://github.com/bkleinen/bkleinen.github.io/blob/main/.github/workflows/deploy-staging-drafts.yml">bkleinen.github.io/deploy-staging-drafts.yml at main · bkleinen/bkleinen.github.io&lt;/a>
&lt;a href="https://bkleinen.github.io/staging/">Prof. Dr. Barne Kleinen - STAGING &amp;mdash; Prof. Dr. Barne Kleinen&lt;/a>
&lt;a href="https://bkleinen.github.io/stagingdrafts/">Prof. Dr. Barne Kleinen - STAGING DRAFTS &amp;mdash; Prof. Dr. Barne Kleinen&lt;/a>
&lt;a href="https://github.com/matcornic/hugo-theme-learn">matcornic/hugo-theme-learn: Porting Grav Learn theme to Hugo&lt;/a>
&lt;a href="http://localhost:1313/en/cont/menushortcuts/">Menu extra shortcuts :: Documentation for Hugo Learn Theme&lt;/a>
&lt;a href="https://github.com/organizations/htw-imi-wt1-ws2021/settings/security_analysis">Security &amp;amp; analysis&lt;/a>
&lt;a href="https://github.com/htw-imi-wt1-ws2021">htw-imi-wt1-ws2021&lt;/a>
&lt;a href="https://gohugo.io/content-management/page-bundles/">Page Bundles | Hugo&lt;/a>
&lt;a href="https://github.com/bkleinen/bkleinen.github.io/actions">Actions · bkleinen/bkleinen.github.io&lt;/a>
&lt;a href="https://bkleinen.github.io/classes/ws2021/m-wt1-webapplications/assignments/">Web Applications WS2021/2022 - Graded Assignments - Prof. Dr. Barne Kleinen&lt;/a>
&lt;a href="https://docs.docker.com/get-started/">Orientation and setup | Docker Documentation&lt;/a>
&lt;a href="https://docs.docker.com/get-started/overview/">Docker overview | Docker Documentation&lt;/a>
&lt;a href="https://github.com/modulehandbook/modulehandbook">modulehandbook/modulehandbook&lt;/a>
&lt;a href="https://bkleinen.github.io/classes/ws2021/m-wt1-webapplications/schedule/">Web Applications WS2020/2021 - Tentative Schedule - Prof. Dr. Barne Kleinen&lt;/a>
&lt;a href="https://github.com/imimap/imimap/blob/master/ci-cd/deployment-steps-on-production-machine.sh">imimap/deployment-steps-on-production-machine.sh at master · imimap/imimap&lt;/a>
&lt;a href="http://localhost:3030/course_programs">ModuleHandbook&lt;/a>
&lt;a href="https://github.com/htw-imi-wtat1/module-handbook/blob/master/.github/workflows/cypress.yml">module-handbook/cypress.yml at master · htw-imi-wtat1/module-handbook&lt;/a>
&lt;a href="https://github.com/supercharge/mongodb-github-action">supercharge/mongodb-github-action: Use MongoDB in GitHub Actions&lt;/a>
&lt;a href="https://github.com/bkleinen/bkleinen.github.io/blob/main/.github/workflows/deploy-production-htw.yml">bkleinen.github.io/deploy-production-htw.yml at main · bkleinen/bkleinen.github.io&lt;/a>
&lt;a href="chrome://newtab/">New Tab&lt;/a>
&lt;a href="https://bkleinen.github.io/classes/ws2021/m-wt1-webapplications/assignments/">Web Applications WS2021/2022 - Graded Assignments - Prof. Dr. Barne Kleinen&lt;/a>
&lt;a href="https://bkleinen.github.io/classes/ws2021/m-wt1-webapplications/assignments/">Web Applications WS2021/2022 - Graded Assignments - Prof. Dr. Barne Kleinen&lt;/a>&lt;/p></description></item><item><title>Assignment 01</title><link>https://bkleinen.github.io/classes/ws2018/wt2/assignments/assignment_01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/wt2/assignments/assignment_01/</guid><description>&lt;h1 id="heuristical-analysis-of-example-application-topic-definition">Heuristical Analysis of Example Application, Topic Definition&lt;/h1>
&lt;h2 id="e-learning-usability-heuristics">E-Learning: Usability Heuristics&lt;/h2>
&lt;p>This is not part of the Assignment 01 per se, but needs to be done as a preparation.&lt;/p>
&lt;p>We got a rough overview of Nielsen&amp;rsquo;s 10 Usability Heuristics in class.
Your e-learning assignment is to study all of them and write a short summary
(2-3 pages). This should be done individually, as preparation for the group work.&lt;/p>
&lt;p>Read these articles, summarize them and upload your summary to moodle:&lt;/p></description></item><item><title>Assignment 01</title><link>https://bkleinen.github.io/classes/ws2019/wt2-usability/assignments/assignment_01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/wt2-usability/assignments/assignment_01/</guid><description>&lt;h1 id="heuristical-analysis-of-example-application-topic-definition">Heuristical Analysis of Example Application, Topic Definition&lt;/h1>
&lt;h2 id="e-learning-usability-heuristics">E-Learning: Usability Heuristics&lt;/h2>
&lt;p>This is not part of the Assignment 01 per se, but needs to be done as a preparation.&lt;/p>
&lt;p>We got a rough overview of Nielsen&amp;rsquo;s 10 Usability Heuristics in class.
Your e-learning assignment is to study all of them and write a short summary
(2-3 pages). This should be done individually, as preparation for the group work.&lt;/p>
&lt;p>Read these articles, summarize them and upload your summary to moodle:&lt;/p></description></item><item><title>Assignment 02</title><link>https://bkleinen.github.io/classes/ws2018/wt2/assignments/assignment_02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/wt2/assignments/assignment_02/</guid><description>&lt;h1 id="user-research-contextual-interviews-and-personas">User Research: Contextual Interviews and Personas&lt;/h1>
&lt;h2 id="interviews">Interviews&lt;/h2>
&lt;p>Conduct Contextual Interviews. Each person in the team should conduct one Interview
of about an hour.&lt;/p>
&lt;h2 id="interpretation-sessions">Interpretation Sessions&lt;/h2>
&lt;p>You conduct one interpretation session for each interview.
The whole team participates in the interpretation session! You&amp;rsquo;ll probably need more
time than just the time in the lab for the interpretation sessions.&lt;/p>
&lt;h2 id="personas">Personas&lt;/h2>
&lt;p>Define Personas as described in Chapter 3 in Cooper: About Face.&lt;/p>
&lt;h2 id="what-to-hand-in">What to hand in&lt;/h2>
&lt;p>Your reports, uploaded as pdf to moodle, should include&lt;/p></description></item><item><title>Assignment 02</title><link>https://bkleinen.github.io/classes/ws2019/wt2-usability/assignments/assignment_02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/wt2-usability/assignments/assignment_02/</guid><description>&lt;h1 id="user-research-contextual-interviews-and-personas">User Research: Contextual Interviews and Personas&lt;/h1>
&lt;h2 id="interviews">Interviews&lt;/h2>
&lt;p>Conduct Contextual Interviews. Each person in the team should conduct one Interview
of about an hour.&lt;/p>
&lt;h2 id="interpretation-sessions">Interpretation Sessions&lt;/h2>
&lt;p>You conduct one interpretation session for each interview.
The whole team participates in the interpretation session! You&amp;rsquo;ll probably need more
time than just the time in the lab for the interpretation sessions.&lt;/p>
&lt;h2 id="affinity">Affinity&lt;/h2>
&lt;p>Create an Affinity Diagram.&lt;/p>
&lt;h2 id="personas">Personas&lt;/h2>
&lt;p>Define Personas as described in Chapter 3 in Cooper: About Face.&lt;/p></description></item><item><title>Assignment 02 - Use Cases and Class Diagrams</title><link>https://bkleinen.github.io/classes/ss2013/info3/assignments/assignment-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2013/info3/assignments/assignment-02/</guid><description>&lt;p>In this exercise you will create a description, develop a detailed Scenario for a Use Case, and draw a Class Diagram for your Web Application. First, write a detailed description what your application should do (in English or German, as you like) as the[one for the HorseTravelWorld in the old exercise][1]. Then, pick the most important (or interesting) use case. For HTW, that might be the Use Case of a User booking a trip, or of a user browsing for trips, or of a user contributing a review. Write down a detailed scenario for that use case (see below). If you work on this in a group, choose a different scenario for each person such that you get a couple covered (that is, everyone has to write an own scenario!) Last, draw a Class Diagram for your Application. It should contain associations (aggregations and compositions, association classes as needed), generalizations, as well as the most important fields and method names of the classes. As last fortnight, include the Lab report in your submitted PDF. You can draw all diagrams by hand and include scans or photos in your PDF. If you feel you need to, you can also use an UML Tool for that. We will discuss UML Tools in the Lab. – about Use Cases – Use-cases are a szenario-based technique for requirements elicitation. They were first proposed by Ivar Jacobsen as part of his Objectory methodology. There are many different variations on use cases, but the basic idea is to record the situation in which something happens, explain what should happen, and describe any exceptional circumstances which might arise.&lt;/p></description></item><item><title>Assignment 02 - Use Cases and Class Diagrams</title><link>https://bkleinen.github.io/classes/ss2014/info3/labs/lab-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info3/labs/lab-02/</guid><description>&lt;p>In this exercise you will create a description, develop a detailed Scenario for a Use Case, and draw a Class Diagram for an application called &amp;ldquo;HTW&amp;rdquo; - Halloween Treats Worldwide.&lt;/p>
&lt;p>First, have a look at the description of the system:&lt;/p>
&lt;hr>
&lt;h2 id="halloween-treats-worldwide">Halloween Treats Worldwide&lt;/h2>
&lt;p>&lt;img src="../../images/pumpkins-wide.jpg" alt="Pumpkins" title="pumpkins">
Foto by &lt;a href="https://www.flickr.com/photos/pedroferrer/3615212504">Pedro J. Ferreira&lt;/a>&lt;/p>
&lt;p>Halloween Treats Worldwide (HTW) is planned to be an online-shop where people can buy original Halloween Treats. The product manager has asked you to design and develop the platform for their business.&lt;/p></description></item><item><title>Assignment 02 - Use Cases and Class Diagrams</title><link>https://bkleinen.github.io/classes/ws2013/info3/labs/assignment-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info3/labs/assignment-02/</guid><description>&lt;p>In this exercise you will create a description, develop a detailed Scenario for a Use Case, and draw a Class Diagram for your Web Application. First, write a detailed description what your application should do (in English or German, as you like) as the[one for the HorseTravelWorld in the old exercise][1]. Then, pick the most important (or interesting) use case. For HTW, that might be the Use Case of a User booking a trip, or of a user browsing for trips, or of a user contributing a review. Write down a detailed scenario for that use case (see below). If you work on this in a group, choose a different scenario for each person such that you get a couple covered (that is, everyone has to write an own scenario!) Last, draw a Class Diagram for your Application. It should contain associations (aggregations and compositions, association classes as needed), generalizations, as well as the most important fields and method names of the classes. As last fortnight, include the Lab report in your submitted PDF. You can draw all diagrams by hand and include scans or photos in your PDF. If you feel you need to, you can also use an UML Tool for that. We will discuss UML Tools in the Lab. – about Use Cases – Use-cases are a szenario-based technique for requirements elicitation. They were first proposed by Ivar Jacobsen as part of his Objectory methodology. There are many different variations on use cases, but the basic idea is to record the situation in which something happens, explain what should happen, and describe any exceptional circumstances which might arise.&lt;/p></description></item><item><title>Assignment 02 - Use Cases and Class Diagrams</title><link>https://bkleinen.github.io/classes/ws2014/info3/labs/lab-02-usecases-class/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info3/labs/lab-02-usecases-class/</guid><description>&lt;p>&lt;img src="../images/effective-diagrams.jpg" alt="Diagram" title="pumpkins">
&lt;!-- raw HTML omitted -->The Art and Science of Diagramming. Foto by &lt;a href="https://www.flickr.com/photos/cannedtuna/8115853847">Gary Barber&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>In this exercise you will develop a &lt;strong>detailed Scenario for a Use Case&lt;/strong>, and &lt;strong>draw a Class Diagram&lt;/strong> for an application called &amp;ldquo;HTW&amp;rdquo; - Halloween Treats Worldwide.&lt;/p>
&lt;p>First, have a look at the description of the system:&lt;/p>
&lt;hr>
&lt;h2 id="halloween-treats-worldwide">Halloween Treats Worldwide&lt;/h2>
&lt;p>&lt;img src="../images/pumpkins-wide.jpg" alt="Pumpkins" title="pumpkins">
&lt;!-- raw HTML omitted -->Foto by &lt;a href="https://www.flickr.com/photos/pedroferrer/3615212504">Pedro J. Ferreira&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p></description></item><item><title>Assignment 02 - Use Cases and Class Diagrams</title><link>https://bkleinen.github.io/classes/ws2015/info3/labs/lab-02-usecases-class/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info3/labs/lab-02-usecases-class/</guid><description>&lt;p>&lt;img src="../images/effective-diagrams.jpg" alt="Diagram" title="pumpkins">
&lt;!-- raw HTML omitted -->The Art and Science of Diagramming. Foto by &lt;a href="https://www.flickr.com/photos/cannedtuna/8115853847">Gary Barber&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>In this exercise you will develop a &lt;strong>detailed Scenario for a Use Case&lt;/strong>, and &lt;strong>draw a Class Diagram&lt;/strong> for an application called &amp;ldquo;HTW&amp;rdquo; - Halloween Treats Worldwide.&lt;/p>
&lt;p>First, have a look at the description of the system:&lt;/p>
&lt;hr>
&lt;h2 id="halloween-treats-worldwide">Halloween Treats Worldwide&lt;/h2>
&lt;p>&lt;img src="../images/pumpkins-wide.jpg" alt="Pumpkins" title="pumpkins">
&lt;!-- raw HTML omitted -->Foto by &lt;a href="https://www.flickr.com/photos/pedroferrer/3615212504">Pedro J. Ferreira&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p></description></item><item><title>Assignment 02 - Use Cases and Class Diagrams</title><link>https://bkleinen.github.io/classes/ws2017/info3/labs/lab-02-usecases-class/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/info3/labs/lab-02-usecases-class/</guid><description>&lt;p>&lt;img src="../images/effective-diagrams.jpg" alt="Diagram" title="pumpkins">
&lt;!-- raw HTML omitted -->The Art and Science of Diagramming. Foto by &lt;a href="https://www.flickr.com/photos/cannedtuna/8115853847">Gary Barber&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>In this exercise you will develop a &lt;strong>detailed Scenario for a Use Case&lt;/strong>, and &lt;strong>draw a Class Diagram&lt;/strong> for an application called &amp;ldquo;HTW&amp;rdquo; - Halloween Treats Worldwide.&lt;/p>
&lt;p>First, have a look at the description of the system:&lt;/p>
&lt;hr>
&lt;h2 id="halloween-treats-worldwide">Halloween Treats Worldwide&lt;/h2>
&lt;p>&lt;img src="../images/pumpkins-wide.jpg" alt="Pumpkins" title="pumpkins">
&lt;!-- raw HTML omitted -->Foto by &lt;a href="https://www.flickr.com/photos/pedroferrer/3615212504">Pedro J. Ferreira&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p></description></item><item><title>Assignment 02 - Use Cases and Class Diagrams</title><link>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-02-usecases-class/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-02-usecases-class/</guid><description>&lt;p>&lt;img src="../images/effective-diagrams.jpg" alt="Diagram" title="pumpkins">
&lt;!-- raw HTML omitted -->The Art and Science of Diagramming. Foto by &lt;a href="https://www.flickr.com/photos/cannedtuna/8115853847">Gary Barber&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;h3 id="1-know-what-the-lab-is-about">1. Know what the lab is about&lt;/h3>
&lt;p>In this exercise you will develop a detailed Scenario for a Use Case, and draw a Class Diagram for an application called &amp;ldquo;HTW&amp;rdquo; - Halloween Treats Worldwide. Have a look at the description of the system:&lt;/p>
&lt;hr>
&lt;h4 id="halloween-treats-worldwide">Halloween Treats Worldwide&lt;/h4>
&lt;p>&lt;img src="../images/pumpkins-wide.jpg" alt="Pumpkins" title="pumpkins">
&lt;!-- raw HTML omitted -->Foto by &lt;a href="https://www.flickr.com/photos/pedroferrer/3615212504">Pedro J. Ferreira&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p></description></item><item><title>Assignment 03</title><link>https://bkleinen.github.io/classes/ws2018/wt2/assignments/assignment_03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/wt2/assignments/assignment_03/</guid><description>&lt;h1 id="design-and-evaluation-i-visioning-product-concepts-and-storyboards">Design and Evaluation I: Visioning, Product Concepts and Storyboards&lt;/h1>
&lt;h2 id="visioning">Visioning&lt;/h2>
&lt;p>Start with creating (or completing) the three input lists:&lt;/p>
&lt;ul>
&lt;li>hot ideas&lt;/li>
&lt;li>issues&lt;/li>
&lt;li>technology&lt;/li>
&lt;/ul>
&lt;h3 id="create-4-7-visions">Create 4-7 Visions&lt;/h3>
&lt;p>Start the visions from hot ideas. Assign the roles&lt;/p>
&lt;ul>
&lt;li>Pen&lt;/li>
&lt;li>Poker&lt;/li>
&lt;li>Team&lt;/li>
&lt;/ul>
&lt;p>And alternate them between the visions such that each of you gets to practice each role.
If you don&amp;rsquo;t have a Flipchart available, use a A3-Paper in the middle of the table.&lt;/p></description></item><item><title>Assignment 03</title><link>https://bkleinen.github.io/classes/ws2019/wt2-usability/assignments/assignment_03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/wt2-usability/assignments/assignment_03/</guid><description>&lt;h1 id="design-and-evaluation-i-visioning-product-concepts-and-storyboards">Design and Evaluation I: Visioning, Product Concepts and Storyboards&lt;/h1>
&lt;h2 id="visioning">Visioning&lt;/h2>
&lt;p>Start with creating (or completing) the three input lists:&lt;/p>
&lt;ul>
&lt;li>hot ideas&lt;/li>
&lt;li>issues&lt;/li>
&lt;li>technology&lt;/li>
&lt;/ul>
&lt;h3 id="create-4-7-visions">Create 4-7 Visions&lt;/h3>
&lt;p>Start the visions from hot ideas. Assign the roles&lt;/p>
&lt;ul>
&lt;li>Pen&lt;/li>
&lt;li>Poker&lt;/li>
&lt;li>Team&lt;/li>
&lt;/ul>
&lt;p>And alternate them between the visions such that each of you gets to practice each role.
If you don&amp;rsquo;t have a Flipchart available, use a A3-Paper in the middle of the table.&lt;/p></description></item><item><title>Assignment 03 - Gilded Rose Patterns and Sequence Diagrams</title><link>https://bkleinen.github.io/classes/ss2013/info3/assignments/assignment-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2013/info3/assignments/assignment-03/</guid><description>&lt;h1 id="reading-assignment-for-friday-may-3rd-2013">Reading Assignment for Friday, May 3rd 2013:&lt;/h1>
&lt;p>For this week&amp;rsquo;s lecture and especially the exercise, you will need some knowledge about sequence diagrams, and the Patterns Strategy, Factory, Factory method, Abstract Factory and Template Method.&lt;/p>
&lt;p>Here are some good sources:&lt;/p>
&lt;ul>
&lt;li>Sequence Diagrams: Sample Chapter from Fowler&amp;rsquo;s UML distilled: &lt;a href="https://www.informit.com/articles/article.aspx?p=169507&amp;amp;seqNum=2">https://www.informit.com/articles/article.aspx?p=169507&amp;amp;seqNum=2 &lt;/a>- Please read the full chapter.&lt;/li>
&lt;li>Strategy Pattern:  - make sure you understand the pattern.&lt;/li>
&lt;li>Template Method: we talked about that in class (Sandy Metz Ruby example!), but you can look it up here: &lt;/li>
&lt;li>Factory Patterns: You don&amp;rsquo;t need to read all of the following web pages, but make sure you understand the idea of Factories (german wikipedia might also be helpful with this) and the distinction between the different factory patterns.&lt;/li>
&lt;li>Factory, ,&lt;/li>
&lt;li>Factory Method&lt;a href="https://www.oodesign.com/factory-method-pattern.html"> https://www.oodesign.com/factory-method-pattern.html&lt;/a>&lt;/li>
&lt;li>Optional:&lt;/li>
&lt;li>Abstract Factory&lt;a href="https://www.oodesign.com/abstract-factory-pattern.html"> https://www.oodesign.com/abstract-factory-pattern.html&lt;/a>&lt;/li>
&lt;li>Abstract Factory from the GoF-Book &lt;/li>
&lt;/ul>
&lt;p>Please read them before coming to class on Friday, as we will work with these topics in class.&lt;/p></description></item><item><title>Assignment 03 - Gilded Rose Patterns and Sequence Diagrams</title><link>https://bkleinen.github.io/classes/ss2014/info3/labs/lab-03a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info3/labs/lab-03a/</guid><description>&lt;h1 id="reading-assignment-for-friday-may-3rd-2013">Reading Assignment for Friday, May 3rd 2013:&lt;/h1>
&lt;p>For this week&amp;rsquo;s lecture and especially the exercise, you will need some knowledge about sequence diagrams, and the Patterns Strategy, Factory, Factory method, Abstract Factory and Template Method.&lt;/p>
&lt;p>Here are some good sources:&lt;/p>
&lt;ul>
&lt;li>Sequence Diagrams: Sample Chapter from Fowler&amp;rsquo;s UML distilled: &lt;a href="https://www.informit.com/articles/article.aspx?p=169507&amp;amp;seqNum=2">https://www.informit.com/articles/article.aspx?p=169507&amp;amp;seqNum=2 &lt;/a>- Please read the full chapter.&lt;/li>
&lt;li>Strategy Pattern: - make sure you understand the pattern.&lt;/li>
&lt;li>Template Method: we talked about that in class (Sandy Metz Ruby example!), but you can look it up here:&lt;/li>
&lt;li>Factory Patterns: You don&amp;rsquo;t need to read all of the following web pages, but make sure you understand the idea of Factories (german wikipedia might also be helpful with this) and the distinction between the different factory patterns.&lt;/li>
&lt;li>Factory, ,&lt;/li>
&lt;li>Factory Method&lt;a href="https://www.oodesign.com/factory-method-pattern.html"> https://www.oodesign.com/factory-method-pattern.html&lt;/a>&lt;/li>
&lt;li>Optional:&lt;/li>
&lt;li>Abstract Factory&lt;a href="https://www.oodesign.com/abstract-factory-pattern.html"> https://www.oodesign.com/abstract-factory-pattern.html&lt;/a>&lt;/li>
&lt;li>Abstract Factory from the GoF-Book&lt;/li>
&lt;/ul>
&lt;p>Please read them before coming to class on Friday, as we will work with these topics in class.&lt;/p></description></item><item><title>Assignment 03 - Gilded Rose Patterns and Sequence Diagrams</title><link>https://bkleinen.github.io/classes/ws2013/info3/labs/assignment-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info3/labs/assignment-03/</guid><description>&lt;h1 id="reading-assignment-for-friday-may-3rd-2013">Reading Assignment for Friday, May 3rd 2013:&lt;/h1>
&lt;p>For this week&amp;rsquo;s lecture and especially the exercise, you will need some knowledge about sequence diagrams, and the Patterns Strategy, Factory, Factory method, Abstract Factory and Template Method.&lt;/p>
&lt;p>Here are some good sources:&lt;/p>
&lt;ul>
&lt;li>Sequence Diagrams: Sample Chapter from Fowler&amp;rsquo;s UML distilled: &lt;a href="https://www.informit.com/articles/article.aspx?p=169507&amp;amp;seqNum=2">https://www.informit.com/articles/article.aspx?p=169507&amp;amp;seqNum=2 &lt;/a>- Please read the full chapter.&lt;/li>
&lt;li>Strategy Pattern: - make sure you understand the pattern.&lt;/li>
&lt;li>Template Method: we talked about that in class (Sandy Metz Ruby example!), but you can look it up here:&lt;/li>
&lt;li>Factory Patterns: You don&amp;rsquo;t need to read all of the following web pages, but make sure you understand the idea of Factories (german wikipedia might also be helpful with this) and the distinction between the different factory patterns.&lt;/li>
&lt;li>Factory, ,&lt;/li>
&lt;li>Factory Method&lt;a href="https://www.oodesign.com/factory-method-pattern.html"> https://www.oodesign.com/factory-method-pattern.html&lt;/a>&lt;/li>
&lt;li>Optional:&lt;/li>
&lt;li>Abstract Factory&lt;a href="https://www.oodesign.com/abstract-factory-pattern.html"> https://www.oodesign.com/abstract-factory-pattern.html&lt;/a>&lt;/li>
&lt;li>Abstract Factory from the GoF-Book&lt;/li>
&lt;/ul>
&lt;p>Please read them before coming to class on Friday, as we will work with these topics in class.&lt;/p></description></item><item><title>Assignment 03 - GIT and State Machine Diagrams</title><link>https://bkleinen.github.io/classes/ss2014/info3/labs/lab-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info3/labs/lab-03/</guid><description>&lt;hr>
&lt;p>&lt;img src="../../images/machine.jpg" alt="Machine" title="machine">
Foto by &lt;a href="https://bkleinen.github.io/broken_link">Jeff Kubina&lt;/a>&lt;/p>
&lt;h1 id="pre-lab">Pre-Lab&lt;/h1>
&lt;h2 id="git--github">Git &amp;amp; GitHub&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://git-scm.com/">Git&lt;/a> is the state-of-the-art Source Code Management Tool. Install the command line client for your platform, and maybe also a GUI Client, &lt;a href="https://git-scm.com/download/">which can all be found here&lt;/a>.&lt;/li>
&lt;li>Sign up on &lt;a href="https://github.com/">GitHub&lt;/a> if you haven&amp;rsquo;t already done so. See also
&lt;a href="https://help.github.com/articles/set-up-git">Setting up Git&lt;/a> from GitHub for a comprehensive documentation.&lt;/li>
&lt;li>For other projects, you might want to use the HTW &lt;a href="https://studi.f4.htw-berlin.de/www/">Projekteserver&lt;/a> which offers you private repositorys, or any other service offering
central repositories. Github also offers free private repositories for students.&lt;/li>
&lt;li>Github translates markdown files automatically to HTML - That&amp;rsquo;s how the README.md files you see in most repositories work. Read through the &lt;a href="https://help.github.com/articles/markdown-basics">Markdown&lt;/a> and maybe also the &lt;a href="https://help.github.com/articles/github-flavored-markdown">GitHub Flavored Markdown&lt;/a> documentation.&lt;/li>
&lt;/ul>
&lt;h2 id="state-machines">State Machines&lt;/h2>
&lt;p>Please read through this intro to state machines.&lt;/p></description></item><item><title>Assignment 03 - Sequence Diagrams and State Machine Diagrams</title><link>https://bkleinen.github.io/classes/ws2014/info3/labs/lab-03-sequence-state/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info3/labs/lab-03-sequence-state/</guid><description>&lt;h1 id="part-1-sequence-diagrams">Part 1: Sequence Diagrams&lt;/h1>
&lt;p>&lt;img src="../images/sequence.jpg" alt="Launch Sequence">
&lt;!-- raw HTML omitted -->Pelican launch sequence. &lt;a href="https://www.flickr.com/photos/69214385@N04/9172233502">Foto by Don McCullough &lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="prelab">Prelab&lt;/h2>
&lt;p>Martin Fowler&amp;rsquo;s Chapter about Sequence Diagrams from the book &amp;ldquo;UML Distilled&amp;rdquo; &lt;a href="https://www.informit.com/articles/article.aspx?p=169507">is available as a sample chapter online.&lt;/a>&lt;/p>
&lt;p>Read it as a preparation for the lab.&lt;/p>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>As a finger exercise for Sequence Diagrams, pick one of the following example projects from the first semester and draw a sequence diagram for the main use case:&lt;/p></description></item><item><title>Assignment 03 - Sequence Diagrams and State Machine Diagrams</title><link>https://bkleinen.github.io/classes/ws2015/info3/labs/lab-03-sequence-state/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info3/labs/lab-03-sequence-state/</guid><description>&lt;h1 id="part-1-sequence-diagrams">Part 1: Sequence Diagrams&lt;/h1>
&lt;p>&lt;img src="../images/sequence.jpg" alt="Launch Sequence">
&lt;!-- raw HTML omitted -->Pelican launch sequence. &lt;a href="https://www.flickr.com/photos/69214385@N04/9172233502">Foto by Don McCullough &lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="prelab">Prelab&lt;/h2>
&lt;p>Martin Fowler&amp;rsquo;s Chapter about Sequence Diagrams from the book &amp;ldquo;UML Distilled&amp;rdquo; &lt;a href="https://www.informit.com/articles/article.aspx?p=169507">is available as a sample chapter online.&lt;/a>&lt;/p>
&lt;p>Read it as a preparation for the lab.&lt;/p>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>As a finger exercise for Sequence Diagrams, pick one of the following example projects from the first semester and draw a sequence diagram for the main use case:&lt;/p></description></item><item><title>Assignment 03 - Sequence Diagrams and State Machine Diagrams</title><link>https://bkleinen.github.io/classes/ws2017/info3/labs/lab-03-sequence-state/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/info3/labs/lab-03-sequence-state/</guid><description>&lt;h1 id="part-1-sequence-diagrams">Part 1: Sequence Diagrams&lt;/h1>
&lt;p>&lt;img src="../images/sequence.jpg" alt="Launch Sequence">
&lt;!-- raw HTML omitted -->Pelican launch sequence. &lt;a href="https://www.flickr.com/photos/69214385@N04/9172233502">Foto by Don McCullough &lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="prelab">Prelab&lt;/h2>
&lt;p>Martin Fowler&amp;rsquo;s Chapter about Sequence Diagrams from the book &amp;ldquo;UML Distilled&amp;rdquo; &lt;a href="https://www.informit.com/articles/article.aspx?p=169507">is available as a sample chapter online.&lt;/a>&lt;/p>
&lt;p>Read it as a preparation for the lab.&lt;/p>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>As a finger exercise for Sequence Diagrams, pick one of the following example projects from the first semester and draw a sequence diagram for the main use case:&lt;/p></description></item><item><title>Assignment 03 - Sequence Diagrams and State Machine Diagrams</title><link>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-03-sequence-state/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-03-sequence-state/</guid><description>&lt;p>&lt;img src="../images/sequence.jpg" alt="Launch Sequence">
&lt;!-- raw HTML omitted -->Pelican launch sequence. &lt;a href="https://www.flickr.com/photos/69214385@N04/9172233502">Foto by Don McCullough &lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ul>
&lt;li>Read Martin Fowler&amp;rsquo;s Chapter about Sequence Diagrams from the book &amp;ldquo;UML Distilled&amp;rdquo; &lt;a href="https://www.informit.com/articles/article.aspx?p=169507">is available as a sample chapter online.&lt;/a>&lt;/li>
&lt;li>For an introduction to state machine diagrams, see &lt;a href="https://www.agilemodeling.com/artifacts/stateMachineDiagram.htm">https://www.agilemodeling.com/artifacts/stateMachineDiagram.htm&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;h3 id="part-1-sequence-diagrams">Part 1: Sequence Diagrams&lt;/h3>
&lt;ol>
&lt;li>As a finger exercise for Sequence Diagrams, pick one of the following example projects from the first semester and draw a sequence diagram for the main use case:
&lt;ul>
&lt;li>The &lt;a href="https://github.com/htw-imi-info1/chapter03/tree/master/clock-display-with-GUI">Clock Display&lt;/a> / Use case: timeTick() is called&lt;/li>
&lt;li>&lt;a href="https://github.com/htw-imi-info1/exercise07-archived/tree/master/tech-support">Tech Support&lt;/a> / Use case: user command is entered (start() method in SupportSystem)&lt;/li>
&lt;li>The &lt;a href="https://github.com/htw-imi-info1/exercise10">Zuul Project&lt;/a> / Use case: user enters command (method: play() in Game.java)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Take your scenarios from &lt;a href="../lab-02-usecases-class">the second exercise&lt;/a> and have a good look at them. There are a number of processes that you should have detailed in your scenarios - if not, now you learn how to be thorough :) You need to draw sequence diagrams for the following use cases:
&lt;ul>
&lt;li>Ordering a Pumpkin/Treat&lt;/li>
&lt;li>one other use case of your choosing&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>If you feel like it, you can continue with a sequence diagram for additional use cases.&lt;/p></description></item><item><title>Assignment 04</title><link>https://bkleinen.github.io/classes/ws2018/wt2/assignments/assignment_04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/wt2/assignments/assignment_04/</guid><description>&lt;h1 id="design-and-evaluation-ii-paper-prototypes">Design and Evaluation II: Paper Prototypes&lt;/h1>
&lt;h2 id="paper-prototypes">Paper Prototypes&lt;/h2>
&lt;p>Create two Paper Prototypes per Team based on two of your Storyboards.&lt;/p>
&lt;p>Choose the Stories / Storyboards carefully, and document the reasons for your decision in your report.&lt;/p>
&lt;p>You can both work together on both storyboards or have two teams of two working on one Paper Prototype each.&lt;/p>
&lt;h2 id="paper-prototype-evaluation">Paper Prototype Evaluation&lt;/h2>
&lt;p>Now, you have to get together with your expert team again, preferably during the lab sessions:&lt;/p></description></item><item><title>Assignment 04</title><link>https://bkleinen.github.io/classes/ws2019/wt2-usability/assignments/assignment_04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/wt2-usability/assignments/assignment_04/</guid><description>&lt;h1 id="design-and-evaluation-ii-paper-prototypes">Design and Evaluation II: Paper Prototypes&lt;/h1>
&lt;h2 id="paper-prototypes">Paper Prototypes&lt;/h2>
&lt;p>Create two Paper Prototypes per Team based on two of your Storyboards.&lt;/p>
&lt;p>Choose the Stories / Storyboards carefully, and document the reasons for your decision in your report.&lt;/p>
&lt;p>You can both work together on both storyboards or have two teams of two working on one Paper Prototype each.&lt;/p>
&lt;h2 id="paper-prototype-evaluation">Paper Prototype Evaluation&lt;/h2>
&lt;p>Now, you have to get together with your expert team again, preferably during the lab sessions:&lt;/p></description></item><item><title>Assignment 04: Testing</title><link>https://bkleinen.github.io/classes/ws2014/info3/labs/lab-04-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info3/labs/lab-04-testing/</guid><description>&lt;p>&lt;img src="../images/test-button.jpg" alt="Test Button">
&lt;!-- raw HTML omitted -->Test Button in Car. &lt;a href="https://www.flickr.com/photos/cosmic_spanner/3766667411">Foto by Mike Roberts&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="download-the-source-code-snippets-for-this-assignment">Download the source code snippets for this assignment.&lt;/h2>
&lt;p>Source Code for this Assignment: &lt;a href="https://github.com/htw-imi-info3-archive/lab-04-testing">https://github.com/htw-imi-info3-archive/lab-04-testing&lt;/a>&lt;/p>
&lt;p>##A. Black and White Box Tests&lt;/p>
&lt;p>In addition to what we&amp;rsquo;ve covered in class, please have a look at &lt;a href="https://en.wikipedia.org/wiki/Black_box_testing">black-box&lt;/a> and &lt;a href="https://en.wikipedia.org/wiki/White_box_testing">white-box&lt;/a> testing.&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Getting started:&lt;/strong> Give the equivalence classes for testing a method that determines the absolute value of an integer using the black-box methodology. Don&amp;rsquo;t peek at the code yet! Now check out &lt;a href="https://github.com/htw-imi-info3-archive/lab-04-testing/blob/master/a_black_and_white_box_tests/absolute.java">&lt;code>absolute.java&lt;/code>&lt;/a> in the repository and give the equivalence classes for a white-box test. Develop one test case for each equivalence class using JUnit.&lt;/li>
&lt;li>&lt;strong>Black-box test&lt;/strong>: Look at this grading scale at the bottom of the page (Which is not the [grading scale for this course]({{ site.BaseURL }}/studies/grading/grading-scale)). Give the equivalence classes for a program that loops until a -1 is entered, asking for the number of points on this scale, prints the appropriate letter grade (A-F), and then prints the average number of points when -1 has been entered. Develop one test case for each equivalence class. Test your test cases with &lt;a href="https://github.com/htw-imi-info3-archive/lab-04-testing/blob/master/a_black_and_white_box_tests/GradingScale.class">GradingScale.class&lt;/a> - this is a java programm. No fair decompiling the class! Report on the results. Did you find any errors?&lt;/li>
&lt;li>&lt;strong>White-box test&lt;/strong> / path coverage: Examine the code for [TaxTime.java](&lt;a href="https://github.com/htw-imi-info3-archive/lab-04-testing/blob/master/a_black_and_white_box_tests/TaxTime.java">https://github.com/htw-imi-info3-archive/lab-04-testing/blob/master/a_black_and_white_box_tests/TaxTime.java&lt;/a>. Draw a code graph of the main class! How many independent paths are there? What are the conditions that cause each of the paths to be taken? Draw up a table giving you an overview of the conditions. Give test cases that exercise each path. Are there any errors in the program (besides the size of the tax bite)?&lt;/li>
&lt;li>&lt;strong>Reflection&lt;/strong> Consider the last two examples, especially TaxTime. What makes this programs hard to test? How would you refactor TaxTime to make it testable automatically with JUnit?&lt;/li>
&lt;/ol>
&lt;h3 id="grading-scale-points--procent">Grading Scale (Points = Procent)&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Points&lt;/th>
 &lt;th style="text-align: left">Grade&lt;/th>
 &lt;th style="text-align: left">ECTS&lt;/th>
 &lt;th style="text-align: left">Points&lt;/th>
 &lt;th style="text-align: left">Grade&lt;/th>
 &lt;th style="text-align: left">ECTS&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">95-100&lt;/td>
 &lt;td style="text-align: left">1,0&lt;/td>
 &lt;td style="text-align: left">A&lt;/td>
 &lt;td style="text-align: left">65-69&lt;/td>
 &lt;td style="text-align: left">3,0&lt;/td>
 &lt;td style="text-align: left">C&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">90-94&lt;/td>
 &lt;td style="text-align: left">1,3&lt;/td>
 &lt;td style="text-align: left">A&lt;/td>
 &lt;td style="text-align: left">60-64&lt;/td>
 &lt;td style="text-align: left">3,3&lt;/td>
 &lt;td style="text-align: left">C&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">85-89&lt;/td>
 &lt;td style="text-align: left">1,7&lt;/td>
 &lt;td style="text-align: left">B&lt;/td>
 &lt;td style="text-align: left">55-59&lt;/td>
 &lt;td style="text-align: left">3,7&lt;/td>
 &lt;td style="text-align: left">D&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">80-84&lt;/td>
 &lt;td style="text-align: left">2,0&lt;/td>
 &lt;td style="text-align: left">B&lt;/td>
 &lt;td style="text-align: left">50-54&lt;/td>
 &lt;td style="text-align: left">4,0&lt;/td>
 &lt;td style="text-align: left">D&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">75-79&lt;/td>
 &lt;td style="text-align: left">2,3&lt;/td>
 &lt;td style="text-align: left">B&lt;/td>
 &lt;td style="text-align: left">0-49&lt;/td>
 &lt;td style="text-align: left">5,0&lt;/td>
 &lt;td style="text-align: left">F&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">70-74&lt;/td>
 &lt;td style="text-align: left">2,7&lt;/td>
 &lt;td style="text-align: left">C&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="b-test-driven-development">B. Test Driven Development&lt;/h2>
&lt;p>Your task is to develop deletion and reversion of a simple linked list test driven. You can do this either in Java or in Ruby. You find stubs in both languages on &lt;a href="https://github.com/htw-imi-info3-archive/lab-04-testing/tree/master/b_test_driven">github&lt;/a>.&lt;/p></description></item><item><title>Assignment 04: Testing</title><link>https://bkleinen.github.io/classes/ws2015/info3/labs/lab-04-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info3/labs/lab-04-testing/</guid><description>&lt;p>&lt;img src="../images/test-button.jpg" alt="Test Button">
&lt;!-- raw HTML omitted -->Test Button in Car. &lt;a href="https://www.flickr.com/photos/cosmic_spanner/3766667411">Foto by Mike Roberts&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="download-the-source-code-snippets-for-this-assignment">Download the source code snippets for this assignment.&lt;/h2>
&lt;p>Source Code for this Assignment: &lt;a href="https://github.com/htw-imi-info3-archive/lab-04-testing">https://github.com/htw-imi-info3-archive/lab-04-testing&lt;/a>&lt;/p>
&lt;p>##A. Black and White Box Tests&lt;/p>
&lt;p>In addition to what we&amp;rsquo;ve covered in class, please have a look at &lt;a href="https://en.wikipedia.org/wiki/Black_box_testing">black-box&lt;/a> and &lt;a href="https://en.wikipedia.org/wiki/White_box_testing">white-box&lt;/a> testing.&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Getting started:&lt;/strong> Give the equivalence classes for testing a method that determines the absolute value of an integer using the black-box methodology. Don&amp;rsquo;t peek at the code yet! Now check out &lt;a href="https://github.com/htw-imi-info3-archive/lab-04-testing/blob/master/a_black_and_white_box_tests/absolute.java">&lt;code>absolute.java&lt;/code>&lt;/a> in the repository and give the equivalence classes for a white-box test. Develop one test case for each equivalence class using JUnit.&lt;/li>
&lt;li>&lt;strong>Black-box test&lt;/strong>: Look at this grading scale at the bottom of the page (Which is not the [grading scale for this course]({{ site.BaseURL }}/studies/grading/grading-scale)). Give the equivalence classes for a program that loops until a -1 is entered, asking for the number of points on this scale, prints the appropriate letter grade (A-F), and then prints the average number of points when -1 has been entered. Develop one test case for each equivalence class. Test your test cases with &lt;a href="https://github.com/htw-imi-info3-archive/lab-04-testing/blob/master/a_black_and_white_box_tests/GradingScale.class">GradingScale.class&lt;/a> - this is a java programm. No fair decompiling the class! Report on the results. Did you find any errors?&lt;/li>
&lt;li>&lt;strong>White-box test&lt;/strong> / path coverage: Examine the code for [TaxTime.java](&lt;a href="https://github.com/htw-imi-info3-archive/lab-04-testing/blob/master/a_black_and_white_box_tests/TaxTime.java">https://github.com/htw-imi-info3-archive/lab-04-testing/blob/master/a_black_and_white_box_tests/TaxTime.java&lt;/a>. Draw a code graph of the main class! How many independent paths are there? What are the conditions that cause each of the paths to be taken? Draw up a table giving you an overview of the conditions. Give test cases that exercise each path. Are there any errors in the program (besides the size of the tax bite)?&lt;/li>
&lt;li>&lt;strong>Reflection&lt;/strong> Consider the last two examples, especially TaxTime. What makes this programs hard to test? How would you refactor TaxTime to make it testable automatically with JUnit?&lt;/li>
&lt;/ol>
&lt;h3 id="grading-scale-points--procent">Grading Scale (Points = Procent)&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Points&lt;/th>
 &lt;th style="text-align: left">Grade&lt;/th>
 &lt;th style="text-align: left">ECTS&lt;/th>
 &lt;th style="text-align: left">Points&lt;/th>
 &lt;th style="text-align: left">Grade&lt;/th>
 &lt;th style="text-align: left">ECTS&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">95-100&lt;/td>
 &lt;td style="text-align: left">1,0&lt;/td>
 &lt;td style="text-align: left">A&lt;/td>
 &lt;td style="text-align: left">65-69&lt;/td>
 &lt;td style="text-align: left">3,0&lt;/td>
 &lt;td style="text-align: left">C&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">90-94&lt;/td>
 &lt;td style="text-align: left">1,3&lt;/td>
 &lt;td style="text-align: left">A&lt;/td>
 &lt;td style="text-align: left">60-64&lt;/td>
 &lt;td style="text-align: left">3,3&lt;/td>
 &lt;td style="text-align: left">C&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">85-89&lt;/td>
 &lt;td style="text-align: left">1,7&lt;/td>
 &lt;td style="text-align: left">B&lt;/td>
 &lt;td style="text-align: left">55-59&lt;/td>
 &lt;td style="text-align: left">3,7&lt;/td>
 &lt;td style="text-align: left">D&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">80-84&lt;/td>
 &lt;td style="text-align: left">2,0&lt;/td>
 &lt;td style="text-align: left">B&lt;/td>
 &lt;td style="text-align: left">50-54&lt;/td>
 &lt;td style="text-align: left">4,0&lt;/td>
 &lt;td style="text-align: left">D&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">75-79&lt;/td>
 &lt;td style="text-align: left">2,3&lt;/td>
 &lt;td style="text-align: left">B&lt;/td>
 &lt;td style="text-align: left">0-49&lt;/td>
 &lt;td style="text-align: left">5,0&lt;/td>
 &lt;td style="text-align: left">F&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">70-74&lt;/td>
 &lt;td style="text-align: left">2,7&lt;/td>
 &lt;td style="text-align: left">C&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="b-test-driven-development">B. Test Driven Development&lt;/h2>
&lt;p>Your task is to develop deletion and reversion of a simple linked list test driven. You can do this either in Java or in Ruby. You find stubs in both languages on &lt;a href="https://github.com/htw-imi-info3-archive/lab-04-testing/tree/master/b_test_driven">github&lt;/a>.&lt;/p></description></item><item><title>Assignment 04: Testing</title><link>https://bkleinen.github.io/classes/ws2017/info3/labs/lab-04-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/info3/labs/lab-04-testing/</guid><description>&lt;p>&lt;img src="../images/test-button.jpg" alt="Test Button">
&lt;!-- raw HTML omitted -->Test Button in Car. &lt;a href="https://www.flickr.com/photos/cosmic_spanner/3766667411">Foto by Mike Roberts&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="download-the-source-code-snippets-for-this-assignment">Download the source code snippets for this assignment.&lt;/h2>
&lt;p>Source Code for this Assignment: &lt;a href="https://github.com/htw-imi-info3-archive/lab-04-testing">https://github.com/htw-imi-info3-archive/lab-04-testing&lt;/a>&lt;/p>
&lt;h2 id="a-black-and-white-box-tests">A. Black and White Box Tests&lt;/h2>
&lt;p>In addition to what we&amp;rsquo;ve covered in class, please have a look at &lt;a href="https://en.wikipedia.org/wiki/Black_box_testing">black-box&lt;/a> and &lt;a href="https://en.wikipedia.org/wiki/White_box_testing">white-box&lt;/a> testing.&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Getting started:&lt;/strong> Give the equivalence classes for testing a method that determines the absolute value of an integer using the black-box methodology. Don&amp;rsquo;t peek at the code yet! Now check out &lt;a href="https://github.com/htw-imi-info3-archive/lab-04-testing/blob/master/a_black_and_white_box_tests/absolute.java">&lt;code>absolute.java&lt;/code>&lt;/a> in the repository and give test cases covering each branch for a white-box test. Define suitable test cases based on your analysis and implement them with JUnit.&lt;/li>
&lt;li>&lt;strong>Black-box test&lt;/strong>: Look at the grading scale at the bottom of the page (Which is not the [grading scale for this course]({{ site.BaseURL }}/studies/grading/grading-scale)). Give the equivalence classes for a program that loops until a &amp;ldquo;-1&amp;rdquo; is entered, asking for the number of points on this scale, prints the appropriate letter grade (A-F), and then prints the average number of points when &amp;ldquo;-1&amp;rdquo; has been entered. Develop one test case for each equivalence class. Test your test cases with &lt;a href="https://github.com/htw-imi-info3-archive/lab-04-testing/blob/master/a_black_and_white_box_tests/GradingScale.class">GradingScale.class&lt;/a> - this is a java programm. No fair decompiling the class! Report on the results. Did you find any errors?&lt;/li>
&lt;li>&lt;strong>White-box test&lt;/strong> / path coverage: Examine the code for &lt;a href="https://github.com/htw-imi-info3-archive/lab-04-testing/blob/master/a_black_and_white_box_tests/TaxTime.java">TaxTime.java&lt;/a>. Draw a code graph of the main class! How many independent paths are there? What are the conditions that cause each of the paths to be taken? Draw up a table giving you an overview of the conditions. Give test cases that exercise each path. Are there any errors in the program (besides the size of the tax bite)?&lt;/li>
&lt;li>&lt;strong>Reflection&lt;/strong> Consider the last two examples, especially TaxTime. What makes this programs hard to test? How would you refactor TaxTime to make it testable automatically with JUnit?&lt;/li>
&lt;/ol>
&lt;h3 id="grading-scale-points--procent">Grading Scale (Points = Procent)&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Points&lt;/th>
 &lt;th style="text-align: left">Grade&lt;/th>
 &lt;th style="text-align: left">ECTS&lt;/th>
 &lt;th style="text-align: left">Points&lt;/th>
 &lt;th style="text-align: left">Grade&lt;/th>
 &lt;th style="text-align: left">ECTS&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">95-100&lt;/td>
 &lt;td style="text-align: left">1,0&lt;/td>
 &lt;td style="text-align: left">A&lt;/td>
 &lt;td style="text-align: left">65-69&lt;/td>
 &lt;td style="text-align: left">3,0&lt;/td>
 &lt;td style="text-align: left">C&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">90-94&lt;/td>
 &lt;td style="text-align: left">1,3&lt;/td>
 &lt;td style="text-align: left">A&lt;/td>
 &lt;td style="text-align: left">60-64&lt;/td>
 &lt;td style="text-align: left">3,3&lt;/td>
 &lt;td style="text-align: left">C&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">85-89&lt;/td>
 &lt;td style="text-align: left">1,7&lt;/td>
 &lt;td style="text-align: left">B&lt;/td>
 &lt;td style="text-align: left">55-59&lt;/td>
 &lt;td style="text-align: left">3,7&lt;/td>
 &lt;td style="text-align: left">D&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">80-84&lt;/td>
 &lt;td style="text-align: left">2,0&lt;/td>
 &lt;td style="text-align: left">B&lt;/td>
 &lt;td style="text-align: left">50-54&lt;/td>
 &lt;td style="text-align: left">4,0&lt;/td>
 &lt;td style="text-align: left">D&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">75-79&lt;/td>
 &lt;td style="text-align: left">2,3&lt;/td>
 &lt;td style="text-align: left">B&lt;/td>
 &lt;td style="text-align: left">0-49&lt;/td>
 &lt;td style="text-align: left">5,0&lt;/td>
 &lt;td style="text-align: left">F&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">70-74&lt;/td>
 &lt;td style="text-align: left">2,7&lt;/td>
 &lt;td style="text-align: left">C&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="b-test-driven-development">B. Test Driven Development&lt;/h2>
&lt;p>Your task is to develop deletion and reversion of a simple linked list test driven. You can do this either in Java or in Ruby. You find stubs in both languages in the &lt;a href="https://github.com/htw-imi-info3-archive/lab-04-testing/tree/master/b_test_driven">github repostitory.&lt;/a>.&lt;/p></description></item><item><title>Assignment 04: Testing</title><link>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-04-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-04-testing/</guid><description>&lt;p>&lt;img src="../images/test-button.jpg" alt="Test Button">
&lt;!-- raw HTML omitted -->Test Button in Car. &lt;a href="https://www.flickr.com/photos/cosmic_spanner/3766667411">Foto by Mike Roberts&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;h3 id="preparation">Preparation&lt;/h3>
&lt;ol>
&lt;li>Download the source code snippets for this assignment: &lt;a href="https://gl-imi.f4.htw-berlin.de/info3-code-stubs-and-samples/lab04-testing">lab04-testing&lt;/a>&lt;/li>
&lt;li>Prepare your project &lt;a href="../lab-01-startup">like we did it in the first lab&lt;/a> (Part 1: Set up the git repository and project). Note that this is now lab04, so make sure you adapt your process to that! Eg. put the project into &lt;a href="https://gl-imi.f4.htw-berlin.de/info3-wise2020/lab04">the correct place on the gitlab server&lt;/a>.&lt;/li>
&lt;li>In addition to what you&amp;rsquo;ve covered in class, please have a look at &lt;a href="https://en.wikipedia.org/wiki/Black_box_testing">black-box&lt;/a> and &lt;a href="https://en.wikipedia.org/wiki/White_box_testing">white-box&lt;/a> testing.&lt;/li>
&lt;/ol>
&lt;h3 id="part-1-equivalence-classes">Part 1: Equivalence Classes&lt;/h3>
&lt;ol start="4">
&lt;li>Using the black-box methodology, what are the equivalence classes for testing &lt;em>a method that determines the absolute value of an integer&lt;/em>? Don&amp;rsquo;t look at the code yet.&lt;/li>
&lt;li>Now check out &lt;a href="https://gl-imi.f4.htw-berlin.de/info3-code-stubs-and-samples/lab04-testing/blob/master/lib/number.js">&lt;code>number.js&lt;/code>&lt;/a>. For a white-box test, what would be test cases covering each branch?&lt;/li>
&lt;li>Based on your analysis, define suitable test cases for &lt;code>number.js&lt;/code> and implement them with jest in the &lt;code>test&lt;/code> folder.&lt;/li>
&lt;li>Run your tests: &lt;code>npm test number&lt;/code>. Report on the results.&lt;/li>
&lt;li>Lint and correct your code: &lt;code>npm run lint test/number.test.js&lt;/code>.&lt;/li>
&lt;/ol>
&lt;h3 id="part-2-black-box-tests">Part 2: Black Box Tests&lt;/h3>
&lt;ol start="9">
&lt;li>&lt;strong>Black-box test&lt;/strong>: Look at the following grading scale (which is not the grading scale for this course).&lt;/li>
&lt;/ol>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Points&lt;/th>
 &lt;th style="text-align: left">Grade&lt;/th>
 &lt;th style="text-align: left">Letter Grade&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">95-100&lt;/td>
 &lt;td style="text-align: left">1,0&lt;/td>
 &lt;td style="text-align: left">A&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">90-94&lt;/td>
 &lt;td style="text-align: left">1,3&lt;/td>
 &lt;td style="text-align: left">A&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">85-89&lt;/td>
 &lt;td style="text-align: left">1,7&lt;/td>
 &lt;td style="text-align: left">B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">80-84&lt;/td>
 &lt;td style="text-align: left">2,0&lt;/td>
 &lt;td style="text-align: left">B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">75-79&lt;/td>
 &lt;td style="text-align: left">2,3&lt;/td>
 &lt;td style="text-align: left">B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">70-74&lt;/td>
 &lt;td style="text-align: left">2,7&lt;/td>
 &lt;td style="text-align: left">C&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">65-69&lt;/td>
 &lt;td style="text-align: left">3,0&lt;/td>
 &lt;td style="text-align: left">C&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">60-64&lt;/td>
 &lt;td style="text-align: left">3,3&lt;/td>
 &lt;td style="text-align: left">C&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">55-59&lt;/td>
 &lt;td style="text-align: left">3,7&lt;/td>
 &lt;td style="text-align: left">D&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">50-54&lt;/td>
 &lt;td style="text-align: left">4,0&lt;/td>
 &lt;td style="text-align: left">D&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">0-49&lt;/td>
 &lt;td style="text-align: left">5,0&lt;/td>
 &lt;td style="text-align: left">F&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>What are the equivalence classes for &lt;em>a program that loops until a &amp;ldquo;-1&amp;rdquo; is entered, asking for the number of points on this scale; prints the appropriate letter grade (A-F), and then prints the average number of points when &amp;ldquo;-1&amp;rdquo; has been entered&lt;/em>? Let&amp;rsquo;s call this program &amp;ldquo;Grading Scale Calculator&amp;rdquo;&lt;/p></description></item><item><title>Assignment 05 - Legacy Code - Refactoring to Patterns</title><link>https://bkleinen.github.io/classes/ws2014/info3/labs/lab-05-legacy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info3/labs/lab-05-legacy/</guid><description>&lt;p>&lt;img src="../images/The_Gilded_Rose.jpg" alt="The Gilded Rose">
&lt;!-- raw HTML omitted -->The Gilded Rose, Trade District, &lt;a href="https://wowwiki-archive.fandom.com/wiki/Gilded_Rose">World of Warcraft.&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="assignment-gilded-rose-kata">Assignment: Gilded Rose Kata&lt;/h2>
&lt;p>Source Code: There are three versions. Choose one. Have brief look at the
readme and the GuildedRose class.&lt;/p>
&lt;ul>
&lt;li>Ruby Version: &lt;a href="https://github.com/htw-imi-info3-archive/lab-05-ruby-gilded-rose-kata">https://github.com/htw-imi-info3-archive/lab-05-ruby-gilded-rose-kata&lt;/a>&lt;/li>
&lt;li>Java/Eclipse Version with Test Stub: &lt;a href="https://github.com/htw-imi-info3-archive/lab-05-JavaEclipseGildedRose">https://github.com/htw-imi-info3-archive/lab-05-JavaEclipseGildedRose&lt;/a>&lt;/li>
&lt;li>Original Version using Maven: &lt;a href="https://github.com/htw-imi-info3-archive/lab-05-JavaMavenGildedRose">https://github.com/htw-imi-info3-archive/lab-05-JavaMavenGildedRose&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="write-characterization-tests">Write Characterization Tests&lt;/h3>
&lt;p>To be able to add the new functionality as requested you should write
Characterization tests first.
You will not yet refactor or add the required new functionality!&lt;/p></description></item><item><title>Assignment 05 - Legacy Code - Refactoring to Patterns</title><link>https://bkleinen.github.io/classes/ws2015/info3/labs/lab-05-legacy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info3/labs/lab-05-legacy/</guid><description>&lt;p>&lt;img src="../images/The_Gilded_Rose.jpg" alt="The Gilded Rose">
&lt;!-- raw HTML omitted -->The Gilded Rose, Trade District, &lt;a href="https://wowwiki-archive.fandom.com/wiki/Gilded_Rose">World of Warcraft.&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="assignment-gilded-rose-kata">Assignment: Gilded Rose Kata&lt;/h2>
&lt;p>Source Code: There are three versions. Choose one. Have brief look at the
readme and the GuildedRose class.&lt;/p>
&lt;ul>
&lt;li>Ruby Version: &lt;a href="https://github.com/htw-imi-info3-archive/lab-05-ruby-gilded-rose-kata">https://github.com/htw-imi-info3-archive/lab-05-ruby-gilded-rose-kata&lt;/a>&lt;/li>
&lt;li>Java/Eclipse Version with Test Stub: &lt;a href="https://github.com/htw-imi-info3-archive/lab-05-JavaEclipseGildedRose">https://github.com/htw-imi-info3-archive/lab-05-JavaEclipseGildedRose&lt;/a>&lt;/li>
&lt;li>Original Version using Maven: &lt;a href="https://github.com/htw-imi-info3-archive/lab-05-JavaMavenGildedRose">https://github.com/htw-imi-info3-archive/lab-05-JavaMavenGildedRose&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="write-characterization-tests">Write Characterization Tests&lt;/h3>
&lt;p>To be able to add the new functionality as requested you should write
Characterization tests first.
You will not yet refactor or add the required new functionality!&lt;/p></description></item><item><title>Assignment 05 - Legacy Code - Refactoring to Patterns</title><link>https://bkleinen.github.io/classes/ws2017/info3/labs/lab-05-legacy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/info3/labs/lab-05-legacy/</guid><description>&lt;p>&lt;img src="../images/The_Gilded_Rose.jpg" alt="The Gilded Rose">
&lt;!-- raw HTML omitted -->The Gilded Rose, Trade District, &lt;a href="https://wowwiki-archive.fandom.com/wiki/Gilded_Rose">World of Warcraft.&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="assignment-gilded-rose-kata">Assignment: Gilded Rose Kata&lt;/h2>
&lt;p>Source Code: There are three versions. Choose one. Have brief look at the
readme and the GuildedRose class.&lt;/p>
&lt;ul>
&lt;li>Ruby Version: &lt;a href="https://github.com/htw-imi-info3-archive/lab-05-ruby-gilded-rose-kata">https://github.com/htw-imi-info3-archive/lab-05-ruby-gilded-rose-kata&lt;/a>&lt;/li>
&lt;li>Java/Eclipse Version with Test Stub: &lt;a href="https://github.com/htw-imi-info3-archive/lab-05-JavaEclipseGildedRose">https://github.com/htw-imi-info3-archive/lab-05-JavaEclipseGildedRose&lt;/a>&lt;/li>
&lt;li>Original Version using Maven: &lt;a href="https://github.com/htw-imi-info3-archive/lab-05-JavaMavenGildedRose">https://github.com/htw-imi-info3-archive/lab-05-JavaMavenGildedRose&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="write-characterization-tests">Write Characterization Tests&lt;/h3>
&lt;p>To be able to add the new functionality as requested you should write
Characterization tests first.
You will not yet refactor or add the required new functionality!&lt;/p></description></item><item><title>Assignment 05 - Legacy Code - Refactoring to Patterns</title><link>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-05-legacy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-05-legacy/</guid><description>&lt;p>&lt;img src="../images/The_Gilded_Rose.jpg" alt="The Gilded Rose">
&lt;!-- raw HTML omitted -->The Gilded Rose, Trade District, &lt;a href="https://wowwiki-archive.fandom.com/wiki/Gilded_Rose">World of Warcraft.&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="assignment-gilded-rose-kata">Assignment: Gilded Rose Kata&lt;/h2>
&lt;h3 id="preparation">Preparation&lt;/h3>
&lt;ol>
&lt;li>Clone the &lt;a href="https://gl-imi.f4.htw-berlin.de/info3-code-stubs-and-samples/lab05-js-gilded-rose-kata">Gilded Rose Repository&lt;/a>.&lt;/li>
&lt;li>Set up the project &lt;a href="../lab-01-startup">like we did it in the first lab&lt;/a> (Part 1: Set up the git repository and project). Of course this is now lab05, put your project into the correct place on the gitlab server! Hint: If you like you can use &lt;a href="https://www.jetbrains.com/help/webstorm/installation-guide.html#snap">WebStorm&lt;/a> and it&amp;rsquo;s automatic refactoring features. You can &lt;a href="https://www.jetbrains.com/community/education/#students">get an educational license&lt;/a>.&lt;/li>
&lt;li>Imagine you just joined a the company &lt;code>Gilded Rose&lt;/code> as software developers. They wrote a requirements sheet for your first job. You can find the whole sheet &lt;a href="https://gl-imi.f4.htw-berlin.de/info3-code-stubs-and-samples/lab05-js-gilded-rose-kata/blob/master/GildedRoseRequirements.txt">here&lt;/a>. Read through it. In this lab you will be working through it step by step.&lt;/li>
&lt;li>Read the introduction again:&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>Hi and welcome to team Gilded Rose. As you know, we are a small inn with a prime location in a
prominent city ran by a friendly innkeeper named Allison. We also buy and sell only the finest goods.
Unfortunately, our goods are constantly degrading in quality as they approach their sell by date. We
have a system in place that updates our inventory for us. It was developed by a no-nonsense person named
Leeroy, who has moved on to new adventures.
&lt;/code>&lt;/pre>&lt;h3 id="part-1-characterization-tests">Part 1: Characterization Tests&lt;/h3>
&lt;ol start="5">
&lt;li>Read again what the system is currently supposed to be doing, according to the &lt;code>Team Gilded Rose&lt;/code>&amp;rsquo;s Requirements Sheet:&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>Your task is to add the new feature to our system so that
we can begin selling a new category of items. First an introduction to our system:

	- All items have a SellIn value which denotes the number of days we have to sell the item
	- All items have a Quality value which denotes how valuable the item is
	- At the end of each day our system lowers both values for every item

Pretty simple, right? Well this is where it gets interesting:

	- Once the sell by date has passed, Quality degrades twice as fast
	- The Quality of an item is never negative
	- &amp;#34;Aged Brie&amp;#34; actually increases in Quality the older it gets
	- The Quality of an item is never more than 50
	- &amp;#34;Sulfuras&amp;#34;, being a legendary item, never has to be sold or decreases in Quality
	- &amp;#34;Backstage passes&amp;#34;, like aged brie, increases in Quality as its SellIn value approaches;
	Quality increases by 2 when there are 10 days or less and by 3 when there are 5 days or less but
	Quality drops to 0 after the concert
&lt;/code>&lt;/pre>&lt;ol start="6">
&lt;li>Look at &lt;a href="https://gl-imi.f4.htw-berlin.de/info3-code-stubs-and-samples/lab05-js-gilded-rose-kata/tree/master/test">the stubs for the tests&lt;/a> and run them with coverage &lt;code>npm run coverage&lt;/code>.&lt;/li>
&lt;li>Implement &lt;a href="https://en.wikipedia.org/wiki/Characterization_test">Characterization Tests&lt;/a> (also known as &amp;ldquo;Approval Tests&amp;rdquo;). That is, write tests that pass with the current behavior of the app.
Is the current system functionality different from the requirements sheet or are the specifications ambiguous somewhere? Document these cases in comments next to your test cases. As the current system is what &lt;code>Gilded Rose&lt;/code> has used so far you can expect that it behaves in a way that works for them, so don&amp;rsquo;t change the current behavior. While you implement your tests run them with coverage (&lt;code>npm run coverage&lt;/code>) to check wether your tests hit all the branches in the &lt;code>updateQuality&lt;/code> method.
Hint: &lt;a href="https://www.valentinog.com/blog/jest/#code-coverage-in-jest">This section&lt;/a> of Valentino Gagliardi&amp;rsquo;s tutorial on Jest might help you learn more about effective code coverage with Jest
Hint: You can use &lt;a href="https://jestjs.io/docs/en/api#describeeachtablename-fn-timeout">Jest&amp;rsquo;s &amp;ldquo;describe.each&amp;rdquo;&lt;/a> to simplify your tests.
For the bored: &lt;a href="https://jestjs.io/docs/en/snapshot-testing">Snapshot Testing&lt;/a> can make it easier to understand what the legacy code is actually doing and write the appropriate tests (see also &lt;a href="https://youtu.be/zyM2Ep28ED8">a video on how the Snapshot method is used with Java&lt;/a>).&lt;/li>
&lt;/ol>
&lt;h3 id="part-2-refactoring">Part 2: Refactoring&lt;/h3>
&lt;ol start="8">
&lt;li>Have another look at the part of the &lt;code>Gilded Rose&lt;/code>&amp;rsquo;s Requirements sheet that concerns refactoring and limitations you face:&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>Feel free to make any changes to the UpdateQuality method and add any new code as long as everything
still works correctly. However, do not alter the Item class or Items property as those belong to the
goblin in the corner who will insta-rage and one-shot you as he doesn&amp;#39;t believe in shared code
ownership (you can make the UpdateQuality method and Items property static if you like, we&amp;#39;ll cover
for you).
&lt;/code>&lt;/pre>&lt;ol start="9">
&lt;li>Now refactor the available legacy code. Don&amp;rsquo;t forget to do this step by step and to test often.
Hint: A straightforward solution for refactoring the Gilded Rose would be an item hierarchy with each item &amp;ldquo;knowing&amp;rdquo; how to update it&amp;rsquo;s quality. Unfortunately, you can&amp;rsquo;t do that because the Item class belongs to the goblin. Thus, you will need another solution without the need to change the Item class. Which &lt;em>programming patterns&lt;/em> can help adding different behaviour without needing to change the Item class itself?&lt;/li>
&lt;li>Lint and improve your code: &lt;code>npm run lint .&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3 id="part-3-adding-new-functionality">Part 3: Adding new functionality&lt;/h3>
&lt;ol start="11">
&lt;li>Read again the new requirements you are supposed to implement:&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>We have recently signed a supplier of conjured items. This requires an update to our system:

	- &amp;#34;Conjured&amp;#34; items degrade in Quality twice as fast as normal items

Feel free to make any changes to the UpdateQuality method and add any new code as long as everything still works correctly. However, do not alter the Item class or Items property as those belong to the goblin in the corner who will insta-rage and one-shot you as he doesn&amp;#39;t believe in shared code ownership (you can make the UpdateQuality method and Items property static if you like, we&amp;#39;ll cover for you).

Just for clarification, an item can never have its Quality increase above 50, however &amp;#34;Sulfuras&amp;#34; is a legendary item and as such its Quality is 80 and it never alters.
&lt;/code>&lt;/pre>&lt;ol start="12">
&lt;li>Add test cases for the newly required functionality.&lt;/li>
&lt;li>Implement the new functionality so your tests pass.&lt;/li>
&lt;li>Don&amp;rsquo;t forget to lint and improve your code.&lt;/li>
&lt;/ol>
&lt;h2 id="results-submission">Results Submission&lt;/h2>
&lt;ul>
&lt;li>Hand in a link to your repository&lt;/li>
&lt;li>Hand in a lab report until Dec. 17, 11pm&lt;/li>
&lt;li>Take part in the peer review activity on &lt;!-- raw HTML omitted -->Dec. 17 2020&lt;!-- raw HTML omitted --> Jan. 7 2021 (rescheduled)&lt;/li>
&lt;/ul>
&lt;p>More info on the &lt;a href="..">Labs&lt;/a> page.&lt;/p></description></item><item><title>Assignment 05: Functionality and Libraries</title><link>https://bkleinen.github.io/classes/ss2013/info3/assignments/assignment-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2013/info3/assignments/assignment-05/</guid><description>&lt;p>In this assignment, you will add some functionality to your rails app and try out a couple of the principles and practices we covered in the lectures. For this, you need to add some functionality that you can choose yourself. Read through the whole assignment and decide on the functionality you want to add before starting to implement it. It does not have to be the most important functionality of your app – the goal here is to try out the different aspects of rails.&lt;/p></description></item><item><title>Assignment 05: Functionality and Libraries</title><link>https://bkleinen.github.io/classes/ws2013/info3/labs/assignment-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info3/labs/assignment-05/</guid><description>&lt;p>asdf
In this assignment, you will add some functionality to your rails app and try out a couple of the principles and practices we covered in the lectures. For this, you need to add some functionality that you can choose yourself. Read through the whole assignment and decide on the functionality you want to add before starting to implement it. It does not have to be the most important functionality of your app – the goal here is to try out the different aspects of rails.&lt;/p></description></item><item><title>Assignment 06 - Rails - First Steps</title><link>https://bkleinen.github.io/classes/ws2014/info3/labs/lab-06-rails-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info3/labs/lab-06-rails-1/</guid><description>&lt;p>&lt;img src="../images/pumpkins-wide.jpg" alt="Pumpkins" title="pumpkins">
Foto by &lt;a href="https://www.flickr.com/photos/pedroferrer/3615212504">Pedro J. Ferreira&lt;/a>&lt;/p>
&lt;h1 id="prelab">Prelab&lt;/h1>
&lt;ol>
&lt;li>Read through two Rails Guides:
&lt;ol>
&lt;li>&lt;a href="https://guides.rubyonrails.org/active_record_basics.html">https://guides.rubyonrails.org/active_record_basics.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://guides.rubyonrails.org/association_basics.html">https://guides.rubyonrails.org/association_basics.html&lt;/a>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h1 id="assignment">Assignment&lt;/h1>
&lt;h2 id="part-0-show-the-customer-with-its-name">Part 0: Show the Customer with it&amp;rsquo;s Name&lt;/h2>
&lt;p>On the orders#show page, show the associated customer with its name rather than the ID -
Test driven! You can use the :order1 factory for
this, see Part 1 for more info on FactoryGirl test
data.&lt;/p>
&lt;h2 id="part-1-creating-testdata">Part 1: Creating Testdata&lt;/h2>
&lt;p>You should never be attached to manually created test data living in your development or test database. Instead, you should have scripts that generate and re-generate this test data on demand.&lt;/p></description></item><item><title>Assignment 06 - Rails - First Steps</title><link>https://bkleinen.github.io/classes/ws2015/info3/labs/lab-06-rails-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info3/labs/lab-06-rails-1/</guid><description>&lt;p>&lt;img src="../images/pumpkins-wide.jpg" alt="Pumpkins" title="pumpkins">
Foto by &lt;a href="https://www.flickr.com/photos/pedroferrer/3615212504">Pedro J. Ferreira&lt;/a>&lt;/p>
&lt;h1 id="prelab">Prelab&lt;/h1>
&lt;ol>
&lt;li>Read through two Rails Guides:
&lt;ol>
&lt;li>&lt;a href="https://guides.rubyonrails.org/active_record_basics.html">https://guides.rubyonrails.org/active_record_basics.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://guides.rubyonrails.org/association_basics.html">https://guides.rubyonrails.org/association_basics.html&lt;/a>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h1 id="assignment">Assignment&lt;/h1>
&lt;h2 id="part-0-show-the-customer-with-its-name">Part 0: Show the Customer with it&amp;rsquo;s Name&lt;/h2>
&lt;p>On the orders#show page, show the associated customer with its name rather than the ID -
Test driven! You can use the :order1 factory for
this, see Part 1 for more info on FactoryGirl test
data.&lt;/p>
&lt;h2 id="part-1-creating-testdata">Part 1: Creating Testdata&lt;/h2>
&lt;p>You should never be attached to manually created test data living in your development or test database. Instead, you should have scripts that generate and re-generate this test data on demand.&lt;/p></description></item><item><title>Assignment 06 - Rails - First Steps</title><link>https://bkleinen.github.io/classes/ws2017/info3/labs/lab-06-rails-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/info3/labs/lab-06-rails-1/</guid><description>&lt;p>&lt;img src="../images/pumpkins-wide.jpg" alt="Pumpkins" title="pumpkins">
&lt;!-- raw HTML omitted -->Foto by &lt;a href="https://www.flickr.com/photos/pedroferrer/3615212504">Pedro J. Ferreira&lt;/a>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Revised - without significant changes to the assignment itself except taking
out Factory Girl/Bot - on 1/1/18.
If you&amp;rsquo;ve started working on this assignment before, you can view the changes
in the commit &amp;ldquo;info3 - revised lab 06&amp;rdquo; on &lt;!-- raw HTML omitted -->
bkleinen.github.io&lt;!-- raw HTML omitted -->&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;h1 id="prelab">Prelab&lt;/h1>
&lt;ol start="0">
&lt;li>The Base Repo (referred to as main repository below) for this Lab is the HTW Application we&amp;rsquo;ve developed in class, see
&lt;a href="https://github.com/htw-imi-info3-archive/rails-dash-ws2017">https://github.com/htw-imi-info3-archive/rails-dash-ws2017&lt;/a> - first fork it on github (only one person in your team needs to do this) and then clone it to your local workspace (computer).&lt;/li>
&lt;li>Read through two Rails Guides:
&lt;ol>
&lt;li>&lt;a href="https://guides.rubyonrails.org/active_record_basics.html">Active Record Basics&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://guides.rubyonrails.org/association_basics.html">Association Basics&lt;/a>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h1 id="assignment">Assignment&lt;/h1>
&lt;h2 id="part-0-creating-testdata">Part 0: Creating Testdata&lt;/h2>
&lt;p>You should never be attached to manually created test data living in your
development or test database. Instead, you should have scripts that generate and re-generate this test data on demand.&lt;/p></description></item><item><title>Assignment 06 - Rails - First Steps</title><link>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-06-rails-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-06-rails-1/</guid><description>&lt;p>&lt;img src="../images/pumpkins-wide.jpg" alt="Pumpkins" title="pumpkins">
&lt;!-- raw HTML omitted -->Foto by &lt;a href="https://www.flickr.com/photos/pedroferrer/3615212504">Pedro J. Ferreira&lt;/a>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Revised - without significant changes to the assignment itself except taking
out Factory Girl/Bot - on 1/1/18.
If you&amp;rsquo;ve started working on this assignment before, you can view the changes
in the commit &amp;ldquo;info3 - revised lab 06&amp;rdquo; on &lt;!-- raw HTML omitted -->
bkleinen.github.io&lt;!-- raw HTML omitted -->&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;h1 id="prelab">Prelab&lt;/h1>
&lt;ol start="0">
&lt;li>The Base Repo (referred to as main repository below) for this Lab is the HTW Application we&amp;rsquo;ve developed in class, see
&lt;a href="https://github.com/htw-imi-info3-archive/rails-dash-ws2017">https://github.com/htw-imi-info3-archive/rails-dash-ws2017&lt;/a> - first fork it on github (only one person in your team needs to do this) and then clone it to your local workspace (computer).&lt;/li>
&lt;li>Read through two Rails Guides:
&lt;ol>
&lt;li>&lt;a href="https://guides.rubyonrails.org/active_record_basics.html">Active Record Basics&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://guides.rubyonrails.org/association_basics.html">Association Basics&lt;/a>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h1 id="assignment">Assignment&lt;/h1>
&lt;h2 id="part-0-creating-testdata">Part 0: Creating Testdata&lt;/h2>
&lt;p>You should never be attached to manually created test data living in your
development or test database. Instead, you should have scripts that generate and re-generate this test data on demand.&lt;/p></description></item><item><title>Assignment 06 - Web Apps with Node and Express I</title><link>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-06-express-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-06-express-1/</guid><description>&lt;h1 id="overview">Overview&lt;/h1>
&lt;p>In the course of this and the following Lab Assignment, you will implement a rudimentary web application
based on node and express.js.&lt;/p>
&lt;p>The goal of the exercises is gain first experiences with fundamental steps
of web application development, rather than completing the app!&lt;/p>
&lt;p>In the end, your app is expected to have the following features:&lt;/p>
&lt;h2 id="lab-06---express-1">Lab 06 - Express 1&lt;/h2>
&lt;ul>
&lt;li>contain at least 1 view template displaying data that is hard-coded in the controller&lt;/li>
&lt;li>process parameters sent from an HTML form in the controller&lt;/li>
&lt;li>MVC: View and Controller should be clearly separated, e.g. in specific folders&lt;/li>
&lt;/ul>
&lt;h2 id="lab-07---express-2">Lab 07 - Express 2&lt;/h2>
&lt;ul>
&lt;li>display at least 1 piece of data retrieved from the database&lt;/li>
&lt;li>trigger at least 1 change in the database&lt;/li>
&lt;li>implement and use at least 1 API endpoint&lt;/li>
&lt;li>MVC structure is clearly visible&lt;/li>
&lt;/ul>
&lt;p>The goal is not to complete the application but to practice these
basic elements of web application development.&lt;/p></description></item><item><title>Assignment 07 - Internationalization, n:m Associations and a Bit of Functionality</title><link>https://bkleinen.github.io/classes/ws2014/info3/labs/lab-07-rails-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info3/labs/lab-07-rails-2/</guid><description>&lt;h1 id="assignment">Assignment&lt;/h1>
&lt;h3 id="sort-or-search-pumpkins">Sort or Search Pumpkins&lt;/h3>
&lt;p>On the Pumpkin index site, add either a sort function for at least one pumpkin
attribute &lt;strong>or&lt;/strong> a search functionality. You will need to add a link or form to
the index site, and perform the ordering/searching from the controller altering
the @pumpkins variable. [https://guides.rubyonrails.org/active_record_querying.html]
(&lt;a href="https://guides.rubyonrails.org/active_record_querying.html">https://guides.rubyonrails.org/active_record_querying.html&lt;/a>) contains all necessary
information on how to query Pumpkins.&lt;/p>
&lt;p>*** remember to make use of all the great pumpkins all of you added with their
pull request you can use to populate your database! ***&lt;/p></description></item><item><title>Assignment 07 - Internationalization, n:m Associations and a Bit of Functionality</title><link>https://bkleinen.github.io/classes/ws2015/info3/labs/lab-07-rails-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info3/labs/lab-07-rails-2/</guid><description>&lt;h1 id="assignment">Assignment&lt;/h1>
&lt;h3 id="sort-or-search-pumpkins">Sort or Search Pumpkins&lt;/h3>
&lt;p>On the Pumpkin index site, add either a sort function for at least one pumpkin
attribute &lt;strong>or&lt;/strong> a search functionality. You will need to add a link or form to
the index site, and perform the ordering/searching from the controller altering
the @pumpkins variable. [https://guides.rubyonrails.org/active_record_querying.html]
(&lt;a href="https://guides.rubyonrails.org/active_record_querying.html">https://guides.rubyonrails.org/active_record_querying.html&lt;/a>) contains all necessary
information on how to query Pumpkins.&lt;/p>
&lt;p>*** remember to make use of all the great pumpkins all of you added with their
pull request you can use to populate your database! ***&lt;/p></description></item><item><title>Assignment 07 - Search &amp; Sort, Internationalization</title><link>https://bkleinen.github.io/classes/ws2017/info3/labs/lab-07-rails-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/info3/labs/lab-07-rails-2/</guid><description>&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;h3 id="part-1-add-a-sort-or-search-functionality">Part 1: Add a Sort or Search Functionality&lt;/h3>
&lt;p>Each Group should add a sort or search functionality to one of the resources
pages of the HTW app. We will coordinate the tasks using issues on the repository,
see &lt;a href="https://github.com/htw-imi-info3-archive/rails-dash-ws2017/issues">https://github.com/htw-imi-info3-archive/rails-dash-ws2017/issues&lt;/a>,
and also coordinate within the lab.&lt;/p>
&lt;p>See the &lt;a href="https://guides.rubyonrails.org/active_record_querying.html">Guide on the Active Record Query Interface&lt;/a> - it
contains all necessary
information on how to query and sort Pumpkins and other stuff.&lt;/p>
&lt;p>*** remember to make use of all the great pumpkins (and other test data)
all of you added with their
pull request you can use to populate your database! ***&lt;/p></description></item><item><title>Assignment 07 - Search &amp; Sort, Internationalization</title><link>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-07-rails-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-07-rails-2/</guid><description>&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;h3 id="part-1-add-a-sort-or-search-functionality">Part 1: Add a Sort or Search Functionality&lt;/h3>
&lt;p>Each Group should add a sort or search functionality to one of the resources
pages of the HTW app. We will coordinate the tasks using issues on the repository,
see &lt;a href="https://github.com/htw-imi-info3-archive/rails-dash-ws2017/issues">https://github.com/htw-imi-info3-archive/rails-dash-ws2017/issues&lt;/a>,
and also coordinate within the lab.&lt;/p>
&lt;p>See the &lt;a href="https://guides.rubyonrails.org/active_record_querying.html">Guide on the Active Record Query Interface&lt;/a> - it
contains all necessary
information on how to query and sort Pumpkins and other stuff.&lt;/p>
&lt;p>*** remember to make use of all the great pumpkins (and other test data)
all of you added with their
pull request you can use to populate your database! ***&lt;/p></description></item><item><title>Assignment 07 - Web Apps with Node and Express II</title><link>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-07-express-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-07-express-2/</guid><description>&lt;p>Example apps: &lt;a href="https://github.com/htw-imi-info3-archive/express-app03">App 03&lt;/a> - Persistence and &lt;a href="https://github.com/htw-imi-info3-archive/express-app04">App 04&lt;/a> - with testing&lt;/p>
&lt;p>(This builds on app02)&lt;/p>
&lt;h1 id="from-lab06-to-lab07">From Lab06 to Lab07&lt;/h1>
&lt;p>You will continue working on your project from Lab06. However, it should be in a separate code base. So you should create a new empty repository on GitLab in the folder for Lab07 and add this new repo as the new origin of your local repository. For Lab07, only push to the project in the Lab07 folder!&lt;/p></description></item><item><title>Assignment 07 - Web Apps with Node and Express II</title><link>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-08-express-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-08-express-3/</guid><description>&lt;h1 id="from-lab07-to-lab08">From Lab07 to Lab08&lt;/h1>
&lt;p>You will continue working on your project from Lab07.
However, it should be in a separate code base.
So you should create a new empty repository on GitLab in the folder for Lab08 and add this new repo as the new origin of your local repository.
For Lab08, only push to the project in the Lab08 folder!&lt;/p>
&lt;h1 id="assignment-1-clean-up">Assignment 1: Clean Up&lt;/h1>
&lt;h2 id="a-check-the-requirements">a) Check the requirements&lt;/h2>
&lt;p>Check the following questions and if the answer is no, fix it. Those were things that you should have done in Lab06 and Lab07, but if you haven&amp;rsquo;t do them now. &lt;strong>Document in your report what you needed to fix.&lt;/strong>&lt;/p></description></item><item><title>Assignment 1: Testing</title><link>https://bkleinen.github.io/classes/ss2013/info3/assignments/assignment-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2013/info3/assignments/assignment-01/</guid><description>&lt;h2 id="a-test-driven-development">A. Test Driven Development&lt;/h2>
&lt;p>Create a new Java Project in Eclipse (or your preferred IDE).&lt;/p>
&lt;p>Source Code for this Assignment: (removed)&lt;/p>
&lt;p>Create a Class Node as in Node.java _as Head of a linked list (added 5.4.13) _and develop a method for deleting Nodes in a List test driven, that is, develop the Unit Tests first, as we did in class. Choose one of the two methods we discussed in class to help the assertions - creating a test helper method as in assert.java or creating a toString method as in toString.java.&lt;/p></description></item><item><title>Assignment 1: Testing</title><link>https://bkleinen.github.io/classes/ss2014/info3/labs/assignment-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info3/labs/assignment-01/</guid><description>&lt;h2 id="a-test-driven-development">A. Test Driven Development&lt;/h2>
&lt;p>Create a new Java Project in Eclipse (or your preferred IDE).&lt;/p>
&lt;p>Source Code for this Assignment: (removed)&lt;/p>
&lt;p>Create a Class Node as in Node.java _as Head of a linked list (added 5.4.13) _and develop a method for deleting Nodes in a List test driven, that is, develop the Unit Tests first, as we did in class. Choose one of the two methods we discussed in class to help the assertions - creating a test helper method as in assert.java or creating a toString method as in toString.java.&lt;/p></description></item><item><title>Assignment 1: Testing</title><link>https://bkleinen.github.io/classes/ss2014/info3/labs/lab-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info3/labs/lab-01/</guid><description>&lt;h2 id="a-test-driven-development">A. Test Driven Development&lt;/h2>
&lt;p>Create a new Java Project in Eclipse (or your preferred IDE).&lt;/p>
&lt;p>Source Code for this Assignment: (removed)&lt;/p>
&lt;p>Create a Class Node as in Node.java as Head of a linked list and develop a method for deleting Nodes in a List test driven, that is, develop the Unit Tests first, as we did in class. Choose one of the two methods we discussed in class to help the assertions - creating a test helper method as in assert.java or creating a toString method as in toString.java.&lt;/p></description></item><item><title>Assignment 1: Testing</title><link>https://bkleinen.github.io/classes/ws2013/info3/labs/assignment-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info3/labs/assignment-01/</guid><description>&lt;h2 id="a-test-driven-development">A. Test Driven Development&lt;/h2>
&lt;p>Create a new Java Project in Eclipse (or your preferred IDE).&lt;/p>
&lt;p>Source Code for this Assignment: (removed)&lt;/p>
&lt;p>Create a Class Node as in Node.java _as Head of a linked list (added 5.4.13) _and develop a method for deleting Nodes in a List test driven, that is, develop the Unit Tests first, as we did in class. Choose one of the two methods we discussed in class to help the assertions - creating a test helper method as in assert.java or creating a toString method as in toString.java.&lt;/p></description></item><item><title>Assignment 2 - Authentication and Code Style</title><link>https://bkleinen.github.io/classes/ws2017/wtat2/topics/a2-authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/wtat2/topics/a2-authentication/</guid><description>&lt;p>The second assignment is to implement an authentication for your application.
Furthermore, you learn how to enforce code styling for your project.&lt;/p>
&lt;h2 id="integrate-bootstrap">Integrate Bootstrap&lt;/h2>
&lt;p>Integrate Bootstrap into your Application. Use Bootstrap 4 (currently in beta),
and comes with sass integration and it&amp;rsquo;s own &lt;a href="https://github.com/twbs/bootstrap-rubygem/blob/master/README.md">ruby gem&lt;/a>:&lt;/p>
&lt;p>You don&amp;rsquo;t need to change any styling yet.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/htw-imi-wtat2/IMICalendar/blob/master/doc/bootstrap.md">Documentation in the Example Project&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/htw-imi-wtat2/IMICalendar/commit/c56aae2c90cfc6fb3710d8bc38d9310d18135629">See the IMI-Calendar-App Commit for Bootstrap integration.&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="testing-with-rspec">Testing with RSpec&lt;/h2>
&lt;p>Integrate the Rspec Testing Framework and develop at least one happy path feature
test for each finished user story you&amp;rsquo;ve completed so far.&lt;/p></description></item><item><title>Assignment 3 - Search Functionality, Postgres and Docker (and some more Bootstrap)</title><link>https://bkleinen.github.io/classes/ws2017/wtat2/topics/a3-search-database-docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/wtat2/topics/a3-search-database-docker/</guid><description>&lt;h2 id="implement-search-functionality">Implement Search Functionality&lt;/h2>
&lt;p>The main Assignment for this sprint is to implement a search functionality for your
app. Thus, find (or create) userstorys that you will need a search functionality for.&lt;/p>
&lt;p>For the search functionality itself, you&amp;rsquo;ll find a tutorial in Chapter 4 of the Book,
which focusses on leveraging Postgres indices. Alternatively, you can decide to learn
more about the ActiveRecord Query Language. Choose one, read the linked material.
Even if you decide to use ActiveRecord Query Language you should read the first part
of Chapter 4 where you find info about building the search itself into rails and
generating test data.&lt;/p></description></item><item><title>Assignment 4 - Java Script and Deployment</title><link>https://bkleinen.github.io/classes/ws2017/wtat2/topics/a4-ci-cd-javascript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/wtat2/topics/a4-ci-cd-javascript/</guid><description>&lt;h2 id="continuous-integration-and-deployment">Continuous Integration and Deployment&lt;/h2>
&lt;p>Setup Travis CI to build your project automatically after each push.
See &lt;a href="https://docs.travis-ci.com/user/docker/">https://docs.travis-ci.com/user/docker/&lt;/a>.&lt;/p>
&lt;p>Setup an Automatated Deployment after a successful build. See &lt;a href="https://docs.travis-ci.com/user/deployment">https://docs.travis-ci.com/user/deployment&lt;/a>&lt;/p>
&lt;p>I&amp;rsquo;ve created two examples:&lt;/p>
&lt;ul>
&lt;li>direct deployment of rails on heroku in &lt;a href="https://github.com/htw-imi-rails-examples/notes-deploy">https://github.com/htw-imi-rails-examples/notes-deploy&lt;/a>&lt;/li>
&lt;li>deployment on heroku with docker in &lt;a href="https://github.com/htw-imi-rails-examples/notes-deploy-docker">https://github.com/htw-imi-rails-examples/notes-deploy-docker&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ajax">AJAX&lt;/h2>
&lt;p>Find a place - find or create a story - where a little bit of JavaScript is useful in your Application. You find a couple
of examples in the &lt;a href="https://guides.rubyonrails.org/working_with_javascript_in_rails.html">Working with JavaScript in Rails&lt;/a>
Guide which is also the required reading for next week.&lt;/p></description></item><item><title>Assignment 4: First Rails Steps</title><link>https://bkleinen.github.io/classes/ss2013/info3/assignments/assignment-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2013/info3/assignments/assignment-04/</guid><description>&lt;p>In this exercise, you will create a rails application for the first one or two features / user stories of your application. Pick one simple thing that you can solve mainly with the provided CRUD (Create Read Update Delete) features of a rails scaffold using just one or two model classes. If the first things seems to simple for that, add a second – but the goal is really to implement just a little bit of functionality in this first step and mainly set up the whole rails app together with Continuous Integration – we will add Continuous Deployment in the next exercise.&lt;/p></description></item><item><title>Assignment 4: First Rails Steps</title><link>https://bkleinen.github.io/classes/ss2014/info3/labs/lab-004/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info3/labs/lab-004/</guid><description>&lt;p>In this exercise, you will create a rails application for the first one or two features / user stories of your application. Pick one simple thing that you can solve mainly with the provided CRUD (Create Read Update Delete) features of a rails scaffold using just one or two model classes. If the first things seems to simple for that, add a second – but the goal is really to implement just a little bit of functionality in this first step and mainly set up the whole rails app together with Continuous Integration – we will add Continuous Deployment in the next exercise.&lt;/p></description></item><item><title>Assignment 4: First Rails Steps</title><link>https://bkleinen.github.io/classes/ws2013/info3/labs/assignment-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info3/labs/assignment-04/</guid><description>&lt;p>In this exercise, you will create a rails application for the first one or two features / user stories of your application. Pick one simple thing that you can solve mainly with the provided CRUD (Create Read Update Delete) features of a rails scaffold using just one or two model classes. If the first things seems to simple for that, add a second – but the goal is really to implement just a little bit of functionality in this first step and mainly set up the whole rails app together with Continuous Integration – we will add Continuous Deployment in the next exercise.&lt;/p></description></item><item><title>Assignment 5 - External APIs and Rails Security</title><link>https://bkleinen.github.io/classes/ws2017/wtat2/topics/a5-api-security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/wtat2/topics/a5-api-security/</guid><description>&lt;h2 id="external-apis">External APIs&lt;/h2>
&lt;p>Research possible external APIs that might be useful for your project
(e.g. a weather api for a hiking site enabling you to show the current
weather).&lt;/p>
&lt;p>Find or define Stories in your Backlog to use the API. It doesn&amp;rsquo;t have to
be much, the focus is more on using the API than building a lot of new
features into your app.&lt;/p>
&lt;p>Write an Adapter and Tests for the API as discussed in class.&lt;/p></description></item><item><title>Assignment 6 - Choose your own topic</title><link>https://bkleinen.github.io/classes/ws2017/wtat2/topics/a6-choose-your-own/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/wtat2/topics/a6-choose-your-own/</guid><description>&lt;h2 id="choose-your-own-topic">Choose your own topic&lt;/h2>
&lt;p>Choose your one, two (or more) stories from your backlog that you like to do
to finish your project for this term.&lt;/p>
&lt;h2 id="add-code-coverage">Add code coverage&lt;/h2>
&lt;p>Add the Gem &lt;code>simplecov&lt;/code> to your Gemfile and include it in your tests
according to the gem documentation. Aim for an about 80% test coverage.&lt;/p>
&lt;h2 id="dont-forget-the-tests">Don&amp;rsquo;t forget the tests&lt;/h2>
&lt;p>Don&amp;rsquo;t forget to write tests for your new features and to groom your test suite
along the way. Simplecov will&lt;/p></description></item><item><title>Assignments for Web Technology</title><link>https://bkleinen.github.io/classes/ws2016/media-programming-rails/assignments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/media-programming-rails/assignments/</guid><description>&lt;h1 id="week-1">Week 1&lt;/h1>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;h3 id="working-on-your-project">Working on your project&lt;/h3>
&lt;ol>
&lt;li>Write down your project vision.&lt;/li>
&lt;li>Write down your product backlog. Roughly prioritize it for business value. Don&amp;rsquo;t hesitate to write down as many stories as you want, you don&amp;rsquo;t have to implement them all.&lt;/li>
&lt;li>Pick a user story that you can implement with simple CRUD operations.&lt;/li>
&lt;li>Draw a scribble for the screens involved.&lt;/li>
&lt;li>Draw a first sketch of the data model that is suffient for this story.&lt;/li>
&lt;li>Create a new rails application.&lt;/li>
&lt;li>Generate your first model/view/controller using &lt;code>rails generate scaffold&lt;/code>&lt;/li>
&lt;li>Have a look at the generated html templates (find dem in app/views). Change and document one thing that makes sense within your application.&lt;/li>
&lt;li>Next, pick a user story that requires to add a little bit of functionality to your app.&lt;/li>
&lt;li>Implement it by at least creating a new controller action and route by hand.&lt;/li>
&lt;/ol>
&lt;h3 id="reading-and-preparation">Reading and preparation&lt;/h3>
&lt;p>Starting next week, You will work on your project within the lab.
I will publish the next assignment by monday, enabling you to
start working on it and have your questions ready in the lab.
For preparation, please read through&lt;/p></description></item><item><title>B. Kleinen | Bachelor-/Masterarbeiten FAQ</title><link>https://bkleinen.github.io/studies/thesis/kolloquium/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/studies/thesis/kolloquium/</guid><description>&lt;h1 id="kolloquium">Kolloquium&lt;/h1>
&lt;h2 id="besonderheiten-in-der-pandemie">Besonderheiten in der Pandemie&lt;/h2>
&lt;p>Die Kolloquien finden über Zoom statt. Einladungen erfolgen nur über email.
Die Termine koordiniere ich &lt;a href="https://wiki.htw-berlin.de/confluence/display/fb4crskleinen/Abschlussarbeiten+Prof.+Kleinen">momentan im Wiki&lt;/a>; manche der Kolloquien sind offen für Gäste.&lt;/p>
&lt;h2 id="wie-wird-der-termin-fuumlr-das-kolloquium-festgelegt">Wie wird der Termin für das Kolloquium festgelegt?&lt;/h2>
&lt;p>I.d.R. koordiniert das ihr/e Erstbetreuer/in und schickt den gefundenen Termin, an dem der oder die Kandidatin und alle Betreuer:innen Zeit haben, an die FB-Verwaltung. Dort wird der Notenzettel in der Prüfungsverwaltung angefordert (d.h. Sie sollten vorher sicherstellen, dass alle Ihre Noten im LSF eingetragen sind, und ggfs. die Dozenten oder die Betreuer darauf ansprechen - ohne Abschluß aller anderen Veranstaltung kann das Kolloquium nicht durchgeführt werden!) und dann der Termin offiziell festgelegt, und Sie bekommen ein offizielles Schreiben, in dem auch der Raum steht - in der Regel ist das der WH-C 603.&lt;/p></description></item><item><title>B9 Networks SoSe 2022 - Resources</title><link>https://bkleinen.github.io/classes/ss2022/networks/resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/networks/resources/</guid><description>&lt;div class="alert alert-danger" role="alert">
 
Hinweis: die LV wird im Sommersemester 2022 von einem Lehrbeauftragten, Parham Haririan, übernommen. Die Informationen hier sind derzeit nicht aktuell.

&lt;/div>

&lt;h2 id="textbook">Textbook&lt;/h2>
&lt;p>Kurose, James F; Ross, Keith W.: &lt;strong>Computer Networking. A Top-Down Approach&lt;/strong>, 8th ed., Pearson Global Editions, Harlow UK, 2021.
ISBN: 978-1-292-40546-9&lt;/p>
&lt;p>The class is based on Jim Kurose&amp;rsquo;s Textbook &amp;ldquo;Computer Networking. A Top-Down Approach&amp;rdquo;.
The textbook has an &lt;a href="https://gaia.cs.umass.edu/kurose_ross/index.php">accompanying website with a lot of resources&lt;/a>,
especially &lt;a href="https://gaia.cs.umass.edu/kurose_ross/lectures.php">lecture videos&lt;/a>.&lt;/p>
&lt;p>You can aquire a printed copy or read the book online using licences aquired
through our library - just &lt;a href="https://elibrary.pearson.de/book/99.150005/9781292405513">access the publisher&amp;rsquo;s book site&lt;/a> from within the HTW
Network (from home, use the &lt;a href="(https://rz.htw-berlin.de/anleitungen/vpn/)">VPN&lt;/a> and make sure not to use split access)&lt;/p></description></item><item><title>B9 Networks SoSe 2022 - Schedule</title><link>https://bkleinen.github.io/classes/ss2022/networks/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/networks/schedule/</guid><description>&lt;div class="alert alert-danger" role="alert">
 
Hinweis: die LV wird im Sommersemester 2022 von einem Lehrbeauftragten, Parham Haririan, übernommen. Die Informationen hier sind derzeit nicht aktuell.

&lt;/div>

&lt;p>This schedule is, as always, tentative and will be updated during the term.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">W&lt;/th>
 &lt;th style="text-align: left">CW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">Read before class:&lt;/th>
 &lt;th style="text-align: left">Lab&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">Fri 08/04/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Class Intro / Server Setup and the Shell&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab00">Lab 00 - Intro&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Fri 15/04/2022&lt;/td>
 &lt;td style="text-align: left">Ostern&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Fri 22/04/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Computer Networks and the Internet: &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/1/">1.1-1.7&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab00">Lab 00 - Intro&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Fri 29/04/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Application Layer: &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/2/">2.1-2.3, 2.7&lt;/a>&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Fri 06/05/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Application Layer: &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/2/">2.4-2.6&lt;/a>&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Fri 13/05/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Transport Layer: &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/3/">3.1-3.4&lt;/a>&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Fri 20/05/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Transport Layer: &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/3/">3.5-3.8&lt;/a>&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Fri 27/05/2022&lt;/td>
 &lt;td style="text-align: left">Vorlesungsfrei&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Fri 03/06/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">The Network Layer: Data Plane &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/4/">4.1-4.2&lt;/a>&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Fri 10/06/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">The Network Layer: Data Plane &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/4/">4.3-4.5&lt;/a>&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Fri 17/06/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">The Network Layer: Control Plane &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/5/">5.1-5.4&lt;/a>&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Fri 24/06/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">The Network Layer: Control Plane &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/5/">5.5-5.7&lt;/a>&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Fri 01/07/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">The Link Layer and LANs &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/6/">6.1-6.4&lt;/a>&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Fri 08/07/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">The Link Layer and LANs &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/6/">6.3-6.8&lt;/a>&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Fri 15/07/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Exam?&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">Fri 22/07/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Exam?&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">30&lt;/td>
 &lt;td style="text-align: left">Fri 29/07/2022&lt;/td>
 &lt;td style="text-align: left">Showtime&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>B9 Networks WS 2021/22 - Resources</title><link>https://bkleinen.github.io/classes/ws2021/networks/resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/networks/resources/</guid><description>&lt;h2 id="material-on-this-site">Material on this Site&lt;/h2>



 
 
 

 &lt;table class="table">
 &lt;thead>
 &lt;tr>
 &lt;th scope="col">Title&lt;/th>
 &lt;th scope="col">Tag&lt;/th>
 &lt;th scope="col">Tools&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 
 &lt;tr>
 &lt;td>&lt;a href="https://bkleinen.github.io/material/ops/hrz/">Working with HTW Machines&lt;/a>&lt;/th>
 &lt;td> ops, htw&lt;/td>
 &lt;td> bash, hrz&lt;/td>
 &lt;/tr>
 
 &lt;tr>
 &lt;td>&lt;a href="https://bkleinen.github.io/material/ops/debian-server/">Debian Server&lt;/a>&lt;/th>
 &lt;td> web, ops&lt;/td>
 &lt;td> &lt;/td>
 &lt;/tr>
 
 &lt;tr>
 &lt;td>&lt;a href="https://bkleinen.github.io/material/ops/nginx/">Nginx&lt;/a>&lt;/th>
 &lt;td> web&lt;/td>
 &lt;td> nginx&lt;/td>
 &lt;/tr>
 
 &lt;tr>
 &lt;td>&lt;a href="https://bkleinen.github.io/material/ops/vi/">VI&lt;/a>&lt;/th>
 &lt;td> vi&lt;/td>
 &lt;td> vi&lt;/td>
 &lt;/tr>
 
 &lt;/tbody>
 &lt;/table>

 



&lt;h2 id="textbook">Textbook&lt;/h2>
&lt;p>If you can afford it, consider aquiring your own copy of the text book:&lt;/p>
&lt;p>Kurose, James F; Ross, Keith W.: &lt;strong>Computer Networking. A Top-Down Approach&lt;/strong>, 8th ed., Pearson Global Editions, Harlow UK, 2021.
ISBN: 978-1-292-40546-9&lt;/p>
&lt;p>Available&lt;a href="https://www.pearson.de/computer-networking-global-edition">Pearson&lt;/a>,
&lt;a href="https://www.lehmanns.de/shop/mathematik-informatik/56287656-9781292405469-computer-networking-global-edition">Lehmanns&lt;/a>,
&lt;a href="https://www.amazon.de/Computer-Networking-Global-James-Kurose/dp/1292405465?source=ps-sl-shoppingads-lpcontext&amp;amp;psc=1?th=1&amp;amp;psc=1">Amazon&lt;/a>.&lt;/p>
&lt;p>Access to the ebook is be available &lt;a href="https://sisis.rz.htw-berlin.de/search?bvnr=BV047350002">through the Library&lt;/a> from within the HTW network (use the &lt;a href="https://rz.htw-berlin.de/anleitungen/vpn/">VPN&lt;/a> from outside).&lt;/p></description></item><item><title>B9 Networks WS 2021/22 - Schedule</title><link>https://bkleinen.github.io/classes/ws2021/networks/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/networks/schedule/</guid><description>&lt;p>This schedule is, as always, tentative and will be updated during the term.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">W&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Datum&lt;/th>
 &lt;th style="text-align: left">Lecture&lt;/th>
 &lt;th style="text-align: left">Lab&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">40&lt;/td>
 &lt;td style="text-align: left">Wed 06/10/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">none&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 07/10/2021&lt;/td>
 &lt;td style="text-align: left">Class Intro&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Wed 13/10/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab00_intro">Lab 00 - Intro&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 14/10/2021&lt;/td>
 &lt;td style="text-align: left">Computer Networks and the Internet: &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/1/">1.1-1.4&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Wed 20/10/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab00_intro">Lab 00 - Intro&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 21/10/2021&lt;/td>
 &lt;td style="text-align: left">Computer Networks and the Internet: &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/1/">1.5-1.7&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Wed 27/10/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 28/10/2021&lt;/td>
 &lt;td style="text-align: left">Server Setup and the Shell&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Wed 03/11/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 04/11/2021&lt;/td>
 &lt;td style="text-align: left">Application Layer: &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/2/">2.1-2.3, 2.7&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Wed 10/11/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 11/11/2021&lt;/td>
 &lt;td style="text-align: left">Application Layer: &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/2/">2.4-2.6&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Wed 17/11/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">(2)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 18/11/2021&lt;/td>
 &lt;td style="text-align: left">Transport Layer: &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/3/">3.1-3.4&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Wed 24/11/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">2 Abgabe : Fr&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 25/11/2021&lt;/td>
 &lt;td style="text-align: left">Transport Layer: &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/3/">3.5-3.8&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Wed 01/12/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 02/12/2021&lt;/td>
 &lt;td style="text-align: left">The Network Layer: Data Plane &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/4/">4.1-4.2&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Wed 08/12/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">3/4 Abgabe : Fr&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 09/12/2021&lt;/td>
 &lt;td style="text-align: left">The Network Layer: Data Plane &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/4/">4.3-4.5&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Wed 15/12/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">4 Abgabe: Tue&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 16/12/2021&lt;/td>
 &lt;td style="text-align: left">The Network Layer: Control Plane &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/5/">5.1-5.4&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Wed 22/12/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ndash;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 23/12/2021&lt;/td>
 &lt;td style="text-align: left">Vorlesungsfrei&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">52&lt;/td>
 &lt;td style="text-align: left">Wed 29/12/2021&lt;/td>
 &lt;td style="text-align: left">Vorlesungsfrei&lt;/td>
 &lt;td style="text-align: left">&amp;ndash;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 30/12/2021&lt;/td>
 &lt;td style="text-align: left">Vorlesungsfrei&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Wed 05/01/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 06/01/2022&lt;/td>
 &lt;td style="text-align: left">&amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Wed 12/01/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 13/01/2022&lt;/td>
 &lt;td style="text-align: left">The Network Layer: Control Plane &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/5/">5.5-5.7&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Wed 19/01/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 20/01/2022&lt;/td>
 &lt;td style="text-align: left">The Link Layer and LANs &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/6/">6.1-6.4&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Wed 26/01/2022 PZ 1&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 27/01/2022 PZ 1&lt;/td>
 &lt;td style="text-align: left">Exam Info / The Link Layer and LANs &lt;a href="https://gaia.cs.umass.edu/kurose_ross/videos/6/">6.3-6.8&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Wed 02/02/2022 PZ 1&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 03/02/2022&lt;/td>
 &lt;td style="text-align: left">Exam PZ 1&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">Wed 09/02/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 10/02/2022&lt;/td>
 &lt;td style="text-align: left">Exam PZ 1: Klausureinsicht&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Bachelorseminar Schedule</title><link>https://bkleinen.github.io/classes/ss2020/bachelorseminar/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/bachelorseminar/schedule/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">vorher lesen&lt;/th>
 &lt;th style="text-align: left">Übungen (vorher machen, ggfs. in Moodle hochladen)&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Wed 13/05/2020&lt;/td>
 &lt;td style="text-align: left">bis Kapitel 3/1.Teil&lt;/td>
 &lt;td style="text-align: left">Cluster, Analogierad, Strukturbaum&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Wed 20/05/2020&lt;/td>
 &lt;td style="text-align: left">Kapitel 3/2.Teil&lt;/td>
 &lt;td style="text-align: left">Themenfächer, 7 W-Fragen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Wed 27/05/2020&lt;/td>
 &lt;td style="text-align: left">Kapitel 4&lt;/td>
 &lt;td style="text-align: left">Fragen an die Literatur, Literaturliste&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Wed 03/06/2020&lt;/td>
 &lt;td style="text-align: left">Kapitel 5&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Wed 10/06/2020&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Wed 17/06/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Wed 24/06/2020&lt;/td>
 &lt;td style="text-align: left">Kapitel 5&lt;/td>
 &lt;td style="text-align: left">Brennpunkt (Kap. 5), Rohfassung der Gliederung&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Wed 01/07/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Tools und Arbeitsmethoden - Markt - alle stellen Ihre &amp;ldquo;Picks&amp;rdquo; vor&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Wed 08/07/2020&lt;/td>
 &lt;td style="text-align: left">Kapitel 2 und 6&lt;/td>
 &lt;td style="text-align: left">gemeinsames Korrekturlesen und Planen von Korrektur-lese-Pool&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Bachelorseminar Schedule</title><link>https://bkleinen.github.io/classes/ws2020/bachelorseminar/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/bachelorseminar/schedule/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Zeit&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Tue 20/10/2020&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Intro&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Tue 27/10/2020&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Vorstellung von Arbeiten&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Tue 03/11/2020 (eine Woche vorgezogen!)&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Vorstellung von Arbeiten&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Tue 24/11/2020&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Vorstellung von Arbeiten&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Tue 08/12/2020&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Vorstellung von Arbeiten&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Tue 05/01/2021&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Vorstellung von Arbeiten&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Tue 19/01/2021&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Vorstellung von Arbeiten&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Tue 02/02/2021&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Vorstellung von Arbeiten&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>Termine werden über &lt;a href="https://moodle.htw-berlin.de/course/view.php?id=28122">Moodle&lt;/a> vergeben.&lt;/p></description></item><item><title>Bafög-Infos</title><link>https://bkleinen.github.io/studies/bafoeg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/studies/bafoeg/</guid><description>&lt;h2 id="tldr">tl;dr:&lt;/h2>
&lt;p>Die Rolle des BAFöG-Beauftragten ist es, den Mitwirkungs und Auskunftsflichten (BAFöG &lt;a href="https://www.gesetze-im-internet.de/baf_g/__47.html">§ 47 Auskunftspflichten&lt;/a> und &lt;a href="https://www.gesetze-im-internet.de/baf_g/__48.html">§48 Mitwirkung von Ausbildungsstätten&lt;/a>) nachzukommen, d.h. i.d.R. diverse Nachweise zu bestätigen, insbesondere:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>als &lt;a href="#leistungsbescheinigung-nach-dem-4-fachsemester">Leistungsnachweis nach dem 4. Semester&lt;/a> können Sie einfach Ihren LSF-Nachweis an das Studierendenwerk schicken. &lt;strong>(Bei Verzögerungen aber Vorsicht, s.u.)&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>für die für das &lt;a href="#auslandspraktikum">Auslandspraktikum&lt;/a> notwendige Bescheinigung kommen Sie bitte nach der Genehmigung des Praktikums mit dem vorbereiteten Formblatt 6 in meine Sprechstunde.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.xn--bafg-7qa.de/bafoeg/de/antrag-stellen/alle-antragsformulare/alle-antragsformulare_node.html">Link zu den Formularen des Bafög-Amts&lt;/a>&lt;/p></description></item><item><title>Barne Kleinen | Betreuung von Abschlußarbeiten</title><link>https://bkleinen.github.io/studies/thesis/betreuung/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/studies/thesis/betreuung/</guid><description>&lt;h1 id="hinweise-zur-betreuung-von-abschlußarbeiten">Hinweise zur Betreuung von Abschlußarbeiten&lt;/h1>
&lt;p>Die Betreuung findet in Form individueller Gespräche im Rahmen meiner Sprechstunde
oder ggfs. individuell vereinbarten Terminen statt.
Meine Sprechstunde organisiere ich über &lt;a href="https://wiki.htw-berlin.de/confluence/display/fb4crskleinen/Office+Hours+Prof.+Kleinen">diese Wiki-Seite.&lt;/a>&lt;/p>
&lt;p>Die meisten Fragen, die sich im Rahmen Ihrer Arbeit ergeben können Sie&lt;/p>
&lt;ul>
&lt;li>entweder selbst beantworten durch das Studium von &lt;a href="../anleitung">Anleitungen zum Abschlussarbeit schreiben&lt;/a>&lt;/li>
&lt;li>oder sie sind zu komplex, um sinnvoll per email beantwortet werden zu können - die Antwort ist meistens &amp;ldquo;das kommt drauf an&amp;rdquo; - das gilt insbesondere für durchaus mal gerne per mail gestellte Fragen wie:
&lt;ul>
&lt;li>muß ich auch selbst was programmieren?&lt;/li>
&lt;li>muß ich auch ein Kapitel über XY schreiben?&lt;/li>
&lt;li>muß ich einen Fragebogen machen?&lt;/li>
&lt;li>wieviele Seiten muß ich schreiben?&lt;/li>
&lt;li>etc.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Weiter gebe ich auch kein Feedback per email zu zugesandten Textteilen - für
die sich daraus ergebenden Rückfragen müssten wir uns auch treffen, deshalb lieber gleich
im Gespräch. Zugesandte Exposes oder Textteile lege daher in Ihrem Ordner ab
und warte geduldig darauf, bis Sie sich zur Besprechung melden.&lt;/p></description></item><item><title>Barne Kleinen | How to Abschlussarbeit</title><link>https://bkleinen.github.io/studies/thesis/anleitung/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/studies/thesis/anleitung/</guid><description>&lt;h1 id="literatur-über-das-verfassen-von-abschlußarbeiten">Literatur über das Verfassen von Abschlußarbeiten&lt;/h1>
&lt;p>Da sie im Studium wenig Erfahrungen mit dem Verfassen von
wissenschaftlichen Arbeiten sammeln konnten, empfehle ich
Ihnen das hinzuziehen einer Anleitung. Derer gibt es
viele, z.B. im UTB-Verlag.&lt;/p>
&lt;p>Juliane Homann, Stephan Seeck, Katharina Simbeck, Debora Weber-Wulff
haben einen Moodle-Kurs &amp;ldquo;Infoportal wissenschaftliches Schreiben&amp;rdquo;
angelegt:
&lt;a href="https://moodle.htw-berlin.de/course/view.php?id=17639">https://moodle.htw-berlin.de/course/view.php?id=17639&lt;/a>
Über die dort enthaltenen Informationen hinaus
gibt es unter &amp;ldquo;10. Onlinekurse und Ebooks&amp;rdquo; einige Hinweise auf Bücher aus dem UTB-Verlag. Bei mir haben die Links nicht funktioniert: erst im HTW-VPN
anmelden (Full, nicht split&amp;hellip;), dann über die UTB-Seite suchen:
&lt;a href="https://elibrary.utb.de/">https://elibrary.utb.de/&lt;/a> - Bücher sind als PDF verfügbar.&lt;/p></description></item><item><title>BlueJ Trick - Save your Object Bench using Test Fixtures</title><link>https://bkleinen.github.io/material/info1/save_object_bench/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/info1/save_object_bench/</guid><description>&lt;p>You can save and re-create your Object Bench with a trick that uses the Unit Test Support in BlueJ, especially “Object Bench to Test Fixture” “Test Fixture to Object Bench”:&lt;/p>
&lt;h3 id="1-save-the-state-of-your-object-bench">1. Save the state of your object bench&lt;/h3>
&lt;p>Let’s say you have created a lot of objects manually and want to reuse them. To save the state of your Object Bench, first create a Test Class for an arbitrary class:
&lt;img src="../save_object_bench/image_2.png" alt="">&lt;/p></description></item><item><title>Datenschutzerklärung</title><link>https://bkleinen.github.io/contact/datenschutzerklaerung/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/contact/datenschutzerklaerung/</guid><description>&lt;p>Angepasst auf Basis der &lt;a href="https://www.htw-berlin.de/datenschutz/">Datenschutzerklärung der HTW-Berlin&lt;/a>&lt;/p>
&lt;h2 id="datenschutzerklärung">Datenschutzerklärung&lt;/h2>
&lt;p>Vielen Dank für Ihr Interesse an unserer Hochschule. Der Schutz Ihrer Daten ist uns ein wichtiges Anliegen. Deshalb verarbeiten wir die Daten, die Sie beim Besuch auf unseren Webseiten hinterlassen, nur nach den Vorgaben der relevanten datenschutzrechtlichen Bestimmungen, insbesondere der Datenschutzgrundverordnung und des Bundesdatenschutzgesetzes. An dieser Stelle möchten wir Sie über Art, Umfang und Zweck der Verarbeitung Ihrer personenbezogenen Daten informieren.
Verantwortlicher und Datenschutzbeauftragter&lt;/p></description></item><item><title>e-learning for 2/1/2024</title><link>https://bkleinen.github.io/classes/ws2024/info1/schedule/e-learning-newyear/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2024/info1/schedule/e-learning-newyear/</guid><description>&lt;ol>
&lt;li>Read up on Inheritance in the book - Chapter 10 mainly, we also already covered parts of Chapter 11&amp;amp;12.&lt;/li>
&lt;li>You may also or instead watch the videos for the respective chapters &lt;a href="../../resources#textbook-videos">linked from the resources page&lt;/a>.&lt;/li>
&lt;li>Practice and test your understanding of inheritance using the 
 
 
 
 
 &lt;a href="https://github.com/htw-imi-info1/chapter10-inheritance/tree/main/InheritancePlayground">InheritancePlayground&lt;/a>
 project.&lt;/li>
&lt;li>Work on &lt;a href="../../labs/exercise-10/">Lab10&lt;/a>. It is sufficient if you use the version in &lt;a href="https://github.com/htw-imi-info1/exercise09-zuul/tree/main/your-zuul-command-hierarchy">your-zuul-command-hierarchy&lt;/a>
Read the source code of &lt;code>Command.java&lt;/code> and it&amp;rsquo;s subclasses (Go, Help, Quit&amp;hellip;) to see how the command hierarchy cleans up the code by moving all commands to their respective small subclass of &lt;code>Command&lt;/code>. Study &lt;code>CommandWord.java&lt;/code> to see how the correct class is instantiated.&lt;/li>
&lt;li>If you missed the Refactoring Part for Lab09, make sure you also read Chapter 08 and do the refactoring of Rooms &amp;amp; their exits for Lab10.&lt;/li>
&lt;li>Provide a brief summary of what you did as lecture notes for 2/1/2024 in Moodle.&lt;/li>
&lt;/ol></description></item><item><title>e-learning for 2/1/2024</title><link>https://bkleinen.github.io/classes/ws2023/info1/schedule/e-learning-newyear/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2023/info1/schedule/e-learning-newyear/</guid><description>&lt;ol>
&lt;li>Read up on Inheritance in the book - Chapter 10 mainly, we also already covered parts of Chapter 11&amp;amp;12.&lt;/li>
&lt;li>You may also or instead watch the videos for the respective chapters &lt;a href="../../resources#textbook-videos">linked from the resources page&lt;/a>.&lt;/li>
&lt;li>Practice and test your understanding of inheritance using the 
 
 
 
 
 &lt;a href="https://github.com/htw-imi-info1/chapter10-inheritance/tree/main/InheritancePlayground">InheritancePlayground&lt;/a>
 project.&lt;/li>
&lt;li>Work on &lt;a href="../../labs/exercise-10/">Lab10&lt;/a>. It is sufficient if you use the version in &lt;a href="https://github.com/htw-imi-info1/exercise09-zuul/tree/main/your-zuul-command-hierarchy">your-zuul-command-hierarchy&lt;/a>
Read the source code of &lt;code>Command.java&lt;/code> and it&amp;rsquo;s subclasses (Go, Help, Quit&amp;hellip;) to see how the command hierarchy cleans up the code by moving all commands to their respective small subclass of &lt;code>Command&lt;/code>. Study &lt;code>CommandWord.java&lt;/code> to see how the correct class is instantiated.&lt;/li>
&lt;li>If you missed the Refactoring Part for Lab09, make sure you also read Chapter 08 and do the refactoring of Rooms &amp;amp; their exits for Lab10.&lt;/li>
&lt;li>Provide a brief summary of what you did as lecture notes for 2/1/2024 in Moodle.&lt;/li>
&lt;/ol></description></item><item><title>e-learning Preparaion</title><link>https://bkleinen.github.io/classes/ws2021/m-wt1-webapplications/sprint/preparation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/m-wt1-webapplications/sprint/preparation/</guid><description>&lt;p>WT1
E-learning für 19. Oct 2021&lt;/p>
&lt;p>Sie können diese Aufgaben alleine oder mit anderen gemeinsam bearbeiten. Wenn Sie die Aufgaben gemeinsam bearbeiten, beginnen Sie immer erst mit einer Phase, wo jede:r die Fragen für sich individuell beantwortet, dann tauschen Sie sich in der zweiten.Phase untereinander darüber aus, und notieren die Antworten anschliessend in der dritten Phase wieder für sich persönlich. Ich würde für jede der Phasen dann mit einer Timebox von 10 min beginnen, und dann ggfs. Nochmal um 5 verlängern.
Die Ergebnisse müssen Sie nicht abgeben, werden aber Input für den nächsten Termin sein, daher bitte (digital) mitbringen und die Hinweise zur Form beachten.&lt;/p></description></item><item><title>Example Project for Web Technology - Week 1</title><link>https://bkleinen.github.io/classes/ws2016/media-programming-rails/example-project/week-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/media-programming-rails/example-project/week-1/</guid><description>&lt;h1 id="week-1---first-steps-in-rails">Week 1 - First Steps in Rails&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/media-programming-rails/example-app">Example Project on GitHub&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="1-write-down-your-project-vision">1. Write down your project vision.&lt;/h2>
&lt;p>Example Project: Habits -
An application that supports their user building habits. They can enter habits
they want to build, together with a frequency how often they want to do this
new habit. The App then supports user in keeping track of their performance as
well as reminding them whan it&amp;rsquo;s time for the habit.&lt;/p></description></item><item><title>Example Project for Web Technology - Week 2</title><link>https://bkleinen.github.io/classes/ss2017/media-programming-rails/example-project/week-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/media-programming-rails/example-project/week-2/</guid><description>&lt;h1 id="week-2---active-record-associations-migrations-and-views">Week 2 - Active Record Associations, Migrations and Views&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/media-programming-rails/example-app">Example Project on GitHub&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="1-pick-a-story-that-requires-you-to-introduce-at-least-one-new-resource-to-your-project">1. Pick a story that requires you to introduce at least one new Resource to your Project.&lt;/h2>
&lt;p>I pick:&lt;/p>
&lt;ul>
&lt;li>When the user clicks on a habit, it can be edited. A log of dates when the habit was performed is shown.&lt;/li>
&lt;/ul>
&lt;p>This requires the Log to be stored in a separte entity, one LogEntry for each time
the Habit has been completed, connected with a belongs_to has_many (1:n) association.&lt;/p></description></item><item><title>Example Project for Web Technology - Week 2</title><link>https://bkleinen.github.io/classes/ws2016/media-programming-rails/example-project/week-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/media-programming-rails/example-project/week-2/</guid><description>&lt;h1 id="week-2---active-record-associations-migrations-and-views">Week 2 - Active Record Associations, Migrations and Views&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/media-programming-rails/example-app">Example Project on GitHub&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="1-pick-a-story-that-requires-you-to-introduce-at-least-one-new-resource-to-your-project">1. Pick a story that requires you to introduce at least one new Resource to your Project.&lt;/h2>
&lt;p>I pick:&lt;/p>
&lt;ul>
&lt;li>When the user clicks on a habit, it can be edited. A log of dates when the habit was performed is shown.&lt;/li>
&lt;/ul>
&lt;p>This requires the Log to be stored in a separte entity, one LogEntry for each time
the Habit has been completed, connected with a belongs_to has_many (1:n) association.&lt;/p></description></item><item><title>Example Project for Web Technology - Week 3</title><link>https://bkleinen.github.io/classes/ss2017/media-programming-rails/example-project/week-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/media-programming-rails/example-project/week-3/</guid><description>&lt;h1 id="week-3">Week 3&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/media-programming-rails/example-app">Example Project on GitHub&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="testing-setting-up-a-deployment-workflow-and-some-ruby">Testing, Setting up a Deployment Workflow, and some Ruby&lt;/h2>
&lt;h3 id="1-create-at-least-one-happy-path-feature-test-for-each-person-on-your-team-use-capybara">1. Create at least one happy-path feature test for each person on your team. Use Capybara.&lt;/h3>
&lt;p>I demonstrate this on the story&lt;/p>
&lt;ul>
&lt;li>A user kann log an habit as completed on that day by simply clicking on a button in the habit list.&lt;/li>
&lt;/ul>
&lt;p>Before I start working on that, I should clean up the generated tests and create some test data for the Habits.&lt;/p></description></item><item><title>Example Project for Web Technology - Week 3</title><link>https://bkleinen.github.io/classes/ws2016/media-programming-rails/example-project/week-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/media-programming-rails/example-project/week-3/</guid><description>&lt;h1 id="week-3">Week 3&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/media-programming-rails/example-app">Example Project on GitHub&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="testing-setting-up-a-deployment-workflow-and-some-ruby">Testing, Setting up a Deployment Workflow, and some Ruby&lt;/h2>
&lt;h3 id="1-create-at-least-one-happy-path-feature-test-for-each-person-on-your-team-use-capybara">1. Create at least one happy-path feature test for each person on your team. Use Capybara.&lt;/h3>
&lt;p>I demonstrate this on the story&lt;/p>
&lt;ul>
&lt;li>A user kann log an habit as completed on that day by simply clicking on a button in the habit list.&lt;/li>
&lt;/ul>
&lt;p>Before I start working on that, I should clean up the generated tests and create some test data for the Habits.&lt;/p></description></item><item><title>Example Project for Web Technology - Week 4</title><link>https://bkleinen.github.io/classes/ss2017/media-programming-rails/assignments/week-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/media-programming-rails/assignments/week-4/</guid><description>&lt;ul>
&lt;li>nothing here yet&lt;/li>
&lt;/ul></description></item><item><title>Example Project for Web Technology - Week 4</title><link>https://bkleinen.github.io/classes/ss2017/media-programming-rails/example-project/week-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/media-programming-rails/example-project/week-4/</guid><description>&lt;h1 id="week-4">Week 4&lt;/h1>
&lt;p>For this week, we&amp;rsquo;ll use another example project. I&amp;rsquo;ll introduce it in class, but have
a look at the readme to get an Idea what it is about:
&lt;a href="https://github.com/media-programming-rails/poller">Example Project for Week 4 on GitHub&lt;/a>&lt;/p>
&lt;h2 id="authentication">Authentication&lt;/h2>
&lt;h3 id="1-add-a-user-model-and-set-it-up-with-encrypted-password">1. Add a user model and set it up with encrypted password&lt;/h3>
&lt;p>If you don&amp;rsquo;t already have a user model, create one:&lt;/p>
&lt;pre>&lt;code>rails g scaffold User name:string password:digest
&lt;/code>&lt;/pre>
&lt;p>if you already have a user model (it may have another name), make sure it has a field for password. If needed, create a migration to add the password to your user model.&lt;/p></description></item><item><title>Example Project for Web Technology - Week 4</title><link>https://bkleinen.github.io/classes/ws2016/media-programming-rails/example-project/week-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/media-programming-rails/example-project/week-4/</guid><description>&lt;h1 id="week-4">Week 4&lt;/h1>
&lt;p>For this week, we&amp;rsquo;ll use another example project. I&amp;rsquo;ll introduce it in class, but have
a look at the readme to get an Idea what it is about:
&lt;a href="https://github.com/media-programming-rails/poller">Example Project for Week 4 on GitHub&lt;/a>&lt;/p>
&lt;h2 id="authentication">Authentication&lt;/h2>
&lt;h3 id="1-add-a-user-model-and-set-it-up-with-encrypted-password">1. Add a user model and set it up with encrypted password&lt;/h3>
&lt;p>If you don&amp;rsquo;t already have a user model, create one:&lt;/p>
&lt;pre>&lt;code>rails g scaffold User name:string password:digest
&lt;/code>&lt;/pre>
&lt;p>if you already have a user model (it may have another name), make sure it has a field for password. If needed, create a migration to add the password to your user model.&lt;/p></description></item><item><title>Example Project for Web Technology - Week 5</title><link>https://bkleinen.github.io/classes/ss2017/media-programming-rails/assignments/week-5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/media-programming-rails/assignments/week-5/</guid><description>&lt;ul>
&lt;li>nothing here yet&lt;/li>
&lt;/ul></description></item><item><title>Example Project for Web Technology - Week 5</title><link>https://bkleinen.github.io/classes/ss2017/media-programming-rails/example-project/week-5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/media-programming-rails/example-project/week-5/</guid><description>&lt;h1 id="week-5">Week 5&lt;/h1>
&lt;p>Example Project for this week:
&lt;a href="https://github.com/media-programming-rails/notebook">Example Project for Week 5 on GitHub: Notebook&lt;/a>&lt;/p>
&lt;p>It&amp;rsquo;s just an app with one resource, Note, which has one attribute, content.&lt;/p>
&lt;p>I used JavaScript to add Notes on the notes#index page without reloading the page,
following the example &lt;a href="https://guides.rubyonrails.org/working_with_javascript_in_rails.html#a-simple-example">&amp;ldquo;A Simple Example&amp;rdquo; in the Rails Guides on AJAX&lt;/a>.&lt;/p>
&lt;p>&lt;a href="https://github.com/media-programming-rails/notebook/commit/0318b1f97abd8f3cf8314c59372243dba6e5ba93">This is the commit&lt;/a> where I added the changes described in the tutorial.&lt;/p></description></item><item><title>Example Project for Web Technology - Week 5</title><link>https://bkleinen.github.io/classes/ws2016/media-programming-rails/example-project/week-5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/media-programming-rails/example-project/week-5/</guid><description>&lt;h1 id="week-5">Week 5&lt;/h1>
&lt;p>Example Project for this week:
&lt;a href="https://github.com/media-programming-rails/notebook">Example Project for Week 5 on GitHub: Notebook&lt;/a>&lt;/p>
&lt;p>It&amp;rsquo;s just an app with one resource, Note, which has one attribute, content.&lt;/p>
&lt;p>I used JavaScript to add Notes on the notes#index page without reloading the page,
following the example &lt;a href="https://guides.rubyonrails.org/working_with_javascript_in_rails.html#a-simple-example">&amp;ldquo;A Simple Example&amp;rdquo; in the Rails Guides on AJAX&lt;/a>.&lt;/p>
&lt;p>&lt;a href="https://github.com/media-programming-rails/notebook/commit/0318b1f97abd8f3cf8314c59372243dba6e5ba93">This is the commit&lt;/a> where I added the changes described in the tutorial.&lt;/p></description></item><item><title>Exercise 00: Lab Startup</title><link>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-00/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-00/</guid><description>&lt;p>This page contains instructions on how you can prepare for the Info1 labs, that is, opening source code in greenfoot (or bluej) and uploading reports to moodle.&lt;/p>
&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>Welcome to the laboratory - that&amp;rsquo;s what we call these rooms filled with computer equipment. We have lots of rules for the labs, as they are used by many different people during the week. You find a link to the rules (&amp;ldquo;Laborordnung&amp;rdquo;) &lt;a href="https://imi-bachelor.htw-berlin.de/studium/labore/">here&lt;/a>.&lt;/p></description></item><item><title>Exercise 00: Lab Startup</title><link>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-00/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-00/</guid><description>&lt;p>Source code for this exercise: 
 
 
 
 
 &lt;a href="https://github.com/htw-imi-info1/kara">https://github.com/htw-imi-info1/kara&lt;/a>
&lt;/p>
&lt;p>Welcome to the laboratory - that&amp;rsquo;s what we call these rooms filled with computer equipment. We have lots of rules for the labs, as they are used by many different people during the week. You find a link to the rules (&amp;ldquo;Laborordnung&amp;rdquo;) &lt;a href="https://imi-bachelor.htw-berlin.de/studium/labore/">here&lt;/a>.&lt;/p>
&lt;p>Two really important rules are:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>No food.&lt;/strong> We don&amp;rsquo;t like crumbs in the keyboards. Drinks are okay if they are in a container with a screw-on lid and the lid is screwed on. No coffee cups! They get knocked over and we have to get new machines.&lt;/li>
&lt;li>&lt;strong>Don&amp;rsquo;t change the configuration.&lt;/strong> We don&amp;rsquo;t care if you have spent half your life &amp;ldquo;optimizing&amp;rdquo; computers. We have them set up this way because that is the way we do it. It&amp;rsquo;s ok to use your own laptop in the lab, we&amp;rsquo;ve provided extra VGA cables and Power Plugs to connect them.&lt;/li>
&lt;/ul>
&lt;p>If something goes wrong, don&amp;rsquo;t panic. Speak with the lab leader or the lab engineer.&lt;/p></description></item><item><title>Exercise 00: Lab Startup</title><link>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-00/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-00/</guid><description>&lt;p>This page contains instructions on how you can prepare for the Info1 labs, that is, opening source code in greenfoot (or bluej) and uploading reports to moodle.&lt;/p>
&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>Welcome to the laboratory - that&amp;rsquo;s what we call these rooms filled with computer equipment. We have lots of rules for the labs, as they are used by many different people during the week. You find a link to the rules (&amp;ldquo;Laborordnung&amp;rdquo;) &lt;a href="https://imi-bachelor.htw-berlin.de/studium/labore/">here&lt;/a>.&lt;/p></description></item><item><title>Exercise 01 - Case Studies of Ethical Questions</title><link>https://bkleinen.github.io/classes/ws2015/info3/labs/lab-01-casestudies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info3/labs/lab-01-casestudies/</guid><description>&lt;p>The German &amp;lsquo;&amp;lsquo;Gesellschaft für Informatik&amp;rsquo;&amp;rsquo; published Ethical Guidelines
in 1994 that were updated in 2004. They are available online at
&lt;a href="https://fg-ie.gi.de/ethische-leitlinien.html">https://fg-ie.gi.de/ethische-leitlinien.html&lt;/a>.&lt;/p>
&lt;p>We will first have a closer look at the Ethical Guidelines, and then
in groups of 3-4 persons you will choose one of the scenarios to
read, discuss, and present to the class. Every member of the group
will submit their own PDF version with a reflection on the scenario
and how the Ethical Guidelines apply to this case. These are not
group work, but will be done individually and submitted to the
Moodle area.&lt;/p></description></item><item><title>Exercise 01 - Case Studies of Ethical Questions</title><link>https://bkleinen.github.io/classes/ws2017/info3/labs/lab-01-casestudies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/info3/labs/lab-01-casestudies/</guid><description>&lt;p>The German &amp;lsquo;&amp;lsquo;Gesellschaft für Informatik&amp;rsquo;&amp;rsquo; published Ethical Guidelines
in 1994 that were updated in 2004. They are available online at
&lt;a href="https://fg-ie.gi.de/ethische-leitlinien.html">https://fg-ie.gi.de/ethische-leitlinien.html&lt;/a>.&lt;/p>
&lt;p>We will first have a closer look at the Ethical Guidelines, and then
in groups of 3-4 persons you will choose one of the scenarios to
read, discuss, and present to the class. Every member of the group
will submit their own PDF version with a reflection on the scenario
and how the Ethical Guidelines apply to this case. These are not
group work, but will be done individually and submitted to the
Moodle area.&lt;/p></description></item><item><title>Exercise 01 - Case Studies of Ethical Questions</title><link>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-01-casestudies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-01-casestudies/</guid><description>&lt;p>The German &amp;lsquo;&amp;lsquo;Gesellschaft für Informatik&amp;rsquo;&amp;rsquo; published Ethical Guidelines
in 1994 that were updated in 2004. They are available online at
&lt;a href="https://fg-ie.gi.de/ethische-leitlinien.html">https://fg-ie.gi.de/ethische-leitlinien.html&lt;/a>.&lt;/p>
&lt;p>We will first have a closer look at the Ethical Guidelines, and then
in groups of 3-4 persons you will choose one of the scenarios to
read, discuss, and present to the class. Every member of the group
will submit their own PDF version with a reflection on the scenario
and how the Ethical Guidelines apply to this case. These are not
group work, but will be done individually and submitted to the
Moodle area.&lt;/p></description></item><item><title>Exercise 01 - Installation Instructions</title><link>https://bkleinen.github.io/classes/ws2014/info3/labs/lab-01-startup-installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info3/labs/lab-01-startup-installation/</guid><description>&lt;p>(These are detailled instructions for the installation part of the &lt;a href="../lab-01-startup">Info 3 Startup Lab&lt;/a> ).&lt;/p>
&lt;h2 id="note-on-eclipse-06oct2014">Note on Eclipse, 06/Oct/2014&lt;/h2>
&lt;p>&lt;a href="https://imi-bachelor.htw-berlin.de/studium/labore/hinweise//#c36938">startup bug on Mavericks&lt;/a>&lt;/p>
&lt;h2 id="which-computer-to-use">Which Computer to use?&lt;/h2>
&lt;p>As most of your colleagues in the former semesters completely ignored the new &lt;a href="https://imi-bachelor.htw-berlin.de/studium/labore/web-technology/">iMacs in our Web Technology lab&lt;/a> and rather unfolded tiny notebooks in front of the 27&amp;rsquo;&amp;rsquo; screens (which unfortunatley even cannot be used as an external monitor), I expect that you will also mainly use your personal computers for working on the exercises. If doing so, you need to make sure to have a set of software available.&lt;/p></description></item><item><title>Exercise 01 - Installation Instructions</title><link>https://bkleinen.github.io/classes/ws2015/info3/labs/lab-01-startup-installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info3/labs/lab-01-startup-installation/</guid><description>&lt;p>(These are detailled instructions for the installation part of the &lt;a href="../lab-01-startup">Info 3 Startup Lab&lt;/a>).&lt;/p>
&lt;h2 id="note-on-eclipse-06oct2014">Note on Eclipse, 06/Oct/2014&lt;/h2>
&lt;p>&lt;a href="https://imi-bachelor.htw-berlin.de/studium/labore/hinweise//#c36938">startup bug on Mavericks&lt;/a>&lt;/p>
&lt;h2 id="which-computer-to-use">Which Computer to use?&lt;/h2>
&lt;p>As most of your colleagues in the former semesters completely ignored the new &lt;a href="https://imi-bachelor.htw-berlin.de/studium/labore/web-technology/">iMacs in our Web Technology lab&lt;/a> and rather unfolded tiny notebooks in front of the 27&amp;rsquo;&amp;rsquo; screens (which unfortunatley even cannot be used as an external monitor), I expect that you will also mainly use your personal computers for working on the exercises. If doing so, you need to make sure to have a set of software available.&lt;/p></description></item><item><title>Exercise 01 - Installation Instructions</title><link>https://bkleinen.github.io/classes/ws2017/info3/labs/lab-01-startup-installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/info3/labs/lab-01-startup-installation/</guid><description>&lt;p>(These are detailled instructions for the installation part of the &lt;a href="../lab-01-startup">Info 3 Startup Lab&lt;/a>).&lt;/p>
&lt;h2 id="which-computer-to-use">Which Computer to use?&lt;/h2>
&lt;p>As most of your colleagues in the former semesters completely ignored the new &lt;a href="https://imi-bachelor.htw-berlin.de/studium/labore/web-technology/">iMacs in our Web Technology lab&lt;/a> and rather unfolded tiny notebooks in front of the 27&amp;rsquo;&amp;rsquo; screens (which unfortunatley even cannot be used as an external monitor), I expect that you will also mainly use your personal computers for working on the exercises. If doing so, you need to make sure to have a set of software available.&lt;/p></description></item><item><title>Exercise 01 - Installation Instructions</title><link>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-01-startup-installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-01-startup-installation/</guid><description>&lt;p>(These are detailled instructions for the installation part of the &lt;a href="../lab-01-startup">Info 3 Startup Lab&lt;/a>).&lt;/p>
&lt;h2 id="which-computer-to-use">Which Computer to use?&lt;/h2>
&lt;p>As most of your colleagues in the former semesters completely ignored the new &lt;a href="https://imi-bachelor.htw-berlin.de/studium/labore/web-technology/">iMacs in our Web Technology lab&lt;/a> and rather unfolded tiny notebooks in front of the 27&amp;rsquo;&amp;rsquo; screens (which unfortunatley even cannot be used as an external monitor), I expect that you will also mainly use your personal computers for working on the exercises. If doing so, you need to make sure to have a set of software available.&lt;/p></description></item><item><title>Exercise 01 - Lab Startup and JavaScript Finger Exercises</title><link>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-01-startup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/info3/labs/lab-01-startup/</guid><description>&lt;p>&lt;img src="../images/workplace.jpg" alt="Workplace" title="pumpkins">
&lt;!-- raw HTML omitted -->Nerd Workplace. Foto by &lt;a href="https://www.flickr.com/photos/slworking/8539204081/">slworking2&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="pre-lab-do-this-before-the-lab">Pre-Lab (Do this BEFORE the lab)&lt;/h2>
&lt;h3 id="1-prepare-your-work-environment">1. Prepare your work environment&lt;/h3>
&lt;p>The labs will be taught remote. You can either&lt;/p>
&lt;ul>
&lt;li>work on the &lt;a href="https://imi-bachelor.htw-berlin.de/studium/labore/hinweise/entfernter-zugriff-auf-labor-pcs-ueber-vpn-und-remote-desktop/">lab computers from remote&lt;/a> (make sure to chose the lab that is given on your schedule)&lt;/li>
&lt;li>or just work on your own computer.&lt;/li>
&lt;/ul>
&lt;p>If you decide to work on your own computer:&lt;/p>
&lt;ul>
&lt;li>[optional] &lt;strong>I recomment you work on a Linux or MacOS System&lt;/strong>. From my experience, &lt;a href="https://www.groovypost.com/howto/dual-boot-windows-10-linux/">setting up Dual Boot Windows/Linux&lt;/a> is less troublesome than trying to manage Node.js on Windows. All my instructions will be taylored to Linux and will probably work on MacOS. So if you haven&amp;rsquo;t already, now is the time to get Linux :)&lt;/li>
&lt;li>Install and set up git (You will use git to hand in code - you will be added to the Info3 group when you get added on Moodle). You don&amp;rsquo;t need a Git GUI, you can use it via the command line or git bash.&lt;/li>
&lt;li>Install the &lt;a href="https://github.com/nvm-sh/nvm/blob/master/README.md#installing-and-updating">Node Version Manager&lt;/a> (nvm). &lt;a href="https://www.cyberithub.com/install-nvm-for-node-js/">This installation guide (for Ubuntu)&lt;/a> can help. We&amp;rsquo;ll use Node.js so we can program JavaScript command line applications and don&amp;rsquo;t need to use a browser console or even a front end (for now).&lt;/li>
&lt;li>Install Node.js using nvm: &lt;code>nvm install node&lt;/code>. Verify you installed version 14.6.0 or higher &lt;a href="https://node.green/">for compatibility reasons&lt;/a>: &lt;code>node --version&lt;/code>.&lt;/li>
&lt;li>The &lt;a href="https://docs.npmjs.com/">Node Package Manager&lt;/a> (npm) comes with Node.js, so no need to install it separately. We will use npm to manage libraries we use for Node.js&lt;/li>
&lt;li>Install and set up a code editor suitable for JavaScript. I recommend &lt;a href="https://atom.io">Atom&lt;/a>. &lt;a href="https://wiki.ubuntuusers.de/Atom/">This guide&lt;/a> can help you with the installation.&lt;/li>
&lt;/ul>
&lt;h3 id="2-prepare-some-more">2. Prepare some more&amp;hellip;&lt;/h3>
&lt;ul>
&lt;li>Sign in to &lt;a href="https://gl-imi.f4.htw-berlin.de">the IMI GitLab&lt;/a> and give yourself a name with which I can recognize you (something else than your Matrikelnummer! A nickname is enough.)&lt;/li>
&lt;li>Find a team of three and sign up for it using Moodle. I&amp;rsquo;ll not accept work that has not been done in a group.&lt;/li>
&lt;/ul>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>In this assignment you will program a &amp;ldquo;Hobby Matcher&amp;rdquo;. &amp;ldquo;Hobby Matcher&amp;rdquo; should help people find other people with the same hobbies. Prof. Kleinen already thought of two &lt;a href="https://en.wikipedia.org/wiki/User_story">user stories&lt;/a>.&lt;/p></description></item><item><title>Exercise 01 - Lab Startup and Ruby Finger Exercises</title><link>https://bkleinen.github.io/classes/ws2014/info3/labs/lab-01-startup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info3/labs/lab-01-startup/</guid><description>&lt;p>&lt;img src="../images/workplace.jpg" alt="Workplace" title="pumpkins">
&lt;!-- raw HTML omitted -->Nerd Workplace. Foto by &lt;a href="https://www.flickr.com/photos/slworking/8539204081/">slworking2&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="prelab">PreLab&lt;/h2>
&lt;ul>
&lt;li>if you plan on using your own computer in the lab, make sure that you do the installation of at least ruby and a decent editor &lt;strong>before coming to lab&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h1 id="part-1-setting-up-your-environment">Part 1: Setting up your environment&lt;/h1>
&lt;p>Make sure that you have&lt;/p>
&lt;ul>
&lt;li>ruby,&lt;/li>
&lt;li>rails,&lt;/li>
&lt;li>git,&lt;/li>
&lt;li>a decent text editor&lt;/li>
&lt;/ul>
&lt;p>installed on the computer you intend to use (or know how to run all these on the lab machines).&lt;/p></description></item><item><title>Exercise 01 - Lab Startup and Ruby Finger Exercises</title><link>https://bkleinen.github.io/classes/ws2015/info3/labs/lab-01-startup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info3/labs/lab-01-startup/</guid><description>&lt;p>&lt;img src="../images/workplace.jpg" alt="Workplace" title="pumpkins">
&lt;!-- raw HTML omitted -->Nerd Workplace. Foto by &lt;a href="https://www.flickr.com/photos/slworking/8539204081/">slworking2&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="prelab">PreLab&lt;/h2>
&lt;ul>
&lt;li>if you plan on using your own computer in the lab, make sure that you do the installation of at least ruby and a decent editor &lt;strong>before coming to lab&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h1 id="part-1-setting-up-your-environment">Part 1: Setting up your environment&lt;/h1>
&lt;p>Make sure that you have&lt;/p>
&lt;ul>
&lt;li>ruby,&lt;/li>
&lt;li>rails,&lt;/li>
&lt;li>git,&lt;/li>
&lt;li>a decent text editor&lt;/li>
&lt;/ul>
&lt;p>installed on the computer you intend to use (or know how to run all these on the lab machines).&lt;/p></description></item><item><title>Exercise 01 - Lab Startup and Ruby Finger Exercises</title><link>https://bkleinen.github.io/classes/ws2017/info3/labs/lab-01-startup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/info3/labs/lab-01-startup/</guid><description>&lt;p>&lt;img src="../images/workplace.jpg" alt="Workplace" title="pumpkins">
&lt;!-- raw HTML omitted -->Nerd Workplace. Foto by &lt;a href="https://www.flickr.com/photos/slworking/8539204081/">slworking2&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="prelab">PreLab&lt;/h2>
&lt;ul>
&lt;li>if you plan on using your own computer in the lab, you should do the software installation of at least ruby and a decent editor &lt;strong>before coming to lab&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h1 id="part-1-setting-up-your-environment">Part 1: Setting up your environment&lt;/h1>
&lt;p>Make sure that you have&lt;/p>
&lt;ul>
&lt;li>ruby,&lt;/li>
&lt;li>rails,&lt;/li>
&lt;li>git,&lt;/li>
&lt;li>a decent text editor&lt;/li>
&lt;/ul>
&lt;p>installed on the computer you intend to use (or know how to run all these on the lab machines).&lt;/p></description></item><item><title>Exercise 01: Getting Started and Shapes</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-01/</guid><description>&lt;p>Welcome to the laboratory - that&amp;rsquo;s what we call these rooms filled with computer equipment. Each computer is a so-called dual-boot computer that can boot to Windows or Ubuntu Linux. As computer science students we expect you to be able to deal with Windows, Unix, and Mac OS operating systems.&lt;/p>
&lt;p>We have lots of rules for the labs, as they are used by many different people during the week. Usually we&amp;rsquo;re in one of three available labs, you find an overview of them including a link to the rules (&amp;ldquo;Laborordnung&amp;rdquo;) &lt;a href="https://imi-bachelor.htw-berlin.de/studium/labore/">here&lt;/a>.&lt;/p></description></item><item><title>Exercise 01: Getting Started and Shapes</title><link>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-01/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;strong>Preparation&lt;/strong> Download and install BlueJ 5 as described on the BlueJ page: &lt;a href="https://bluej.org">https://bluej.org&lt;/a>.&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong> Which primitive data types are there in Java? Record where you found this information.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What are the types of the following values (constants)?&lt;/p>
&lt;ul>
&lt;li>0&lt;/li>
&lt;li>&amp;ldquo;hello&amp;rdquo;&lt;/li>
&lt;li>101&lt;/li>
&lt;li>-1&lt;/li>
&lt;li>true&lt;/li>
&lt;li>&amp;ldquo;true&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;33&amp;rdquo;&lt;/li>
&lt;li>&amp;lsquo;3&amp;rsquo;&lt;/li>
&lt;li>3.1415&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>P3.&lt;/strong> Pick up a book - you should have at least one at home. Is this book an object or a class? If it is a class, name some objects. If it is an object, name the class. Give your reasoning.&lt;/p></description></item><item><title>Exercise 01: Git and Markdown with a Practical Application</title><link>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-01/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ul>
&lt;li>Sign up on &lt;a href="https://github.com/">GitHub&lt;/a> if you haven&amp;rsquo;t already done so.&lt;/li>
&lt;li>Github translates markdown files automatically to HTML - That&amp;rsquo;s how the README.md files you see in most repositories work. Read through the &lt;a href="https://help.github.com/articles/github-flavored-markdown">GitHub Flavored Markdown&lt;/a> documentation.&lt;/li>
&lt;/ul>
&lt;p>This exercise is for getting aquaintained with git and github (and markdown) with the practical application of creating online notes collaboratively. This gives you the opportunity to practice using git and github collaboration features with a bunch of plain text files before moving on to managing heaps of source code.&lt;/p></description></item><item><title>Exercise 01: Programming Kara</title><link>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-01/</guid><description>&lt;p>Source code for this exercise: 
 
 
 
 
 &lt;a href="https://github.com/htw-imi-info1/exercise01-kara">https://github.com/htw-imi-info1/exercise01-kara&lt;/a>
&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="https://github.com/htw-imi-info1/exercise01-kara">Download the Scenarios&lt;/a> and read through the Kara programming exercises in the assignment.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Write down how Kara could solve the task for each one of them. For example, if the programming exercise was Exercise 4 from &lt;a href="../../material/info1-02-worksheet-kara-1.pdf">Worksheet 1&lt;/a>, where Kara was to move in a Square and drop a leaf in each corner, you could write down something as this:&lt;/p>
&lt;pre>&lt;code>1. walk one edge (call move n times),
2. drop a leaf
3. turn right
4. repeat 4 times from step 1
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Make use of Greenfoots act()-loop - split the problem into repeating steps, and the position that Kara should be in after this step. In the example above, each call to the act() method should make kara walk one side, having her face in the direction of the next side at the end of each step.&lt;/p></description></item><item><title>Exercise 01: Programming Kara</title><link>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-01/</guid><description>&lt;h1 id="pre-lab">Pre-Lab&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="https://github.com/htw-imi-info1/kara-exercise01">Download the Scenario&lt;/a> and read through the Kara programming exercises in the assignment.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Write down how Kara could solve the task for each one of them. For example, if the programming exercise was Exercise 4 from Worksheet 1, where Kara was to move in a Square and drop a leaf in each corner, you could write down something as this:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>walk one edge (call move n times),&lt;/p>
&lt;/li>
&lt;li>
&lt;p>drop a leaf&lt;/p></description></item><item><title>Exercise 01: Programming Kara</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-01/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://github.com/htw-imi-info1/kara-exercise01">Download the Scenario&lt;/a> and read through the Kara programming exercises in the assignment.&lt;/li>
&lt;li>Write down how Kara could solve the task for each one of them. For example, if the programming exercise was Exercise 4 from Worksheet 1, where Kara was to move in a Square and drop a leaf in each corner, you could write down something as this:
1. walk one edge (call move n times),
2. drop a leaf
3. turn right
4. repeat that 4 times&lt;/li>
&lt;li>Don’t worry if you don’t know yet how to really program Kara to solve the problems, we will learn new things in the lecture that will help you to do so! Just try to think of a way Kara could solve them knowing the methods Kara has, and write down a solution with your own words or draw a diagram.&lt;/li>
&lt;li>When designing the algorithms, think of useful methods that help you/make your tasks easier and name them/use them in your algorithm description.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>&lt;a href="https://github.com/htw-imi-info1/kara-exercise01">Download the scenario for these exercises&lt;/a> if you haven&amp;rsquo;t already done so for the prelab. It contains a KaraWorld and a Kara for each programming task. Solve all Programming Exercises using this scenario, and upload the whole scenario as a zip file. For all problems, make sure to extract methods where appropriate to make the source code more readable.&lt;/p></description></item><item><title>Exercise 01: Programming Kara</title><link>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-01/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://github.com/htw-imi-info1/exercise01-kara">Download the Scenarios&lt;/a> and read through the Kara programming exercises in the assignment.&lt;/li>
&lt;li>Write down how Kara could solve the task for each one of them. For example, if the programming exercise was Exercise 4 from Worksheet 1, where Kara was to move in a Square and drop a leaf in each corner, you could write down something as this:
1. walk one edge (call move n times),
2. drop a leaf
3. turn right
4. repeat that 4 times&lt;/li>
&lt;li>Don’t worry if you don’t know yet how to really program Kara to solve the problems, we will learn new things in the lecture that will help you to do so! Just try to think of a way Kara could solve them knowing the methods Kara has, and write down a solution with your own words or draw a diagram.&lt;/li>
&lt;li>When designing the algorithms, think of useful methods that help you/make your tasks easier and name them/use them in your algorithm description.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>&lt;a href="https://github.com/htw-imi-info1/exercise01-kara">Download the scenario for these exercises&lt;/a> if you haven&amp;rsquo;t already done so for the prelab. It contains a KaraWorld and a Kara for each programming task. Solve all Programming Exercises using this scenario, and upload the whole scenario as a zip file. For all problems, make sure to extract methods where appropriate to make the source code more readable.&lt;/p></description></item><item><title>Exercise 01: Programming Kara</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-01/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="https://github.com/htw-imi-info1/exercise01-kara">Download the Scenarios&lt;/a> and read through the Kara programming exercises in the assignment.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Write down how Kara could solve the task for each one of them. For example, if the programming exercise was Exercise 4 from &lt;a href="../material/info1-02-worksheet-kara1.pdf">Worksheet 1&lt;/a>, where Kara was to move in a Square and drop a leaf in each corner, you could write down something as this:&lt;/p>
&lt;pre>&lt;code>1. walk one edge (call move n times),
2. drop a leaf
3. turn right
4. repeat 4 times from step 1
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Make use of Greenfoots act()-loop - split the problem into repeating steps, and the position that Kara should be in after this step. In the example above, each call to the act() method should make kara walk one side, having her face in the direction of the next side at the end of each step.&lt;/p></description></item><item><title>Exercise 01: Programming Kara</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-01/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="https://github.com/htw-imi-info1/exercise01-kara">Download the Scenarios&lt;/a> and read through the Kara programming exercises in the assignment.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Write down how Kara could solve the task for each one of them. For example, if the programming exercise was Exercise 4 from &lt;a href="../../material/info1-02-worksheet-kara-1.pdf">Worksheet 1&lt;/a>, where Kara was to move in a Square and drop a leaf in each corner, you could write down something as this:&lt;/p>
&lt;pre>&lt;code>1. walk one edge (call move n times),
2. drop a leaf
3. turn right
4. repeat 4 times from step 1
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Make use of Greenfoots act()-loop - split the problem into repeating steps, and the position that Kara should be in after this step. In the example above, each call to the act() method should make kara walk one side, having her face in the direction of the next side at the end of each step.&lt;/p></description></item><item><title>Exercise 01: Programming Kara - Advanced</title><link>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-01-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-01-b/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://github.com/htw-imi-info1/exercise01-kara">Download the Scenarios&lt;/a> and read through the Kara programming exercises in the assignment.&lt;/li>
&lt;li>Write down how Kara could solve the task for each one of them. For example, if the programming exercise was Exercise 4 from Worksheet 1, where Kara was to move in a Square and drop a leaf in each corner, you could write down something as this:
1. walk one edge (call move n times),
2. drop a leaf
3. turn right
4. repeat that 4 times&lt;/li>
&lt;li>Don’t worry if you don’t know yet how to really program Kara to solve the problems, we will learn new things in the lecture that will help you to do so! Just try to think of a way Kara could solve them knowing the methods Kara has, and write down a solution with your own words or draw a diagram.&lt;/li>
&lt;li>When designing the algorithms, think of useful methods that help you/make your tasks easier and name them/use them in your algorithm description.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>&lt;a href="https://github.com/htw-imi-info1/exercise01-kara">Download the scenario for these exercises&lt;/a> if you haven&amp;rsquo;t already done so for the prelab. It contains a KaraWorld and a Kara for each programming task. Solve all Programming Exercises using this scenario, and upload the whole scenario as a zip file. For all problems, make sure to extract methods where appropriate to make the source code more readable.&lt;/p></description></item><item><title>Exercise 01: Programming Kara - First Steps</title><link>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-01-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-01-a/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://github.com/htw-imi-info1/kara">Download the Kara Scenarios&lt;/a> from github: use the &amp;ldquo;Download ZIP&amp;rdquo; button in the lower right corner if you&amp;rsquo;re not familiar with git and github or use &lt;a href="https://github.com/htw-imi-info1/kara/archive/ws2015.zip">this direct link&lt;/a>. You will use the scenarios 01-01 through 01-08 for this lab.&lt;/li>
&lt;li>Read through &lt;a href="../material/info1-02-worksheet-kara1.pdf">Worksheet 1&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>We&amp;rsquo;ve already started working on Worksheet 1 in class. Remember to have a logbook as in the previous exercise:
Note down the steps you&amp;rsquo;ve taken, including those that failed. Read through the whole assignment first, before starting to work.&lt;/p></description></item><item><title>Exercise 01: Sending Messages to Objects</title><link>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-01/</guid><description>&lt;pre class="mermaid">
sequenceDiagram
 actor You
 create Participant Picture
 You->>+Picture:new()
 You->>+Picture:draw()
 create Participant Circle
 Picture->>+Circle: new()
 Circle-->>-Picture:circle
 Picture->>+Circle: makeVisible()
 Circle-->>-Picture:void
 Picture-->>-You:void
 
&lt;/pre>

&lt;p>This week&amp;rsquo;s lab is all about exploring given Objects by sending them messages (aka in Java: calling methods) -
and writing your first programs by putting them together in your own methods.&lt;/p>
&lt;h2 id="what-to-bring-to-lab">What to bring to lab&lt;/h2>
&lt;p>&lt;strong>P1.&lt;/strong> In the lecture we have talked about data types called int and String. Java has more predefined primitive data types. What are they? Record where you found this information.&lt;/p></description></item><item><title>Exercise 01: Sending Messages to Objects</title><link>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-01/</guid><description>&lt;pre class="mermaid">
sequenceDiagram
 actor You
 create Participant Picture
 You->>+Picture:new()
 You->>+Picture:draw()
 create Participant Circle
 Picture->>+Circle: new()
 Circle-->>-Picture:circle
 Picture->>+Circle: makeVisible()
 Circle-->>-Picture:void
 Picture-->>-You:void
 
&lt;/pre>

&lt;p>This week&amp;rsquo;s lab is all about exploring given Objects by sending them messages (aka in Java: calling methods) -
and writing your first programs by putting them together in your own methods.&lt;/p>
&lt;h2 id="what-to-bring-to-lab">What to bring to lab&lt;/h2>
&lt;p>&lt;strong>P1.&lt;/strong> In the lecture we have talked about data types called int and String. Java has more predefined primitive data types. What are they? Record where you found this information.&lt;/p></description></item><item><title>Exercise 02 - Use Cases and Scenarios</title><link>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-02/</guid><description>&lt;p>In this exercise you will develop detailed Scenarios for Use Cases for an application called &amp;ldquo;HTW&amp;rdquo; - Halloween Treats Worldwide.&lt;/p>
&lt;p>First, have a look at the description of the system:&lt;/p>
&lt;hr>
&lt;h2 id="halloween-treats-worldwide">Halloween Treats Worldwide&lt;/h2>
&lt;p>&lt;img src="../../images/pumpkins-wide.jpg" alt="Pumpkins" title="pumpkins">
Foto by &lt;a href="https://www.flickr.com/photos/pedroferrer/3615212504">Pedro J. Ferreira&lt;/a>&lt;/p>
&lt;p>Halloween Treats Worldwide (HTW) is planned to be an online-shop where people can buy original Halloween Treats. The product manager has asked you to design and develop the platform for their business.&lt;/p></description></item><item><title>Exercise 02: Shapes and TicketMachine</title><link>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-02/</guid><description>&lt;h1 id="exercise-02-shapes-and-ticketmachine">Exercise 02: Shapes and TicketMachine&lt;/h1>
&lt;!-- raw HTML omitted -->
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>**Shapes **&lt;/p>
&lt;p>Download the &lt;a href="https://github.com/htw-imi-info1/exercise02-ws2016">exercise source code from GitHub&lt;/a> (you can download the whole &lt;a href="https://github.com/htw-imi-info1/exercise02-ws2016/zipball/master">exercise02 repository as a zip here&lt;/a>) and open up the &lt;strong>Figures&lt;/strong> project.&lt;/p></description></item><item><title>Exercise 02: Shapes and TicketMachine</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-02/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended to acquaint you with the BlueJ environment.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong> In the lecture we have talked about data types called int and String. Java has more predefined primitive data types. What are they? Record where you found this information.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What are the types of the following values (constants)?&lt;/p></description></item><item><title>Exercise 02: Shapes and TicketMachine</title><link>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-02-full/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-02-full/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended to acquaint you with the BlueJ environment.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong> In the lecture we have talked about data types called int and String. Java has more predefined primitive data types. What are they? Record where you found this information.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What are the types of the following values (constants)?&lt;/p></description></item><item><title>Exercise 02: Shapes and TicketMachine</title><link>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-02/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended to acquaint you with the BlueJ environment.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong> In the lecture we have talked about data types called int and String. Java has more predefined primitive data types. What are they? Record where you found this information.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What are the types of the following values (constants)?&lt;/p></description></item><item><title>Exercise 02: Shapes and TicketMachine</title><link>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-02-full/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-02-full/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended to acquaint you with the BlueJ environment.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong> In the lecture we have talked about data types called int and String. Java has more predefined primitive data types. What are they? Record where you found this information.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What are the types of the following values (constants)?&lt;/p></description></item><item><title>Exercise 02: Shapes and TicketMachine</title><link>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-02/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended to acquaint you with the BlueJ environment.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong> In the lecture we have talked about data types called int and String. Java has more predefined primitive data types. What are they? Record where you found this information.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What are the types of the following values (constants)?&lt;/p></description></item><item><title>Exercise 02: Shapes and TicketMachine</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-02/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended to acquaint you with the BlueJ environment.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong> In the lecture we have talked about data types called int and String. Java has more predefined primitive data types. What are they? Record where you found this information.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What are the types of the following values (constants)?&lt;/p></description></item><item><title>Exercise 02: TicketMachine</title><link>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-02/</guid><description>&lt;p>&lt;img src="../../images/ticket-5277919863_b741ccde84_b.jpg" alt="Old Ticket">
&lt;!-- raw HTML omitted -->Printed Ticket. &lt;a href="https://www.flickr.com/photos/sludgeulper/5277919863/">Sludge G&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>Source code for this exercise: 
 
 
 
 
 &lt;a href="https://github.com/htw-imi-info1/chapter02">https://github.com/htw-imi-info1/chapter02&lt;/a>
&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;p>&lt;strong>1.&lt;/strong> What could be wrong with the following constructor? Don&amp;rsquo;t execute it, think about it in your head.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">TicketMachine&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ticketCost&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">price&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ticketCost&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">total&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>2.&lt;/strong> How can you tell the difference between a method and a constructor just by looking at its header?&lt;/p></description></item><item><title>Exercise 02: TicketMachine</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-02/</guid><description>&lt;p>&lt;img src="../../images/ticket-5277919863_b741ccde84_b.jpg" alt="Book">
&lt;!-- raw HTML omitted -->Printed Ticket. &lt;a href="https://www.flickr.com/photos/sludgeulper/5277919863/">Sludge G&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong> What could be wrong with the following constructor? Don&amp;rsquo;t execute it, think about it in your head.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">TicketMachine&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ticketCost&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">price&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ticketCost&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">total&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>P2.&lt;/strong> How can you tell the difference between a method and a constructor just by looking at its header?&lt;/p></description></item><item><title>Exercise 02: TicketMachine</title><link>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-02/</guid><description>&lt;p>&lt;img src="../../images/ticket-5277919863_b741ccde84_b.jpg" alt="Book">
&lt;!-- raw HTML omitted -->Printed Ticket. &lt;a href="https://www.flickr.com/photos/sludgeulper/5277919863/">Sludge G&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;p>&lt;strong>0.&lt;/strong> What could be wrong with the following constructor? Don&amp;rsquo;t execute it, think about it in your head.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">TicketMachine&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ticketCost&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">price&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ticketCost&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">total&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>1.&lt;/strong> How can you tell the difference between a method and a constructor just by looking at its header?&lt;/p>
&lt;p>&lt;strong>2.&lt;/strong> What do you think would be printed if you altered the fourth statement of printTicket so that price also has quotes around it, as follows:
System.out.println(&amp;quot;# &amp;quot; + &amp;ldquo;price&amp;rdquo; + &amp;quot; cents.&amp;quot;);
Don&amp;rsquo;t execute this, just write down your expectations.&lt;/p></description></item><item><title>Exercise 02: TicketMachine</title><link>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-02/</guid><description>&lt;p>&lt;img src="../../images/ticket-5277919863_b741ccde84_b.jpg" alt="Book">
&lt;!-- raw HTML omitted -->Printed Ticket. &lt;a href="https://www.flickr.com/photos/sludgeulper/5277919863/">Sludge G&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>Source code for this exercise: 
 
 
 
 
 &lt;a href="https://github.com/htw-imi-info1/exercise02">https://github.com/htw-imi-info1/exercise02&lt;/a>
&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;p>&lt;strong>0.&lt;/strong> What could be wrong with the following constructor? Don&amp;rsquo;t execute it, think about it in your head.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">TicketMachine&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ticketCost&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">price&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ticketCost&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">total&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>1.&lt;/strong> How can you tell the difference between a method and a constructor just by looking at its header?&lt;/p></description></item><item><title>Exercise 02: TicketMachine</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-02/</guid><description>&lt;p>&lt;img src="../../images/ticket-5277919863_b741ccde84_b.jpg" alt="Book">
&lt;!-- raw HTML omitted -->Printed Ticket. &lt;a href="https://www.flickr.com/photos/sludgeulper/5277919863/">Sludge G&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;p>&lt;strong>0.&lt;/strong> What could be wrong with the following constructor? Don&amp;rsquo;t execute it, think about it in your head.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">TicketMachine&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ticketCost&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">price&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ticketCost&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">total&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>1.&lt;/strong> How can you tell the difference between a method and a constructor just by looking at its header?&lt;/p>
&lt;p>&lt;strong>2.&lt;/strong> What do you think would be printed if you altered the fourth statement of printTicket so that price also has quotes around it, as follows:
System.out.println(&amp;quot;# &amp;quot; + &amp;ldquo;price&amp;rdquo; + &amp;quot; cents.&amp;quot;);
Don&amp;rsquo;t execute this, just write down your expectations.&lt;/p></description></item><item><title>Exercise 02: TicketMachine</title><link>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-02/</guid><description>&lt;p>&lt;img src="../../images/ticket-5277919863_b741ccde84_b.jpg" alt="Old Ticket">
&lt;!-- raw HTML omitted -->Printed Ticket. &lt;a href="https://www.flickr.com/photos/sludgeulper/5277919863/">Sludge G&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>Source code for this exercise: 
 
 
 
 
 &lt;a href="https://github.com/htw-imi-info1/chapter02">https://github.com/htw-imi-info1/chapter02&lt;/a>
&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;p>&lt;strong>1.&lt;/strong> What could be wrong with the following constructor? Don&amp;rsquo;t execute it, think about it in your head.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">TicketMachine&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ticketCost&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">price&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ticketCost&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">total&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>2.&lt;/strong> How can you tell the difference between a method and a constructor just by looking at its header?&lt;/p></description></item><item><title>Exercise 03 - Class Diagrams</title><link>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-03/</guid><description>&lt;p>&lt;img src="../../images/led-pumpkin.jpg" alt="LED Pumpkin" title="pumpkins">&lt;/p>
&lt;p>In this exercise you will create a Class Diagram for the HTW Application.
You should work on this exercise in a team of 2-4 people.&lt;/p>
&lt;p>Based on the system description in the &lt;a href="../lab-02">last exercise&lt;/a> and the use
cases you&amp;rsquo;ve developed,
draw a Class Diagram for your Application. It should contain associations (aggregations and compositions, association classes as needed), generalizations (inheritance), as well as the most important fields and method names of the classes.&lt;/p></description></item><item><title>Exercise 03: Book Exercise</title><link>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-03/</guid><description>&lt;p>&lt;img src="../../images/books-8314929977.jpg" alt="Book">
&lt;!-- raw HTML omitted -->Books. &lt;a href="https://www.flickr.com/photos/abee5/8314929977/">Abhi Sharma&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to practice creating classes with data fields, constructors, methods, assignments and conditional statements.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>&lt;strong>Please finish these exercises before coming to lab.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong>
Why does the following version of refundBalance not give the same results as what we saw in class?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">refundBalance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>P2.&lt;/strong>&lt;/p></description></item><item><title>Exercise 03: Book Exercise</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-03/</guid><description>&lt;p>&lt;img src="../../images/books-8314929977.jpg" alt="Book">
&lt;!-- raw HTML omitted -->Books. &lt;a href="https://www.flickr.com/photos/abee5/8314929977/">Abhi Sharma&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to practice creating classes with data fields, constructors, methods, assignments and conditional statements.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>&lt;strong>Please finish these exercises before coming to lab.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong>
Why does the following version of refundBalance not give the same results as what we saw in class?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">refundBalance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>P2.&lt;/strong>&lt;/p></description></item><item><title>Exercise 03: Book Exercise</title><link>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-03/</guid><description>&lt;p>&lt;img src="../../images/books-8314929977.jpg" alt="Book">
&lt;!-- raw HTML omitted -->Books. &lt;a href="https://www.flickr.com/photos/abee5/8314929977/">Abhi Sharma&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to practice creating classes with data fields, constructors, methods, assignments and conditional statements.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>&lt;strong>Please finish these exercises before coming to lab.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong>
Why does the following version of refundBalance not give the same results as what we saw in class?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">refundBalance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>P2.&lt;/strong>&lt;/p></description></item><item><title>Exercise 03: Book Exercise</title><link>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-03/</guid><description>&lt;p>&lt;img src="../../images/books-8314929977.jpg" alt="Book">
&lt;!-- raw HTML omitted -->Books. &lt;a href="https://www.flickr.com/photos/abee5/8314929977/">Abhi Sharma&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to practice creating classes with data fields, constructors, methods, assignments and conditional statements.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>&lt;strong>Please finish these exercises before coming to lab.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong>
Why does the following version of refundBalance not give the same results as what we saw in class?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">refundBalance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>P2.&lt;/strong>&lt;/p></description></item><item><title>Exercise 03: Book Exercise</title><link>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-03/</guid><description>&lt;h1 id="book-exercise-instance-variables-getters-and-setters-and-some-strings">Book Exercise: Instance Variables, Getters and Setters and some Strings.&lt;/h1>
&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week&amp;rsquo;s lab work is intended to practice creating classes with data fields, constructors, methods, assignments and conditional statements.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>&lt;strong>Please finish these exercises before coming to lab.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong>
Why does the following version of refundBalance not give the same results as what we saw in class?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">refundBalance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>**P2. **&lt;/p></description></item><item><title>Exercise 03: Book Exercise</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-03/</guid><description>&lt;p>&lt;img src="../../images/books-8314929977.jpg" alt="Book">&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to practice creating classes with data fields, constructors, methods, assignments and conditional statements.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>&lt;strong>Please finish these exercises before coming to lab.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong>
Why does the following version of refundBalance not give the same results as what we saw in class?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">refundBalance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>P2.&lt;/strong>&lt;/p>
&lt;p>What happens if you try to compile the TicketMachine class with the following version of refundBalance?&lt;/p></description></item><item><title>Exercise 03: Book Exercise</title><link>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-03/</guid><description>&lt;p>&lt;img src="../../images/books-8314929977.jpg" alt="Book">
&lt;!-- raw HTML omitted -->Books. &lt;a href="https://www.flickr.com/photos/abee5/8314929977/">Abhi Sharma&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to practice creating classes with data fields, constructors, methods, assignments and conditional statements.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>&lt;strong>Please finish these exercises before coming to lab.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong>
Why does the following version of refundBalance not give the same results as what we saw in class?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">refundBalance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>P2.&lt;/strong>&lt;/p></description></item><item><title>Exercise 03: Book Exercise</title><link>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-03/</guid><description>&lt;p>&lt;img src="../../images/books-8314929977.jpg" alt="Book">
&lt;!-- raw HTML omitted -->Books. &lt;a href="https://www.flickr.com/photos/abee5/8314929977/">Abhi Sharma&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to practice creating classes with data fields, constructors, methods, assignments and conditional statements.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>&lt;strong>Please finish these exercises before coming to lab.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong>
Why does the following version of refundBalance not give the same results as what we saw in class?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">refundBalance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>P2.&lt;/strong>&lt;/p></description></item><item><title>Exercise 03: Book Exercise</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-03/</guid><description>&lt;p>&lt;img src="../../images/books-8314929977.jpg" alt="Book">
&lt;!-- raw HTML omitted -->Books. &lt;a href="https://www.flickr.com/photos/abee5/8314929977/">Abhi Sharma&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to practice creating classes with data fields, constructors, methods, assignments and conditional statements.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>&lt;strong>Please finish these exercises before coming to lab.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong>
Why does the following version of refundBalance not give the same results as what we saw in class?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">refundBalance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>P2.&lt;/strong>&lt;/p></description></item><item><title>Exercise 03: Book Exercise</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-03/</guid><description>&lt;p>&lt;!-- raw HTML omitted -->Not yet reviewed and published for WS 2019/20 Term!&lt;!-- raw HTML omitted -->
&lt;img src="../../images/books-8314929977.jpg" alt="Book">
&lt;!-- raw HTML omitted -->Books. &lt;a href="https://www.flickr.com/photos/abee5/8314929977/">Abhi Sharma&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to practice creating classes with data fields, constructors, methods, assignments and conditional statements.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>&lt;strong>Please finish these exercises before coming to lab.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong>
Why does the following version of refundBalance not give the same results as what we saw in class?&lt;/p></description></item><item><title>Exercise 03: Book Exercise</title><link>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-03/</guid><description>&lt;p>&lt;img src="../../images/books-8314929977.jpg" alt="Book">
&lt;!-- raw HTML omitted -->Books. &lt;a href="https://www.flickr.com/photos/abee5/8314929977/">Abhi Sharma&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to practice creating classes with data fields, constructors, methods, assignments and conditional statements.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>&lt;strong>Please finish these exercises before coming to lab.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong>
Why does the following version of refundBalance not give the same results as what we saw in class?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">refundBalance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>P2.&lt;/strong>&lt;/p></description></item><item><title>Exercise 04 - UML Part III: State Machine Diagrams</title><link>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-04/</guid><description>&lt;p>&lt;img src="../../images/machine.jpg" alt="Machine" title="machine">
Foto by &lt;a href="https://bkleinen.github.io/broken_link">Jeff Kubina&lt;/a>&lt;/p>
&lt;h2 id="prelab">Prelab&lt;/h2>
&lt;p>Please do read this Introduction to State Machine Diagrams before coming to lab!&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.agilemodeling.com/style/stateChartDiagram.htm">UML 2 State Machine Diagramming Guidelines&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>I will only give a brief intro/Q&amp;amp;A to State Machine Diagrams in the lab.&lt;/p>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>Your job in this exercise is to model all of the following systems (2 points per system for 1-3, 4 points for system 4):&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Model the modified goat/cabbage/wolf problem: The farmer is in Schöneweide and wants to get his goat, his cabbage and his wolf over to Oberschöneweide. Only one thing can fit in his boat at a time beside himself. He cannot leave the cabbage and the goat or the goat and the wolf alone on the same side of the river, for obvious reasons. Is it possible for him to get all three possessions across the Spree? Draw a State Machine Diagram modelling a solution to this problem.&lt;/p></description></item><item><title>Exercise 04: Rock around the Clock</title><link>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-04/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week&amp;rsquo;s lab work is intended to get you to implement parts of a class that is given for you. You are also to begin to see the idea of modularization, that is, splitting up code into classes.&lt;/p>
&lt;h4 id="to-make-the-best-of-lab-time-please-prepare-this-exercises-before-coming-to-lab">To make the best of Lab time, please prepare this exercises before coming to lab!&lt;/h4>
&lt;p>**P1. **Which of the following expressions returns true? After writing your answers on paper, open the CodePad in BlueJ and try it out.&lt;/p></description></item><item><title>Exercise 04: Rock around the Clock</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-04/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">&lt;img src="../../images/clock-stockholm-6085686394-320.jpg" alt="Clock">&lt;/a>
&lt;!-- raw HTML omitted -->Katarina Elevator in Stockholm, Foto by &lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">Arjan Richter&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to get you to implement parts of a class that is given for you. You are also to begin to see the idea of modularization, that is, splitting up code into classes.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>For the Tuesday group: we will be talking about boolean expressions in class on Tuesday. Therefore, I will set some time apart to let you work on the prelab in class as an exercise; you may however if you haven&amp;rsquo;t already done so for programming Kara do some reading about boolean expressions and prepare it before or at least give it a first try:
&lt;a href="https://en.wikibooks.org/wiki/Java_Programming/Boolean_expressions">https://en.wikibooks.org/wiki/Java_Programming/Boolean_expressions&lt;/a>&lt;/p></description></item><item><title>Exercise 04: Rock Around the Clock</title><link>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-04/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">&lt;img src="../../images/clock-stockholm-6085686394-320.jpg" alt="Clock">&lt;/a>
&lt;!-- raw HTML omitted -->Katarina Elevator in Stockholm, Foto by &lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">Arjan Richter&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to get you to implement parts of a class that is given for you. You are also to begin to see the idea of modularization, that is, splitting up code into classes.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>P0.&lt;/strong> Which of the following expressions returns true? After writing your answers on paper, open the CodePad in BlueJ and try it out.&lt;/p></description></item><item><title>Exercise 04: Rock Around the Clock</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-04/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">&lt;img src="../../images/clock-stockholm-6085686394-320.jpg" alt="Clock">&lt;/a>
&lt;!-- raw HTML omitted -->Katarina Elevator in Stockholm, Foto by &lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">Arjan Richter&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to get you to implement parts of a class that is given for you. You are also to begin to see the idea of modularization, that is, splitting up code into classes.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>P1.&lt;/strong> Which of the following expressions returns true? After writing your answers on paper, open the CodePad in BlueJ and try it out.&lt;/p></description></item><item><title>Exercise 04: Rock Around the Clock</title><link>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-04/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">&lt;img src="../../images/clock-stockholm-6085686394-320.jpg" alt="Clock">&lt;/a>
&lt;!-- raw HTML omitted -->Katarina Elevator in Stockholm, Foto by &lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">Arjan Richter&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to get you to implement parts of a class that is given for you. You are also to begin to see the idea of modularization, that is, splitting up code into classes.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>P0.&lt;/strong> Which of the following expressions returns true? After writing your answers on paper, open the CodePad in BlueJ and try it out.&lt;/p></description></item><item><title>Exercise 04: Rock Around the Clock</title><link>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-04/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">&lt;img src="../../images/clock-stockholm-6085686394-320.jpg" alt="Clock">&lt;/a>
&lt;!-- raw HTML omitted -->Katarina Elevator in Stockholm, Foto by &lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">Arjan Richter&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to get you to implement parts of a class that is given for you. You are also to begin to see the idea of modularization, that is, splitting up code into classes.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>P1.&lt;/strong> Which of the following expressions returns true? After writing your answers on paper, open the CodePad in BlueJ and try it out.&lt;/p></description></item><item><title>Exercise 04: Rock Around the Clock</title><link>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-04/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">&lt;img src="../../images/clock-stockholm-6085686394-320.jpg" alt="Clock">&lt;/a>
&lt;!-- raw HTML omitted -->Katarina Elevator in Stockholm, Foto by &lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">Arjan Richter&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to get you to implement parts of a class that is given for you. You are also to begin to see the idea of modularization, that is, splitting up code into classes.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>P1.&lt;/strong> Which of the following expressions returns true? After writing your answers on paper, open the CodePad in BlueJ and try it out.&lt;/p></description></item><item><title>Exercise 04: Rock Around the Clock</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-04/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">&lt;img src="../../images/clock-stockholm-6085686394-320.jpg" alt="Clock">&lt;/a>
&lt;!-- raw HTML omitted -->Katarina Elevator in Stockholm, Foto by &lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">Arjan Richter&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to get you to implement parts of a class that is given for you. You are also to begin to see the idea of modularization, that is, splitting up code into classes.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>P1.&lt;/strong> Which of the following expressions returns true? After writing your answers on paper, open the CodePad in BlueJ and try it out.&lt;/p></description></item><item><title>Exercise 04: Rock Around the Clock</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-04/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>&lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">&lt;img src="../../images/clock-stockholm-6085686394-320.jpg" alt="Clock">&lt;/a>
&lt;!-- raw HTML omitted -->Katarina Elevator in Stockholm, Foto by &lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">Arjan Richter&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to get you to implement parts of a class that is given for you. You are also to begin to see the idea of modularization, that is, splitting up code into classes.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>P0.&lt;/strong> Which of the following expressions returns true? After writing your answers on paper, open the CodePad in BlueJ and try it out.&lt;/p></description></item><item><title>Exercise 04: Rock Around the Clock</title><link>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-04/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">&lt;img src="../../images/clock-stockholm-6085686394-320.jpg" alt="Clock">&lt;/a>
&lt;!-- raw HTML omitted -->Katarina Elevator in Stockholm, Foto by &lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">Arjan Richter&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to get you to implement parts of a class that is given for you. You are also to begin to see the idea of modularization, that is, splitting up code into classes.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>P0.&lt;/strong> Which of the following expressions returns true? After writing your answers on paper, open the CodePad in BlueJ and try it out.&lt;/p></description></item><item><title>Exercise 04: Rock Around the Clock - Part 1</title><link>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-04/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>&lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">&lt;img src="../../images/clock-stockholm-6085686394-320.jpg" alt="Clock">&lt;/a>
&lt;!-- raw HTML omitted -->Katarina Elevator in Stockholm, Foto by &lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">Arjan Richter&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to get you to implement parts of a class that is given for you. You are also to begin to see the idea of modularization, that is, splitting up code into classes.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>P0.&lt;/strong> Which of the following expressions returns true? After writing your answers on paper, open the CodePad in BlueJ and try it out.&lt;/p></description></item><item><title>Exercise 05 - Sequence Diagrams and Ruby Finger Exercises</title><link>https://bkleinen.github.io/classes/ss2014/info3/labs/lab-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info3/labs/lab-05/</guid><description>&lt;h1 id="part-1-sequence-diagrams">Part 1: Sequence Diagrams&lt;/h1>
&lt;p>&lt;img src="../../images/sequence.jpg" alt="Launch Sequence">
&lt;!-- raw HTML omitted -->Pelican launch sequence. &lt;a href="https://www.flickr.com/photos/69214385@N04/9172233502">Foto by Don McCullough &lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="prelab">Prelab&lt;/h2>
&lt;p>Martin Fowler&amp;rsquo;s Chapter about Sequence Diagrams from the book &amp;ldquo;UML Distilled&amp;rdquo; &lt;a href="https://www.informit.com/articles/article.aspx?p=169507">is available as a sample chapter online.&lt;/a>&lt;/p>
&lt;p>Read it as a preparation for the lab.&lt;/p>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>As a finger exercise for Sequence Diagrams, pick one of the following example projects from the first semester and draw a sequence diagram for the main use case:&lt;/p></description></item><item><title>Exercise 05 - UML Part IV: Sequence Diagrams</title><link>https://bkleinen.github.io/classes/ss2014/info3/labs/lab-05a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info3/labs/lab-05a/</guid><description>&lt;p>&lt;img src="../../images/sequence.jpg" alt="Launch Sequence">
&lt;!-- raw HTML omitted -->Pelican launch sequence. &lt;a href="https://www.flickr.com/photos/69214385@N04/9172233502">Foto by Don McCullough &lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="prelab">Prelab&lt;/h2>
&lt;p>Martin Fowler&amp;rsquo;s Chapter about Sequence Diagrams from the book &amp;ldquo;UML Distilled&amp;rdquo; &lt;a href="https://www.informit.com/articles/article.aspx?p=169507">is available as a sample chapter online.&lt;/a>&lt;/p>
&lt;p>Read it as a preparation for the lab.&lt;/p>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>As a finger exercise for Sequence Diagrams, pick one of the following example projects from the first semester and draw a sequence diagram for the main use case:&lt;/p></description></item><item><title>Exercise 05 - UML Part IV: Sequence Diagrams</title><link>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-05/</guid><description>&lt;p>&lt;img src="../../images/sequence.jpg" alt="Launch Sequence">
&lt;!-- raw HTML omitted -->Pelican launch sequence. &lt;a href="https://www.flickr.com/photos/69214385@N04/9172233502">Foto by Don McCullough &lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="prelab">Prelab&lt;/h2>
&lt;p>Martin Fowler&amp;rsquo;s Chapter about Sequence Diagrams from the book &amp;ldquo;UML Distilled&amp;rdquo; &lt;a href="https://www.informit.com/articles/article.aspx?p=169507">is available as a sample chapter online.&lt;/a>&lt;/p>
&lt;p>Read it as a preparation for the lab.&lt;/p>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>As a finger exercise for Sequence Diagrams, pick one of the following example projects from the first semester and draw a sequence diagram for the main use case:&lt;/p></description></item><item><title>Exercise 05: A Better Notebook</title><link>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-05/</guid><description>&lt;p>&lt;img src="../../images/notebook-6783298985.jpg" alt="Notebook">
&lt;!-- raw HTML omitted -->Foto by &lt;a href="https://www.flickr.com/photos/waferboard/6783298985">waferboard&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended help you practice using loops.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>P0&lt;/strong>. Write a loop on paper that prints out all multiples of 5 between 10 and 95.&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong> Write a method called sumBetween that adds up all numbers between two numbers, a and b, that are passed into the method as parameters. Include a but not b in the sum.&lt;/p></description></item><item><title>Exercise 05: A Better Notebook</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-05/</guid><description>&lt;p>&lt;img src="../../images/notebook-6783298985.jpg" alt="Notebook">
&lt;!-- raw HTML omitted -->Foto by &lt;a href="https://www.flickr.com/photos/waferboard/6783298985">waferboard&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended help you practice using loops.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>P1&lt;/strong>. Write a loop on paper that prints out all multiples of 5 between 10 and 95.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> Write a method called sumBetween that adds up all numbers between two numbers, a and b, that are passed into the method as parameters. Include a but not b in the sum.&lt;/p></description></item><item><title>Exercise 05: A Better Notebook</title><link>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-05/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>&lt;img src="../../images/notebook-6783298985.jpg" alt="Notebook">
&lt;!-- raw HTML omitted -->Foto by &lt;a href="https://www.flickr.com/photos/waferboard/6783298985">waferboard&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended help you practice using loops.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>P0&lt;/strong>. Write a loop on paper that prints out all multiples of 5 between 10 and 95.&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong> Write a method called sumBetween that adds up all numbers between two numbers, a and b, that are passed into the method as parameters. Include a but not b in the sum.&lt;/p></description></item><item><title>Exercise 05: A Better Notebook</title><link>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-05/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended help you practice using loops.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please prepare these Exercises *before* coming to lab!&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Write a loop on paper that prints out all multiples of 5 between 10 and 95.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> Write a method called sumBetween that adds up all numbers between two numbers, a and b, that are passed into the method as parameters. Include a but not b in the sum.&lt;/p></description></item><item><title>Exercise 05: A Better Notebook</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-05/</guid><description>&lt;p>&lt;img src="../../images/notebook-6783298985.jpg" alt="Notebook">
&lt;!-- raw HTML omitted -->Foto by &lt;a href="https://www.flickr.com/photos/waferboard/6783298985">waferboard&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended help you practice using loops.&lt;/p>
&lt;p>&lt;strong>Note: (19.11.2013) The Kara Special exercise is obligatory!&lt;/strong>&lt;/p>
&lt;p>&lt;strong>In Exercise 4, you are asked to write the remove with an Iterator. As we haven&amp;rsquo;t yet reached Iterators in class, you can either:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>implement a removeFirstNote method with the for-each loop as seen in class &lt;strong>or&lt;/strong>&lt;/li>
&lt;li>look up iterators and use the Iterator remove method&lt;/li>
&lt;/ul>
&lt;p>The while/index-variant however, should delete &lt;strong>all&lt;/strong> Notes meeting the criteria!&lt;/p></description></item><item><title>Exercise 05: A Better Notebook</title><link>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-05/</guid><description>&lt;p>&lt;img src="../../images/notebook-6783298985.jpg" alt="Notebook">
&lt;!-- raw HTML omitted -->Foto by &lt;a href="https://www.flickr.com/photos/waferboard/6783298985">waferboard&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended help you practice using loops.&lt;/p>
&lt;p>##Prelab&lt;/p>
&lt;h3 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h3>
&lt;p>&lt;!-- raw HTML omitted -->Please prepare these Exercises *before* coming to lab!I will ask you to show your pre-lab to me at the beginning of the lab.
&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Write a loop on paper that prints out all multiples of 5 between 10 and 95.&lt;/p></description></item><item><title>Exercise 05: A Better Notebook</title><link>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-05/</guid><description>&lt;p>&lt;img src="../../images/notebook-6783298985.jpg" alt="Notebook">
&lt;!-- raw HTML omitted -->Foto by &lt;a href="https://www.flickr.com/photos/waferboard/6783298985">waferboard&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended help you practice using loops.&lt;/p>
&lt;p>##Prelab&lt;/p>
&lt;h3 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h3>
&lt;p>&lt;!-- raw HTML omitted -->Please prepare these Exercises *before* coming to lab!I will ask you to show your pre-lab to me at the beginning of the lab.
&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Write a loop on paper that prints out all multiples of 5 between 10 and 95.&lt;/p></description></item><item><title>Exercise 05: A Better Notebook</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-05/</guid><description>&lt;p>&lt;img src="../../images/notebook-6783298985.jpg" alt="Notebook">
&lt;!-- raw HTML omitted -->Foto by &lt;a href="https://www.flickr.com/photos/waferboard/6783298985">waferboard&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended help you practice using loops.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>P1&lt;/strong>. Write a loop on paper that prints out all multiples of 5 between 10 and 95.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> Write a method called sumBetween that adds up all numbers between two numbers, a and b, that are passed into the method as parameters. Include a but not b in the sum.&lt;/p></description></item><item><title>Exercise 05: A Better Notebook</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-05/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>&lt;img src="../../images/notebook-6783298985.jpg" alt="Notebook">
&lt;!-- raw HTML omitted -->Foto by &lt;a href="https://www.flickr.com/photos/waferboard/6783298985">waferboard&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended help you practice using loops.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>P0&lt;/strong>. Write a loop on paper that prints out all multiples of 5 between 10 and 95.&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong> Write a method called sumBetween that adds up all numbers between two numbers, a and b, that are passed into the method as parameters. Include a but not b in the sum.&lt;/p></description></item><item><title>Exercise 05: A Better Notebook</title><link>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-05/</guid><description>&lt;p>&lt;img src="../../images/notebook-6783298985.jpg" alt="Notebook">
&lt;!-- raw HTML omitted -->Foto by &lt;a href="https://www.flickr.com/photos/waferboard/6783298985">waferboard&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended help you practice using loops.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>P0&lt;/strong>. Write a loop on paper that prints out all multiples of 5 between 10 and 95.&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong> Write a method called sumBetween that adds up all numbers between two numbers, a and b, that are passed into the method as parameters. Include a but not b in the sum.&lt;/p></description></item><item><title>Exercise 05: Rock Around the Clock - Part 2</title><link>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-05/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>&lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">&lt;img src="../../images/clock-stockholm-6085686394-320.jpg" alt="Clock">&lt;/a>
&lt;!-- raw HTML omitted -->Katarina Elevator in Stockholm, Foto by &lt;a href="https://www.flickr.com/photos/arjanrichter/6085686394">Arjan Richter&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended to get you to implement parts of a class that is given for you. You are also to begin to see the idea of modularization, that is, splitting up code into classes.&lt;/p>
&lt;h2 id="what-to-hand-in">What To Hand In&lt;/h2>
&lt;p>You need to upload 2 Files to Moodle:&lt;/p></description></item><item><title>Exercise 06 - Rails - First Steps</title><link>https://bkleinen.github.io/classes/ss2014/info3/labs/lab-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info3/labs/lab-06/</guid><description>&lt;p>&lt;img src="../../images/pumpkins-wide.jpg" alt="Pumpkins" title="pumpkins">
Foto by &lt;a href="https://www.flickr.com/photos/pedroferrer/3615212504">Pedro J. Ferreira&lt;/a>&lt;/p>
&lt;h1 id="prelab">Prelab&lt;/h1>
&lt;ol>
&lt;li>Read through two Rails Guides:
&lt;ol>
&lt;li>&lt;a href="https://guides.rubyonrails.org/active_record_basics.html">https://guides.rubyonrails.org/active_record_basics.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://guides.rubyonrails.org/association_basics.html">https://guides.rubyonrails.org/association_basics.html&lt;/a>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h1 id="assignment">Assignment&lt;/h1>
&lt;h2 id="part-0">Part 0:&lt;/h2>
&lt;p>On the order#show page, show the associated customer with its name rather than the ID -
Test driven! You can use the :order1 factory for
this, see Part 1 for more info on FactoryGirl test
data.&lt;/p>
&lt;h2 id="part-1-creating-testdata">Part 1: Creating Testdata&lt;/h2>
&lt;p>You should never be attached to manually created test data living in your development or test database. Instead, you should have scripts that generate and re-generate this test data on demand.&lt;/p></description></item><item><title>Exercise 06 - Ruby Exercise</title><link>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-06/</guid><description>&lt;p>You&amp;rsquo;ll find Stubs, Tests and examples for this exercise on &lt;a href="https://github.com/htw-imi-info3-archive/ruby-exercise">github&lt;/a>.&lt;/p>
&lt;h2 id="1-hobby-matcher">1. Hobby Matcher&lt;/h2>
&lt;p>Program a class &amp;ldquo;Person&amp;rdquo; that implements matching Persons for their hobbies, implementing those two user stories:&lt;/p>
&lt;p>Vision/Goal: As a User of the Service, I want to be able to find other People with the same hobbies as I do.&lt;/p>
&lt;p>Story 1: As a User of the Service I want to be able to enter my Hobbies as a comma-separated list.&lt;/p></description></item><item><title>Exercise 06: A Better Notebook</title><link>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-06/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>&lt;img src="../../images/notebook-6783298985.jpg" alt="Notebook">
&lt;!-- raw HTML omitted -->Foto by &lt;a href="https://www.flickr.com/photos/waferboard/6783298985">waferboard&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended help you practice using loops.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>P0&lt;/strong>. Write a loop on paper that prints out all multiples of 5 between 10 and 95.&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong> Write a method called sumBetween that adds up all numbers between two numbers, a and b, that are passed into the method as parameters. Include a but not b in the sum.&lt;/p></description></item><item><title>Exercise 06: Club Membership</title><link>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-06/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week&amp;rsquo;s lab work is intended give you more practice using collections.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please prepare these exercise before coming to the lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. How do you write the import statement for using an ArrayList?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> How do you define a field that will take a collection of objects of type Student? How does it get initialized?&lt;/p>
&lt;p>&lt;strong>P3.&lt;/strong> Write a method that returns true if the parameter month is valid, i.e. between 1 and 12.&lt;/p></description></item><item><title>Exercise 06: Club Membership</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-06/</guid><description>&lt;p>&lt;img src="../../images/reform_club.jpg" alt="Reform Club">
&lt;!-- raw HTML omitted -->Reform Club, &lt;a href="https://commons.wikimedia.org/wiki/File:Reform_Club._Upper_level_of_the_saloon._From_London_Interiors_%281841%29.jpg">Wikimedia Commons&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended give you more practice using collections.&lt;/p>
&lt;p>##Prelab&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please prepare these exercise before coming to the lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. How do you write the import statement for using an ArrayList?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> How do you define a field that will take a collection of objects of type Student? How does it get initialized?&lt;/p></description></item><item><title>Exercise 06: Club Membership</title><link>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-06/</guid><description>&lt;p>&lt;img src="../../images/reform_club.jpg" alt="Reform Club">
&lt;!-- raw HTML omitted -->Reform Club, &lt;a href="https://commons.wikimedia.org/wiki/File:Reform_Club._Upper_level_of_the_saloon._From_London_Interiors_%281841%29.jpg">Wikimedia Commons&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended give you more practice using collections.&lt;/p>
&lt;p>##Prelab&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please prepare these exercise before coming to the lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. How do you write the import statement for using an ArrayList?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> How do you define a field that will take a collection of objects of type Student? How does it get initialized?&lt;/p></description></item><item><title>Exercise 06: Club Membership</title><link>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-06/</guid><description>&lt;p>&lt;img src="../../images/reform_club.jpg" alt="Reform Club">
&lt;!-- raw HTML omitted -->Reform Club, &lt;a href="https://commons.wikimedia.org/wiki/File:Reform_Club._Upper_level_of_the_saloon._From_London_Interiors_%281841%29.jpg">Wikimedia Commons&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended give you more practice using collections.&lt;/p>
&lt;p>##Prelab&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please prepare these exercise before coming to the lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. How do you write the import statement for using an ArrayList?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> How do you define a field that will take a collection of objects of type Student? How does it get initialized?&lt;/p></description></item><item><title>Exercise 06: Club Membership</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-06/</guid><description>&lt;p>&lt;img src="../../images/reform_club.jpg" alt="Reform Club">
&lt;!-- raw HTML omitted -->Reform Club, &lt;a href="https://commons.wikimedia.org/wiki/File:Reform_Club._Upper_level_of_the_saloon._From_London_Interiors_%281841%29.jpg">Wikimedia Commons&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended give you more practice using collections.&lt;/p>
&lt;h2 id="prelab">Prelab&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please prepare these exercise before coming to the lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. How do you write the import statement for using an ArrayList?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> How do you define a field that will take a collection of objects of type Student? How does it get initialized?&lt;/p></description></item><item><title>Exercise 06: Lambda Functions</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-06/</guid><description>&lt;!-- raw HTML omitted -->
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;p>This week&amp;rsquo;s lab work is intended help you better understand lambda functions.&lt;/p>
&lt;h3 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h3>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong> If you have a collection called myList, what Java code would you have to write to apply some code to each of the members in the list?&lt;/p></description></item><item><title>Exercise 06: Lambda Functions</title><link>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-06/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>This week&amp;rsquo;s lab work is intended help you better understand lambda functions.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;p>Please prepare these Exercises *before* coming to lab! Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P0.&lt;/strong> If you have a collection called myList, what Java code would you have to write to apply some code to each of the members in the list?&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong> Given the following code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">printStudent&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Student&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getDetails&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>What is the equivalent lambda in Java? What syntax variations are possible?&lt;/p></description></item><item><title>Exercise 06: Lambda Functions</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-06/</guid><description>&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>This week&amp;rsquo;s lab work is intended help you better understand lambda functions.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;p>Please bring these exercises printed out or written out and completed with you to lab. Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P0.&lt;/strong> If you have a collection called myList, what Java code would you have to write to apply some code to each of the members in the list?&lt;/p></description></item><item><title>Exercise 06: Lotto and Technical Support</title><link>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-06/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>This week&amp;rsquo;s lab work is intended give you practice using more classes from the Java API: the Random class, Sets and Maps.&lt;/p>
&lt;hr>
&lt;h1 id="pre-lab">Pre-Lab&lt;/h1>
&lt;p>Prepare your prelab before coming to class! Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. How do you generate random numbers between 1 and 10 with Java? In what package is the library?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> How do you define an array that can count how often the numbers between 1 and 10 are generated? We call this a frequency table.&lt;/p></description></item><item><title>Exercise 06: Lotto and Technical Support</title><link>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-06/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>This week&amp;rsquo;s lab work is intended give you practice using more classes from the Java API: the Random class, Sets and Maps.&lt;/p>
&lt;hr>
&lt;h1 id="pre-lab">Pre-Lab&lt;/h1>
&lt;p>Prepare your prelab before coming to class! Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. How do you generate random numbers between 1 and 10 with Java? In what package is the library?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> How do you define an array that can count how often the numbers between 1 and 10 are generated? We call this a frequency table.&lt;/p></description></item><item><title>Exercise 07 - Internationalization, n:m Associations and a Bit of Functionality</title><link>https://bkleinen.github.io/classes/ss2014/info3/labs/lab-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info3/labs/lab-07/</guid><description>&lt;h1 id="assignment">Assignment&lt;/h1>
&lt;h3 id="sort-or-search-pumpkins">Sort or Search Pumpkins&lt;/h3>
&lt;p>On the Pumpkin index site, add either a sort function for at least one pumpkin
attribute &lt;strong>or&lt;/strong> a search functionality. You will need to add a link or form to
the index site, and perform the ordering/searching from the controller altering
the @pumpkins variable. [https://guides.rubyonrails.org/active_record_querying.html]
(&lt;a href="https://guides.rubyonrails.org/active_record_querying.html">https://guides.rubyonrails.org/active_record_querying.html&lt;/a>) contains all necessary
information on how to query Pumpkins.&lt;/p>
&lt;p>*** remember to make use of all the great pumpkins all of you added with their
pull request you can use to populate your database! ***&lt;/p></description></item><item><title>Exercise 07: Lambda Functions</title><link>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-07/</guid><description>&lt;p>&lt;img src="./kakapo-aye-aye.jpg" alt="Kakapo and Aye-Aye">&lt;/p>
&lt;p>Sources:
&lt;a href="https://commons.wikimedia.org/wiki/File:Aye-aye_(Daubentonia_madagascariensis).jpg">https://commons.wikimedia.org/wiki/File:Aye-aye_(Daubentonia_madagascariensis).jpg&lt;/a>
&lt;a href="https://en.m.wikipedia.org/wiki/File:Kakapo_Sirocco_1.jpg">https://en.m.wikipedia.org/wiki/File:Kakapo_Sirocco_1.jpg&lt;/a>&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended help you better understand lambda functions, and Kara has a comeback to practice iterating through Lists.&lt;/p>
&lt;p>Source code for this exercise: 
 
 
 
 
 &lt;a href="https://github.com/htw-imi-info1/exercise07-lambda-expressions">https://github.com/htw-imi-info1/exercise07-lambda-expressions&lt;/a>
&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;p>Please prepare these Exercises *before* coming to lab! Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P0.&lt;/strong> If you have a collection called myList, what Java code would you have to write to apply some code to each of the members in the list?&lt;/p></description></item><item><title>Exercise 07: Lambda Functions</title><link>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-07/</guid><description>&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>This week&amp;rsquo;s lab work is intended help you better understand lambda functions.&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;p>Please bring these exercises printed out or written out and completed with you to lab. Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P0.&lt;/strong> If you have a collection called myList, what Java code would you have to write to apply some code to each of the members in the list?&lt;/p></description></item><item><title>Exercise 07: Lambda Functions</title><link>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-07/</guid><description>&lt;p>&lt;img src="./kakapo-aye-aye.jpg" alt="Kakapo and Aye-Aye">&lt;/p>
&lt;p>Sources:
&lt;a href="https://commons.wikimedia.org/wiki/File:Aye-aye_(Daubentonia_madagascariensis).jpg">https://commons.wikimedia.org/wiki/File:Aye-aye_(Daubentonia_madagascariensis).jpg&lt;/a>
&lt;a href="https://en.m.wikipedia.org/wiki/File:Kakapo_Sirocco_1.jpg">https://en.m.wikipedia.org/wiki/File:Kakapo_Sirocco_1.jpg&lt;/a>&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended help you better understand lambda functions, and Kara has a comeback to practice iterating through Lists.&lt;/p>
&lt;p>Source code for this exercise: 
 
 
 
 
 &lt;a href="https://github.com/htw-imi-info1/exercise07-lambda-expressions">https://github.com/htw-imi-info1/exercise07-lambda-expressions&lt;/a>
&lt;/p>
&lt;h2 id="pre-lab">Pre-lab&lt;/h2>
&lt;p>Please prepare these Exercises *before* coming to lab! Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P0.&lt;/strong> If you have a collection called myList, what Java code would you have to write to apply some code to each of the members in the list?&lt;/p></description></item><item><title>Exercise 07: Lotto and Technical Support</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-07/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>This week&amp;rsquo;s lab work is intended give you practice using the Random class and HashMaps.&lt;/p>
&lt;hr>
&lt;h1 id="pre-lab">Pre-Lab&lt;/h1>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. How do you generate random numbers between 1 and 10 with Java? In what package is the library?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> How do you define an array that can count how often the numbers between 1 and 10 are generated? We call this a frequency table.&lt;/p></description></item><item><title>Exercise 07: Lotto and Technical Support</title><link>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-07/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>This week&amp;rsquo;s lab work is intended give you practice using the Random class.&lt;/p>
&lt;hr>
&lt;h1 id="pre-lab">Pre-Lab&lt;/h1>
&lt;p>Prepare your prelab before coming to class! Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. How do you generate random numbers between 1 and 10 with Java? In what package is the library?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> How do you define an array that can count how often the numbers between 1 and 10 are generated? We call this a frequency table.&lt;/p></description></item><item><title>Exercise 07: Lotto and Technical Support</title><link>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-07/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice using the Random class and HashMaps.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. How do you generate random numbers between 1 and 10 with Java? In what package is the library?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> How do you define an array that can count how often the numbers between 1 and 10 are generated? We call this a frequency table.&lt;/p></description></item><item><title>Exercise 07: Lotto and Technical Support</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-07/</guid><description>&lt;p>&lt;img src="../../images/lotto.jpg" alt="Lotto">
&lt;!-- raw HTML omitted -->German Lotto Slip, &lt;a href="https://www.flickr.com/photos/rene-germany/98668296">Foto by ReneS&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended give you practice using the Random class and HashMaps.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. How do you generate random numbers between 1 and 10 with Java? In what package is the library?&lt;/p></description></item><item><title>Exercise 07: Lotto and Technical Support</title><link>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-07/</guid><description>&lt;p>&lt;img src="../../images/lotto.jpg" alt="Lotto">
&lt;!-- raw HTML omitted -->German Lotto Slip, &lt;a href="https://www.flickr.com/photos/rene-germany/98668296">Foto by ReneS&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended give you practice using the Random class and HashMaps.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. How do you generate random numbers between 1 and 10 with Java? In what package is the library?&lt;/p></description></item><item><title>Exercise 07: Lotto and Technical Support</title><link>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-07/</guid><description>&lt;p>&lt;img src="../../images/lotto.jpg" alt="Lotto">
&lt;!-- raw HTML omitted -->German Lotto Slip, &lt;a href="https://www.flickr.com/photos/rene-germany/98668296">Foto by ReneS&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended give you practice using the Random class and HashMaps.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. How do you generate random numbers between 1 and 10 with Java? In what package is the library?&lt;/p></description></item><item><title>Exercise 07: Lotto and Technical Support</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-07/</guid><description>&lt;p>&lt;img src="../../images/lotto.jpg" alt="Lotto">
&lt;!-- raw HTML omitted -->German Lotto Slip, &lt;a href="https://www.flickr.com/photos/rene-germany/98668296">Foto by ReneS&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>This week&amp;rsquo;s lab work is intended give you practice using the Random class and HashMaps.&lt;/p>
&lt;hr>
&lt;h1 id="pre-lab">Pre-Lab&lt;/h1>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. How do you generate random numbers between 1 and 10 with Java? In what package is the library?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> How do you define an array that can count how often the numbers between 1 and 10 are generated? We call this a frequency table.&lt;/p></description></item><item><title>Exercise 07: Lotto and Technical Support</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-07/</guid><description>&lt;p>&lt;!-- raw HTML omitted -->Not yet reviewed and published for WS 2019/20 Term!&lt;!-- raw HTML omitted -->&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>This week&amp;rsquo;s lab work is intended give you practice using the Random class and HashMaps.&lt;/p>
&lt;hr>
&lt;h1 id="pre-lab">Pre-Lab&lt;/h1>
&lt;p>Please bring these exercises and their solutions printed out or written out with you to the lab.&lt;/p>
&lt;p>&lt;strong>P0&lt;/strong> How do you generate random numbers between 1 and 10 with Java? In what package is the library?&lt;/p></description></item><item><title>Exercise 07: Test Driven Development</title><link>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-07/</guid><description>&lt;h1 id="assignment">Assignment&lt;/h1>
&lt;p>This exercise is about developing a linked list test driven.&lt;/p>
&lt;p>You can either do it in Java - completing the project we&amp;rsquo;ve started in class&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/htw-imi-info3-archive/TestDrivenList">TestDrivenList in Java (Eclipse Project)&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>or in Ruby&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/htw-imi-info3-archive/TestDrivenListRuby">TestDrivenList in Ruby&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>or, if interested or bored, or undecided, both. But one is sufficient.&lt;/p>
&lt;p>The initial class Node is given in both versions, together with a test class and a to_s/toString method to ease testing.&lt;/p></description></item><item><title>Exercise 08: Black and White Box Tests</title><link>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-08/</guid><description>&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>After exploring Unit Testing in the last exercise, we will be looking at &lt;a href="https://en.wikipedia.org/wiki/Black_box_testing">black-box&lt;/a> and &lt;a href="https://en.wikipedia.org/wiki/White_box_testing">white-box&lt;/a> testing in this second testing exercise.&lt;/p>
&lt;p>Source code for this exercise: &lt;a href="https://github.com/htw-imi-info3-archive/lab-08-blackwhite">https://github.com/htw-imi-info3-archive/lab-08-blackwhite&lt;/a>&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Getting started:&lt;/strong> Give the equivalence classes for testing a method that determines the absolute value of an integer using the black-box methodology. Don&amp;rsquo;t peek at the code yet! Now check out &lt;a href="https://github.com/htw-imi-info3-archive/lab-08-blackwhite/blob/master/absolute.java">&lt;code>absolute.java&lt;/code>&lt;/a> in the repository and give the equivalence classes for a white-box test. Develop one test case for each equivalence class using JUnit.&lt;/li>
&lt;li>&lt;strong>Black-box test&lt;/strong>: Look at the grading scale at the bottom of the page (Which is not the [grading scale for this course]({{ site.BaseURL }}/studies/grading/grading-scale) ). Give the equivalence classes for a program that loops until a -1 is entered, asking for the number of points on this scale, prints the appropriate letter grade (A-F), and then prints the average number of points when -1 has been entered. Develop one test case for each equivalence class. Test your test cases with &lt;a href="https://github.com/htw-imi-info3-archive/lab-08-blackwhite/blob/master/GradingScale.class">GradingScale.class&lt;/a>. No fair decompiling the class! Report on the results. Did you find any errors?&lt;/li>
&lt;li>&lt;strong>White-box test&lt;/strong> / path coverage: Examine the code for &lt;a href="https://github.com/htw-imi-info3-archive/lab-08-blackwhite/blob/master/TaxTime.java">TaxTime.java&lt;/a>. Draw a code graph of the main class! How many independent paths are there? What are the conditions that cause each of the paths to be taken? Draw up a table giving you an overview of the conditions. Give test cases that exercise each path. Are there any errors in the program (besides the size of the tax bite)?&lt;/li>
&lt;li>&lt;strong>Reflection&lt;/strong> Consider the last two examples, especially TaxTime. What makes this programs hard to test? How would you refactor TaxTime to make it testable automatically with JUnit?&lt;/li>
&lt;/ol>
&lt;h3 id="grading-scale-points--procent">Grading Scale (Points = Procent)&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Points&lt;/th>
 &lt;th style="text-align: left">Grade&lt;/th>
 &lt;th style="text-align: left">ECTS&lt;/th>
 &lt;th style="text-align: left">Points&lt;/th>
 &lt;th style="text-align: left">Grade&lt;/th>
 &lt;th style="text-align: left">ECTS&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">95-100&lt;/td>
 &lt;td style="text-align: left">1,0&lt;/td>
 &lt;td style="text-align: left">A&lt;/td>
 &lt;td style="text-align: left">65-69&lt;/td>
 &lt;td style="text-align: left">3,0&lt;/td>
 &lt;td style="text-align: left">C&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">90-94&lt;/td>
 &lt;td style="text-align: left">1,3&lt;/td>
 &lt;td style="text-align: left">A&lt;/td>
 &lt;td style="text-align: left">60-64&lt;/td>
 &lt;td style="text-align: left">3,3&lt;/td>
 &lt;td style="text-align: left">C&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">85-89&lt;/td>
 &lt;td style="text-align: left">1,7&lt;/td>
 &lt;td style="text-align: left">B&lt;/td>
 &lt;td style="text-align: left">55-59&lt;/td>
 &lt;td style="text-align: left">3,7&lt;/td>
 &lt;td style="text-align: left">D&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">80-84&lt;/td>
 &lt;td style="text-align: left">2,0&lt;/td>
 &lt;td style="text-align: left">B&lt;/td>
 &lt;td style="text-align: left">50-54&lt;/td>
 &lt;td style="text-align: left">4,0&lt;/td>
 &lt;td style="text-align: left">D&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">75-79&lt;/td>
 &lt;td style="text-align: left">2,3&lt;/td>
 &lt;td style="text-align: left">B&lt;/td>
 &lt;td style="text-align: left">0-49&lt;/td>
 &lt;td style="text-align: left">5,0&lt;/td>
 &lt;td style="text-align: left">F&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">70-74&lt;/td>
 &lt;td style="text-align: left">2,7&lt;/td>
 &lt;td style="text-align: left">C&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="lab-writeup">Lab Writeup&lt;/h2>
&lt;p>Submit your Report as PDF to moodle.&lt;/p></description></item><item><title>Exercise 08: Bouncing Balls</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-08/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice working with the basic concepts of programming.&lt;/p>
&lt;h2 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h2>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Download and open the &lt;a href="https://github.com/htw-imi-info1/exercise08">Balls project&lt;/a> (Chapter 05). Create a BallDemo object and execute the drawDemo and bounce methods. Then read the BallDemo source code. Describe, in detail, how these methods work for your report.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> Read the documentation of the Canvas class. Then answer the following questions in writing, including fragments of Java code:&lt;/p></description></item><item><title>Exercise 08: Bouncing Balls</title><link>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-08/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>This week&amp;rsquo;s lab work is intended give you practice working with the basic concepts of programming.&lt;/p>
&lt;h2 id="pre-lab">Pre Lab&lt;/h2>
&lt;p>Prepare your prelab before coming to class! Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P0&lt;/strong>. Download and open the &lt;a href="https://github.com/htw-imi-info1/exercise08">Balls project&lt;/a> (concerns Chapter 06 in the book). Create a BallDemo object and execute the drawDemo and bounce methods. Then read the BallDemo source code. Describe, in detail, how these methods work for your report.&lt;/p></description></item><item><title>Exercise 08: Bouncing Balls</title><link>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-08/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice working with the basic concepts of programming.&lt;/p>
&lt;h2 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h2>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Download and open the &lt;a href="https://github.com/htw-imi-info1/exercise08">Balls project&lt;/a> (Chapter 05). Create a BallDemo object and execute the drawDemo and bounce methods. Then read the BallDemo source code. Describe, in detail, how these methods work for your report.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> Read the documentation of the Canvas class. Then answer the following questions in writing, including fragments of Java code:&lt;/p></description></item><item><title>Exercise 08: Bouncing Balls</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-08/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice working with the basic concepts of programming.&lt;/p>
&lt;h2 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h2>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Download and open the &lt;a href="https://github.com/htw-imi-info1/exercise08">Balls project&lt;/a> (Chapter 05). Create a BallDemo object and execute the drawDemo and bounce methods. Then read the BallDemo source code. Describe, in detail, how these methods work for your report.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> Read the documentation of the Canvas class. Then answer the following questions in writing, including fragments of Java code:&lt;/p></description></item><item><title>Exercise 08: Bouncing Balls</title><link>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-08/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice working with the basic concepts of programming.&lt;/p>
&lt;h2 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h2>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Download and open the &lt;a href="https://github.com/htw-imi-info1/exercise08">Balls project&lt;/a> (Chapter 05). Create a BallDemo object and execute the drawDemo and bounce methods. Then read the BallDemo source code. Describe, in detail, how these methods work for your report.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> Read the documentation of the Canvas class. Then answer the following questions in writing, including fragments of Java code:&lt;/p></description></item><item><title>Exercise 08: Bouncing Balls</title><link>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-08/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice working with the basic concepts of programming.&lt;/p>
&lt;h2 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h2>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Download and open the &lt;a href="https://github.com/htw-imi-info1/exercise08">Balls project&lt;/a> (Chapter 05). Create a BallDemo object and execute the drawDemo and bounce methods. Then read the BallDemo source code. Describe, in detail, how these methods work for your report.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> Read the documentation of the Canvas class. Then answer the following questions in writing, including fragments of Java code:&lt;/p></description></item><item><title>Exercise 08: Bouncing Balls</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-08/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice working with the basic concepts of programming.&lt;/p>
&lt;h2 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h2>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Download and open the &lt;a href="https://github.com/htw-imi-info1/exercise08">Balls project&lt;/a> (Chapter 05). Create a BallDemo object and execute the drawDemo and bounce methods. Then read the BallDemo source code. Describe, in detail, how these methods work for your report.&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> Read the documentation of the Canvas class. Then answer the following questions in writing, including fragments of Java code:&lt;/p></description></item><item><title>Exercise 08: Bouncing Balls</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-08/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>This week&amp;rsquo;s lab work is intended give you practice working with the basic concepts of programming.&lt;/p>
&lt;h2 id="pre-lab">Pre Lab&lt;/h2>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P0&lt;/strong>. Download and open the &lt;a href="https://github.com/htw-imi-info1/exercise08">Balls project&lt;/a> (Chapter 05). Create a BallDemo object and execute the drawDemo and bounce methods. Then read the BallDemo source code. Describe, in detail, how these methods work for your report.&lt;/p></description></item><item><title>Exercise 08: Lotto and ...</title><link>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-08/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>This week&amp;rsquo;s lab work is intended give you practice using the Random class.&lt;/p>
&lt;hr>
&lt;h1 id="pre-lab">Pre-Lab&lt;/h1>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. How do you generate random numbers between 1 and 10 with Java? In what package is the library?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> How do you define an array that can count how often the numbers between 1 and 10 are generated? We call this a frequency table.&lt;/p></description></item><item><title>Exercise 08: Testing with JUnit</title><link>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-08/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice developing test cases and testing and writing Unit Tests.&lt;/p>
&lt;p>Source code for this lab: 
 
 
 
 
 &lt;a href="https://github.com/htw-imi-info1/chapter09_testing">https://github.com/htw-imi-info1/chapter09_testing&lt;/a>
 - diary-prototype&lt;/p>
&lt;h4 id="pre-lab">Pre Lab&lt;/h4>
&lt;p>Prepare your prelab before coming to class! Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Write down six test cases for Day and Appointment that. Give each test case (and, if applicable the ones from the lecture) a name.&lt;/p>
&lt;p>&lt;strong>P2&lt;/strong>. What assertions do you need in order to be able to automate the tests?&lt;/p></description></item><item><title>Exercise 08: Testing with JUnit</title><link>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-08/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice developing test cases and testing and writing Unit Tests.&lt;/p>
&lt;p>Source code for this lab: 
 
 
 
 
 &lt;a href="https://github.com/htw-imi-info1/chapter09_testing">https://github.com/htw-imi-info1/chapter09_testing&lt;/a>
 - diary-prototype&lt;/p>
&lt;h4 id="pre-lab">Pre Lab&lt;/h4>
&lt;p>Prepare your prelab before coming to class! Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Write down six test cases for Day and Appointment that. Give each test case (and, if applicable the ones from the lecture) a name.&lt;/p>
&lt;p>&lt;strong>P2&lt;/strong>. What assertions do you need in order to be able to automate the tests?&lt;/p></description></item><item><title>Exercise 09 - Legacy Code - Refactoring to Patterns</title><link>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-09/</guid><description>&lt;p>&lt;img src="../../images/The_Gilded_Rose.jpg" alt="The Gilded Rose">
&lt;!-- raw HTML omitted -->The Gilded Rose, Trade District, &lt;a href="https://wowwiki-archive.fandom.com/wiki/Gilded_Rose">World of Warcraft.&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="assignment-gilded-rose-kata">Assignment: Gilded Rose Kata&lt;/h2>
&lt;p>Source Code: There are three versions. Choose one. Have brief look at the
readme and the GuildedRose class.&lt;/p>
&lt;ul>
&lt;li>Ruby Version: &lt;a href="https://github.com/htw-imi-info3-archive/gilded-rose-kata">https://github.com/htw-imi-info3-archive/gilded-rose-kata&lt;/a>&lt;/li>
&lt;li>Java/Eclipse Version with Test Stub: &lt;a href="https://github.com/htw-imi-info3-archive/lab-05-JavaMavenGildedRoseJavaEclipse">https://github.com/htw-imi-info3-archive/lab-05-JavaMavenGildedRoseJavaEclipse&lt;/a>&lt;/li>
&lt;li>Original Version using Maven: &lt;a href="https://github.com/htw-imi-info3-archive/lab-05-JavaMavenGildedRose">https://github.com/htw-imi-info3-archive/lab-05-JavaMavenGildedRose&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="write-characterization-tests">Write Characterization Tests&lt;/h3>
&lt;p>To be able to add the new functionality as requested you should write
Characterization tests first.
You will not yet refactor or add the required new functionality!&lt;/p></description></item><item><title>Exercise 09: JUnit</title><link>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-09/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice testing and writing assertions.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Write down six test cases for Day and Appointment that were not given in the lecture. Give each test case (and the ones from the lecture) a name.&lt;/p>
&lt;p>&lt;strong>P2&lt;/strong>. What assertions do you need in order to be able to automate the tests?&lt;/p></description></item><item><title>Exercise 09: JUnit</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-09/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice testing and writing assertions.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Write down six test cases for Day and Appointment that were not given in the lecture. Give each test case (and the ones from the lecture) a name.&lt;/p>
&lt;p>&lt;strong>P2&lt;/strong>. What assertions do you need in order to be able to automate the tests?&lt;/p></description></item><item><title>Exercise 09: Technical Support</title><link>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-09/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice using the Random class and HashMaps.&lt;/p>
&lt;hr>
&lt;h1 id="pre-lab">Pre-Lab&lt;/h1>
&lt;p>&lt;strong>P0&lt;/strong> Try out &lt;a href="http://med-ai.com/models/eliza.html">http://med-ai.com/models/eliza.html&lt;/a>. Experiment a little. Can you trick the bot? How might this program work?&lt;/p>
&lt;hr>
&lt;h1 id="what-to-hand-in">What To Hand In&lt;/h1>
&lt;p>Please hand in:&lt;/p>
&lt;ul>
&lt;li>zip-folder with your (documented) TechSupport code&lt;/li>
&lt;li>lab report as pdf&lt;/li>
&lt;/ul>
&lt;p>Lab assignments are due on thursday at 10pm.&lt;/p>
&lt;hr>
&lt;h1 id="assignment---technical-support">Assignment - Technical Support&lt;/h1>
&lt;ol start="0">
&lt;li>
&lt;p>Open the book chapter 6.2 for a refresher - this exercise is based on it. &lt;a href="https://github.com/htw-imi-info1/exercise07-archived">Open the basic TechSupport project&lt;/a>. Expand it to give random responses as is done in the book.&lt;/p></description></item><item><title>Exercise 09: Testing with JUnit</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-09/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice testing and writing assertions.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Write down six test cases for Day and Appointment that were not given in the lecture. Give each test case (and the ones from the lecture) a name.&lt;/p>
&lt;p>&lt;strong>P2&lt;/strong>. What assertions do you need in order to be able to automate the tests?&lt;/p></description></item><item><title>Exercise 09: Testing with JUnit</title><link>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-09/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice testing and writing assertions.&lt;/p>
&lt;h4 id="pre-lab">Pre Lab&lt;/h4>
&lt;p>Prepare your prelab before coming to class! Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Write down six test cases for Day and Appointment that were not given in the book. Give each test case (and the ones from the lecture) a name.&lt;/p>
&lt;p>&lt;strong>P2&lt;/strong>. What assertions do you need in order to be able to automate the tests?&lt;/p></description></item><item><title>Exercise 09: Testing with JUnit</title><link>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-09/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice testing and writing assertions.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Write down six test cases for Day and Appointment that were not given in the lecture. Give each test case (and the ones from the lecture) a name.&lt;/p>
&lt;p>&lt;strong>P2&lt;/strong>. What assertions do you need in order to be able to automate the tests?&lt;/p></description></item><item><title>Exercise 09: Testing with JUnit</title><link>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-09/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice testing and writing assertions.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Write down six test cases for Day and Appointment that were not given in the lecture. Give each test case (and the ones from the lecture) a name.&lt;/p>
&lt;p>&lt;strong>P2&lt;/strong>. What assertions do you need in order to be able to automate the tests?&lt;/p></description></item><item><title>Exercise 09: Testing with JUnit</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-09/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice testing and writing assertions.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Write down six test cases for Day and Appointment that were not given in the lecture. Give each test case (and the ones from the lecture) a name.&lt;/p>
&lt;p>&lt;strong>P2&lt;/strong>. What assertions do you need in order to be able to automate the tests?&lt;/p></description></item><item><title>Exercise 09: Testing with JUnit</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-09/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice testing and writing assertions.&lt;/p>
&lt;h4 id="change-to-assignment-for-winter-term-1920">Change to Assignment for Winter Term 19/20&lt;/h4>
&lt;ul>
&lt;li>we will be doing most of the lab during the 2nd Lecture&lt;/li>
&lt;li>There will be groups per Test Fixture&lt;/li>
&lt;li>everyone needs to submit one positive and one negative test case&lt;/li>
&lt;li>lab is graded with 4* for participation, 0* for no participation&lt;/li>
&lt;/ul>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p></description></item><item><title>Exercise 09: The World of You</title><link>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-09/</guid><description>&lt;p>This week’s lab work will begin a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;p>Source code for this exercise: 
 
 
 
 
 &lt;a href="https://github.com/htw-imi-info1/exercise09-zuul">https://github.com/htw-imi-info1/exercise09-zuul&lt;/a>
&lt;/p>
&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>Prepare your prelab before coming to class! Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P0&lt;/strong>. Invent your own game scenario away from the computer. Don&amp;rsquo;t worry about implementation or classes or programming. Just try and come up with something interesting. It needs to be the basic structure of a player moving through different locations. Possible examples:&lt;/p></description></item><item><title>Exercise 09: The World of You</title><link>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-09/</guid><description>&lt;p>This week’s lab work will begin a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;p>Source code for this exercise: 
 
 
 
 
 &lt;a href="https://github.com/htw-imi-info1/exercise09-zuul">https://github.com/htw-imi-info1/exercise09-zuul&lt;/a>
&lt;/p>
&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>Prepare your prelab before coming to class! Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P0&lt;/strong>. Invent your own game scenario away from the computer. Don&amp;rsquo;t worry about implementation or classes or programming. Just try and come up with something interesting. It needs to be the basic structure of a player moving through different locations. Possible examples:&lt;/p></description></item><item><title>Exercise 10 - Legacy Code - Refactoring to Patterns - Part 2</title><link>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-10-gilded-rose-part-2-draft/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-10-gilded-rose-part-2-draft/</guid><description>&lt;p>&lt;img src="../../images/gilded-rose-2696723066.jpg" alt="The Gilded Rose">
&lt;!-- raw HTML omitted -->A Gilded Rose, Foto by &lt;a href="https://www.flickr.com/photos/94464132@N00/2696723066">Kelton&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="assignment-gilded-rose-refactoring-and-enhancement">Assignment: Gilded Rose Refactoring and Enhancement&lt;/h2>
&lt;p>Refactor the Gilded Rose and add the requested new functionality.&lt;/p>
&lt;p>Last week, you&amp;rsquo;ve developed characterization tests for the guilded rose. Secured by that, you&amp;rsquo;re now safe to refactor the given implementation to a good object-oriented design - but don&amp;rsquo;t forget the goblin in the corner!&lt;/p>
&lt;p>That is, you can&amp;rsquo;t simply create an Item-Hierarchy where each item knows how to update it&amp;rsquo;s quality. You have to find another solution without touching the Item-Class.&lt;/p></description></item><item><title>Exercise 10 - Rails first steps</title><link>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-10/</guid><description>&lt;p>In this exercise, you will create a rails application and add one or two features to it in which you work with the Model, View and Controller.&lt;/p>
&lt;p>Pick one simple thing that you can solve mainly with the provided CRUD (Create Read Update Delete) features of a rails scaffold using just one model class. If the first things seems to simple for that, add a second – but the goal is really to implement just a little bit of functionality in this first step and mainly set up the whole rails app together with Continuous Integration – we will add Continuous Deployment in the next exercise.&lt;/p></description></item><item><title>Exercise 10 a: The World of You</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-10-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-10-a/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will begin a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Design your own game scenario away from the computer. Don’t worry about implementation or classes or programming. Just try and come up with something interesting. It needs to be the basic structure of a player moving through different locations. Possible examples:&lt;/p></description></item><item><title>Exercise 10 b: Adding Commands</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-10-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-10-b/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will begin a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. What are enums in Java? which special methods does an enum have?&lt;/p>
&lt;p>&lt;strong>P2&lt;/strong>. What is switch statement? Write down an example.&lt;/p>
&lt;h1 id="post-lab-aka--what-to-turn-in">Post-Lab, AKA What To Turn In&lt;/h1>
&lt;p>Your completed lab report, submitted in Moodle as a pdf,
should include:&lt;/p></description></item><item><title>Exercise 10: Bouncing Balls</title><link>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-10/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>This week&amp;rsquo;s lab work is intended give you practice working with the basic concepts of programming.&lt;/p>
&lt;h2 id="pre-lab">Pre Lab&lt;/h2>
&lt;p>&lt;strong>P0&lt;/strong>. Download and open the &lt;a href="https://github.com/htw-imi-info1/exercise08">Balls project&lt;/a> (concerns Chapter 06 in the book). Create a BallDemo object and execute the drawDemo and bounce methods. Then read the BallDemo source code. Describe, in detail, how these methods work for your report.&lt;/p>
&lt;p>&lt;strong>P1.&lt;/strong> Read the documentation of the Canvas class. Then answer the following questions in writing, including fragments of Java code:&lt;/p></description></item><item><title>Exercise 10: The World of You</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-10/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will begin a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Design your own game scenario away from the computer. Don’t worry about implementation or classes or programming. Just try and come up with something interesting. It needs to be the basic structure of a player moving through different locations. Possible examples:&lt;/p></description></item><item><title>Exercise 10: The World of You</title><link>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-10/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>This week’s lab work will begin a larger project that will occupy us until the end of the semester. The groups you form today will stay groups for the remaining part of the semester!&lt;/p>
&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>Prepare your prelab before coming to class! Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P0&lt;/strong>. Invent your own game scenario away from the computer. Don’t worry about implementation or classes or programming. Just try and come up with something interesting. It needs to be the basic structure of a player moving through different locations. Possible examples:&lt;/p></description></item><item><title>Exercise 10: The World of You</title><link>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-10/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will begin a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Design your own game scenario away from the computer. Don’t worry about implementation or classes or programming. Just try and come up with something interesting. It needs to be the basic structure of a player moving through different locations. Possible examples:&lt;/p></description></item><item><title>Exercise 10: The World of You</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-10/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will begin a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Design your own game scenario away from the computer. Don’t worry about implementation or classes or programming. Just try and come up with something interesting. It needs to be the basic structure of a player moving through different locations. Possible examples:&lt;/p></description></item><item><title>Exercise 10: The World of You</title><link>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-10/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will begin a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Design your own game scenario away from the computer. Don’t worry about implementation or classes or programming. Just try and come up with something interesting. It needs to be the basic structure of a player moving through different locations. Possible examples:&lt;/p></description></item><item><title>Exercise 10: The World of You</title><link>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-10/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will begin a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Design your own game scenario away from the computer. Don’t worry about implementation or classes or programming. Just try and come up with something interesting. It needs to be the basic structure of a player moving through different locations. Possible examples:&lt;/p></description></item><item><title>Exercise 10: The World of You</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-10/</guid><description>&lt;p>&lt;!-- raw HTML omitted -->This exercise has been split up in parts A &amp;amp; B and is not valid in WS2016/17!&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->See the [Schedule]({{ site.BaseURL }}/classes/ws2016/info1/schedule/)
or [Lab Index]({{ site.BaseURL }}/classes/ws2016/info1/labs/) for the correct exercises.&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will begin a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p></description></item><item><title>Exercise 10: The World of You</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-10/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>This week’s lab work will begin a larger project that will occupy us until the end of the semester. The groups you form today will stay groups for the remaining part of the semester!&lt;/p>
&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>Please bring these exercises printed out or written out with you to the lab.&lt;/p>
&lt;p>&lt;strong>P0&lt;/strong>. Invent your own game scenario away from the computer. Don’t worry about implementation or classes or programming. Just try and come up with something interesting. It needs to be the basic structure of a player moving through different locations. Possible examples:&lt;/p></description></item><item><title>Exercise 10: Use Inheritance for Commands</title><link>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-10/</guid><description>&lt;p>This week’s lab work will continue the zuul project.&lt;/p>



&lt;div class="mermaid" align="center">
 
classDiagram

 Command &amp;lt;|-- Go
 Command &amp;lt;|-- Quit
 Command &amp;lt;|-- Help
 Command &amp;lt;|-- Look
 Command &amp;lt;|-- Eat
 &amp;lt;&amp;lt;abstract&amp;gt;&amp;gt; Command
 class Command{
 processCommand(Player)*
 }
 
 class Go{
 processCommand(Player)
 }
 class Quit{
 processCommand(Player)
 }
 class Help{
 processCommand(Player)
 }
 class Look{
 processCommand(Player)
 }
 class Eat{
 processCommand(Player)
 }

&lt;/div>

&lt;p>The Class Hierarchy for Commands.&lt;/p>
&lt;h3 id="update-28122023">Update 28/12/2023&lt;/h3>
&lt;p>As the refactoring described below - even with the provided parts - is still quite difficult as you might get a lot of compilation errors along the way,
here&amp;rsquo;s a third alternative:
Re-do the last lab - the refactoring described in Chapter 08, Designing Classes, again (or for the first time, as a lot of you have missed that part! ) based on this version that already has the Command Hierarchy:

 
 
 
 
 &lt;a href="https://github.com/htw-imi-info1/exercise09-zuul/tree/main/your-zuul-command-hierarchy">your-zuul-command-hierarchy&lt;/a>
.&lt;/p></description></item><item><title>Exercise 10: Use Inheritance for Commands</title><link>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-10/</guid><description>&lt;p>This week’s lab work will continue the zuul project.&lt;/p>



&lt;div class="mermaid" align="center">
 
classDiagram

 Command &amp;lt;|-- Go
 Command &amp;lt;|-- Quit
 Command &amp;lt;|-- Help
 Command &amp;lt;|-- Look
 Command &amp;lt;|-- Eat
 &amp;lt;&amp;lt;abstract&amp;gt;&amp;gt; Command
 class Command{
 processCommand(Player)*
 }
 
 class Go{
 processCommand(Player)
 }
 class Quit{
 processCommand(Player)
 }
 class Help{
 processCommand(Player)
 }
 class Look{
 processCommand(Player)
 }
 class Eat{
 processCommand(Player)
 }

&lt;/div>

&lt;p>The Class Hierarchy for Commands.&lt;/p>
&lt;h3 id="update-28122023">Update 28/12/2023&lt;/h3>
&lt;p>As the refactoring described below - even with the provided parts - is still quite difficult as you might get a lot of compilation errors along the way,
here&amp;rsquo;s a third alternative:
Re-do the last lab - the refactoring described in Chapter 08, Designing Classes, again (or for the first time, as a lot of you have missed that part! ) based on this version that already has the Command Hierarchy:

 
 
 
 
 &lt;a href="https://github.com/htw-imi-info1/exercise09-zuul/tree/main/your-zuul-command-hierarchy">your-zuul-command-hierarchy&lt;/a>
.&lt;/p></description></item><item><title>Exercise 11 - Associations and Internationalization</title><link>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-11/</guid><description>&lt;p>In this assignment, you will add some functionality to your rails app and try out a couple of the principles and practices we covered in the lectures. For this, you need to add some functionality that you can choose yourself. Read through the whole assignment and decide on the functionality you want to add before starting to implement it. It does not have to be the most important functionality of your app – the goal here is to try out the different aspects of rails.&lt;/p></description></item><item><title>Exercise 11: Keeping Track of Stuff</title><link>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-11/</guid><description>&lt;p>&lt;img src="./game-items.jpg" alt="Game Items">
&lt;a href="https://www.freepik.com/free-vector/game-icons-with-signs-key-playing-cards-money_26689359.htm#query=game%20items&amp;amp;position=0&amp;amp;from_view=keyword&amp;amp;track=ais&amp;amp;uuid=bc732565-c659-4120-85ff-8cea9a1bf92a">Image by upklyak&lt;/a>
on Freepik&lt;/p>
&lt;p>&lt;strong>update: re-check this page for JSONWorld additions. They will be optional.&lt;/strong>&lt;/p>
&lt;p>This week’s lab work will continue a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>Prepare your pre-lab before coming to class! Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. What items could be kept in the locations in your game? Come up with a list of at least 10 items. How heavy is each item?&lt;/p></description></item><item><title>Exercise 11: Keeping Track of Stuff</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-11/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will continue a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. What items could be kept in the locations in your game? Come up with a list of at least 10 items. How heavy is each item?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What will the starting position of the items be? List which items are going to be in which place.&lt;/p></description></item><item><title>Exercise 11: Keeping Track of Stuff</title><link>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-11/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>This week’s lab work will continue a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>Prepare your prelab before coming to class! Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. What items could be kept in the locations in your game? Come up with a list of at least 10 items. How heavy is each item?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What will the starting position of the items be? List which items are going to be in which place.&lt;/p></description></item><item><title>Exercise 11: Keeping Track of Stuff</title><link>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-11/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will continue a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. What items could be kept in the locations in your game? Come up with a list of at least 10 items. How heavy is each item?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What will the starting position of the items be? List which items are going to be in which place.&lt;/p></description></item><item><title>Exercise 11: Keeping Track of Stuff</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-11-with-switch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-11-with-switch/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will continue a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. What items could be kept in the locations in your game? Come up with a list of at least 10 items. How heavy is each item?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What will the starting position of the items be? List which items are going to be in which place.&lt;/p></description></item><item><title>Exercise 11: Keeping Track of Stuff</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-11/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will continue a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. What items could be kept in the locations in your game? Come up with a list of at least 10 items. How heavy is each item?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What will the starting position of the items be? List which items are going to be in which place.&lt;/p></description></item><item><title>Exercise 11: Keeping Track of Stuff</title><link>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-11-with-switch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-11-with-switch/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will continue a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. What items could be kept in the locations in your game? Come up with a list of at least 10 items. How heavy is each item?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What will the starting position of the items be? List which items are going to be in which place.&lt;/p></description></item><item><title>Exercise 11: Keeping Track of Stuff</title><link>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-11/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will continue a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. What items could be kept in the locations in your game? Come up with a list of at least 10 items. How heavy is each item?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What will the starting position of the items be? List which items are going to be in which place.&lt;/p></description></item><item><title>Exercise 11: Keeping Track of Stuff</title><link>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-11-with-switch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-11-with-switch/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will continue a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. What items could be kept in the locations in your game? Come up with a list of at least 10 items. How heavy is each item?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What will the starting position of the items be? List which items are going to be in which place.&lt;/p></description></item><item><title>Exercise 11: Keeping Track of Stuff</title><link>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-11/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will continue a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. What items could be kept in the locations in your game? Come up with a list of at least 10 items. How heavy is each item?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What will the starting position of the items be? List which items are going to be in which place.&lt;/p></description></item><item><title>Exercise 11: Keeping Track of Stuff</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-11/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will continue a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. What items could be kept in the locations in your game? Come up with a list of at least 10 items. How heavy is each item?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What will the starting position of the items be? List which items are going to be in which place.&lt;/p></description></item><item><title>Exercise 11: Keeping Track of Stuff</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-11/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>This week’s lab work will continue a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. What items could be kept in the locations in your game? Come up with a list of at least 10 items. How heavy is each item?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What will the starting position of the items be? List which items are going to be in which place.&lt;/p></description></item><item><title>Exercise 11: Keeping Track of Stuff</title><link>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-11/</guid><description>&lt;p>&lt;img src="./game-items.jpg" alt="Game Items">
&lt;a href="https://www.freepik.com/free-vector/game-icons-with-signs-key-playing-cards-money_26689359.htm#query=game%20items&amp;amp;position=0&amp;amp;from_view=keyword&amp;amp;track=ais&amp;amp;uuid=bc732565-c659-4120-85ff-8cea9a1bf92a">Image by upklyak&lt;/a>
on Freepik&lt;/p>
&lt;p>&lt;strong>update: re-check this page for JSONWorld additions. They will be optional.&lt;/strong>&lt;/p>
&lt;p>This week’s lab work will continue a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>Prepare your pre-lab before coming to class! Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. What items could be kept in the locations in your game? Come up with a list of at least 10 items. How heavy is each item?&lt;/p></description></item><item><title>Exercise 11: Testing with JUnit</title><link>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-11/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice testing and writing assertions.&lt;/p>
&lt;h4 id="pre-lab">Pre Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out or in digital form with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Write down six test cases for Day and Appointment that were not given in the book. Give each test case (and the ones from the lecture) a name.&lt;/p>
&lt;p>&lt;strong>P2&lt;/strong>. What assertions do you need in order to be able to automate the tests?&lt;/p></description></item><item><title>Exercise 12 a: The World of You</title><link>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-12-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-12-a/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week’s lab work will begin a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Design your own game scenario away from the computer. Don’t worry about implementation or classes or programming. Just try and come up with something interesting. It needs to be the basic structure of a player moving through different locations. Possible examples:&lt;/p></description></item><item><title>Exercise 12: Pick up and Carry</title><link>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2024/info1/labs/exercise-12/</guid><description>&lt;p>This week&amp;rsquo;s lab work will finish up your project.&lt;/p>
&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>Prepare your prelab before coming to class! Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P0&lt;/strong>. Here are some informal specifications: A player must be able to pick up items from the current room. They can carry any number of items, but only up to a maximum weight limit. Some items are too heavy to be picked up. The player can drop one or all items in the current location. What changes are you going to have to make to your game? Don&amp;rsquo;t program them yet, just specify the changes that need to be made to each class in writing.&lt;/p></description></item><item><title>Exercise 12: Pick up and Carry</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-12/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week&amp;rsquo;s lab work will finish up your project.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Here are some informal specifications: A player must be able to pick up items from the current room. They can carry any number of items, but only up to a maximum weight limit. Some items are too heavy to be picked up. The player can drop one or all items in the current location. What changes are you going to have to make to your game? Don&amp;rsquo;t program them yet, just specify the changes that need to be made to each class in writing.&lt;/p></description></item><item><title>Exercise 12: Pick up and Carry</title><link>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/info1/labs/exercise-12/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>This week&amp;rsquo;s lab work will finish up your project.&lt;/p>
&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>Prepare your prelab before coming to class! Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P0&lt;/strong>. Here are some informal specifications: A player must be able to pick up items from the current room. They can carry any number of items, but only up to a maximum weight limit. Some items are too heavy to be picked up. The player can drop one or all items in the current location. What changes are you going to have to make to your game? Don&amp;rsquo;t program them yet, just specify the changes that need to be made to each class in writing.&lt;/p></description></item><item><title>Exercise 12: Pick up and Carry</title><link>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-12/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week&amp;rsquo;s lab work will finish up your project.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page. You do the prelab for the game you received from your neighbor last week.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Here are some informal specifications: A player must be able to pick up items from the current room. They can carry any number of items, but only up to a maximum weight limit. Some items are too heavy to be picked up. The player can drop one or all items in the current location. What changes are you going to have to make to your game? Don&amp;rsquo;t program them yet, just specify the changes that need to be made to each class in writing.&lt;/p></description></item><item><title>Exercise 12: Pick up and Carry</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-12-switch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-12-switch/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week&amp;rsquo;s lab work will finish up your project.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page. You do the prelab for the game you received from your neighbor last week.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Here are some informal specifications: A player must be able to pick up items from the current room. They can carry any number of items, but only up to a maximum weight limit. Some items are too heavy to be picked up. The player can drop one or all items in the current location. What changes are you going to have to make to your game? Don&amp;rsquo;t program them yet, just specify the changes that need to be made to each class in writing.&lt;/p></description></item><item><title>Exercise 12: Pick up and Carry</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-12/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week&amp;rsquo;s lab work will finish up your project.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Here are some informal specifications: A player must be able to pick up items from the current room. They can carry any number of items, but only up to a maximum weight limit. Some items are too heavy to be picked up. The player can drop one or all items in the current location. What changes are you going to have to make to your game? Don&amp;rsquo;t program them yet, just specify the changes that need to be made to each class in writing.&lt;/p></description></item><item><title>Exercise 12: Pick up and Carry</title><link>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-12-switch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-12-switch/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week&amp;rsquo;s lab work will finish up your project.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page. You do the prelab for the game you received from your neighbor last week.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Here are some informal specifications: A player must be able to pick up items from the current room. They can carry any number of items, but only up to a maximum weight limit. Some items are too heavy to be picked up. The player can drop one or all items in the current location. What changes are you going to have to make to your game? Don&amp;rsquo;t program them yet, just specify the changes that need to be made to each class in writing.&lt;/p></description></item><item><title>Exercise 12: Pick up and Carry</title><link>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-12/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week&amp;rsquo;s lab work will finish up your project.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Here are some informal specifications: A player must be able to pick up items from the current room. They can carry any number of items, but only up to a maximum weight limit. Some items are too heavy to be picked up. The player can drop one or all items in the current location. What changes are you going to have to make to your game? Don&amp;rsquo;t program them yet, just specify the changes that need to be made to each class in writing.&lt;/p></description></item><item><title>Exercise 12: Pick up and Carry</title><link>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-12-switch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-12-switch/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week&amp;rsquo;s lab work will finish up your project.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page. You do the prelab for the game you received from your neighbor last week.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Here are some informal specifications: A player must be able to pick up items from the current room. They can carry any number of items, but only up to a maximum weight limit. Some items are too heavy to be picked up. The player can drop one or all items in the current location. What changes are you going to have to make to your game? Don&amp;rsquo;t program them yet, just specify the changes that need to be made to each class in writing.&lt;/p></description></item><item><title>Exercise 12: Pick up and Carry</title><link>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-12/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week&amp;rsquo;s lab work will finish up your project.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Here are some informal specifications: A player must be able to pick up items from the current room. They can carry any number of items, but only up to a maximum weight limit. Some items are too heavy to be picked up. The player can drop one or all items in the current location. What changes are you going to have to make to your game? Don&amp;rsquo;t program them yet, just specify the changes that need to be made to each class in writing.&lt;/p></description></item><item><title>Exercise 12: Pick up and Carry</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-12/</guid><description>&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>This week&amp;rsquo;s lab work will finish up your project.&lt;/p>
&lt;h4 id="what-to-bring-to-lab">What to Bring to Lab&lt;/h4>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. Here are some informal specifications: A player must be able to pick up items from the current room. They can carry any number of items, but only up to a maximum weight limit. Some items are too heavy to be picked up. The player can drop one or all items in the current location. What changes are you going to have to make to your game? Don&amp;rsquo;t program them yet, just specify the changes that need to be made to each class in writing.&lt;/p></description></item><item><title>Exercise 12: Pick up and Carry</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-12/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>This week&amp;rsquo;s lab work will finish up your project.&lt;/p>
&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P0&lt;/strong>. Here are some informal specifications: A player must be able to pick up items from the current room. They can carry any number of items, but only up to a maximum weight limit. Some items are too heavy to be picked up. The player can drop one or all items in the current location. What changes are you going to have to make to your game? Don&amp;rsquo;t program them yet, just specify the changes that need to be made to each class in writing.&lt;/p></description></item><item><title>Exercise 12: Pick up and Carry</title><link>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2023/info1/labs/exercise-12/</guid><description>&lt;p>This week&amp;rsquo;s lab work will finish up your project.&lt;/p>
&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>Prepare your prelab before coming to class! Doing the pre-lab will save you time during the lab.&lt;/p>
&lt;p>&lt;strong>P0&lt;/strong>. Here are some informal specifications: A player must be able to pick up items from the current room. They can carry any number of items, but only up to a maximum weight limit. Some items are too heavy to be picked up. The player can drop one or all items in the current location. What changes are you going to have to make to your game? Don&amp;rsquo;t program them yet, just specify the changes that need to be made to each class in writing.&lt;/p></description></item><item><title>Exercise 12: The World of You</title><link>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-12/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>This week’s lab work will begin a larger project that will occupy us until the end of the semester. The groups you form today will stay groups for the remaining part of the semester!&lt;/p>
&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>Please bring these exercises printed out or written out with you to the lab.&lt;/p>
&lt;p>&lt;strong>P0&lt;/strong>. Invent your own game scenario away from the computer. Don’t worry about implementation or classes or programming. Just try and come up with something interesting. It needs to be the basic structure of a player moving through different locations. Possible examples:&lt;/p></description></item><item><title>Exercise 13: CRC Cards</title><link>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-13/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please bring these exercises P1 and P2 printed out or written out with you to lab.
Please have your name on your page.&lt;/p>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> How do you obtain tickets to go see a movie? Write down the steps that you take, in order.&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> If you have tickets and have to cancel, what do you have to do? Write down the steps, in order.&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> Read up on the
&lt;a href="https://c2.com/doc/oopsla89/paper.html">Class-Responsibility-Collaboration Card method (CRC Cards)&lt;/a>.
This must be read before class, as you will not be able to do the exercise if you have no idea what this is.&lt;/p></description></item><item><title>Exercise 13: CRC Cards</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-13/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please bring these exercises P1 and P2 printed out or written out with you to lab.
Please have your name on your page.&lt;/p>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> How do you obtain tickets to go see a movie? Write down the steps that you take, in order.&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> If you have tickets and have to cancel, what do you have to do? Write down the steps, in order.&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> Read up on the
&lt;a href="https://c2.com/doc/oopsla89/paper.html">Class-Responsibility-Collaboration Card method (CRC Cards)&lt;/a>.
This must be read before class, as you will not be able to do the exercise if you have no idea what this is.&lt;/p></description></item><item><title>Exercise 13: Keeping Track of Stuff</title><link>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-13/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>This week’s lab work will continue a larger project that will occupy us until the end of the semester.&lt;/p>
&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>Please bring these exercises printed out or written out with you to lab.&lt;/p>
&lt;p>&lt;strong>P1&lt;/strong>. What items could be kept in the locations in your game? Come up with a list of at least 10 items. How heavy is each item?&lt;/p>
&lt;p>&lt;strong>P2.&lt;/strong> What will the starting position of the items be? List which items are going to be in which place.&lt;/p></description></item><item><title>Exercise 14: Pick up and Carry</title><link>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-14/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>This week&amp;rsquo;s lab work will finish up your project.&lt;/p>
&lt;h1 id="pre-lab">Pre-lab&lt;/h1>
&lt;p>Please bring these exercises printed out or written out with you to lab. Please have your name on your page.&lt;/p>
&lt;p>&lt;strong>P0&lt;/strong>. Here are some informal specifications: A player must be able to pick up items from the current room. They can carry any number of items, but only up to a maximum weight limit. Some items are too heavy to be picked up. The player can drop one or all items in the current location. What changes are you going to have to make to your game? Don&amp;rsquo;t program them yet, just specify the changes that need to be made to each class in writing.&lt;/p></description></item><item><title>Exercise Drölf: Inheritance</title><link>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-inheritance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/labs/exercise-inheritance/</guid><description>&lt;p>This week&amp;rsquo;s lab work is intended give you practice working with inheritance. It combines content from various chapters in the book, including this week&amp;rsquo;s chapter, chapter 12.&lt;/p>
&lt;h1 id="post-lab-aka--what-to-turn-in">Post-Lab, AKA What To Turn In&lt;/h1>
&lt;ul>
&lt;li>A report of your completed assignment, submitted in Moodle as a pdf&lt;/li>
&lt;li>Your BlueJ project as a zip file&lt;/li>
&lt;/ul>
&lt;p>Lab assignments are due on Thursday at 22:00.&lt;/p>
&lt;hr>
&lt;h1 id="assignment">Assignment&lt;/h1>
&lt;h2 id="pokemon">Pokemon&lt;/h2>
&lt;p>You are part of the team that develops the logic behind a Pokemon game.&lt;/p></description></item><item><title>Exercise Startup</title><link>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-00/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2012/info1/assignments/exercise-00/</guid><description>&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>&lt;!-- raw HTML omitted -->You need to get used to keeping a logbook in the lab. It can be analog (i.e. on paper) or digital. Make sure that you label and date your logbook. Keep track of everything you do in the logbook – even if you are really excited and want to keep playing. You will save time later if you can easily retrace your steps. Your lab leader will show you how to set up an online logbook. Make a logbook for today and take notes on what we do. This will be turned in as a lab report this week. Don’t forget your name!&lt;!-- raw HTML omitted -->&lt;/p></description></item><item><title>Exercise Startup</title><link>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-00/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/labs/exercise-00/</guid><description>&lt;p>Welcome to the laboratory - that&amp;rsquo;s what we call these rooms filled with computer equipment. Each computer in WH C 579 is a so-called dual-boot computer that can boot to Windows or Ubuntu Linux, or Mac OS in WH C 537. As computer science students we expect you to be able to deal with Windows, Unix, and Mac OS operating systems. For this lab, you can work with Mac OS or Windows.&lt;/p></description></item><item><title>Exercise Startup</title><link>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-00/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info1/labs/exercise-00/</guid><description>&lt;p>Welcome to the laboratory - that&amp;rsquo;s what we call these rooms filled with computer equipment. Each computer in WH C 579 is a so-called dual-boot computer that can boot to Windows or Ubuntu Linux, or Mac OS in WH C 537. As computer science students we expect you to be able to deal with Windows, Unix, and Mac OS operating systems. For this lab, you can work with Mac OS or Windows.&lt;/p></description></item><item><title>Exercise Startup</title><link>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-00/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info1/labs/exercise-00/</guid><description>&lt;p>Welcome to the laboratory - that&amp;rsquo;s what we call these rooms filled with computer equipment. Each computer in WH C 576 and WH C 579 is a so-called dual-boot computer that can boot to Windows or Ubuntu Linux, or Mac OS in WH C 537. As computer science students we expect you to be able to deal with Windows, Unix, and Mac OS operating systems. For this lab, you can work with Mac OS or Windows.&lt;/p></description></item><item><title>GIT Intro</title><link>https://bkleinen.github.io/material/git-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/git-intro/</guid><description>&lt;h2 id="source-code-management-mit-git">Source Code Management mit GIT&lt;/h2>
&lt;p>Für Info2 hatte ich im letzten Semester eine GIT-Introduction aufgenomen:&lt;/p>
&lt;p>(Zugänglich mit HTW-Login)&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://mediathek.htw-berlin.de/video/git-intro-part1/2980e3c60421ee9a96089108c12b21da">Part 1&lt;/a> - Basics and a simple git workflow: Repository anlegen, commit, push, pull, clone&lt;/li>
&lt;li>&lt;a href="https://mediathek.htw-berlin.de/video/git-intro-part2/45cd6d8891579afd4889dba15a7a901e">Part 2&lt;/a> - committing the right files: git status, git add, index&lt;/li>
&lt;li>&lt;a href="https://mediathek.htw-berlin.de/video/git-intro-part3/92013add95f331153835580f374c68a1">Part 3&lt;/a> - Stolpersteine: andere machen Änderungen! - merge conflicts, vi als editor&lt;/li>
&lt;li>&lt;a href="https://mediathek.htw-berlin.de/video/git-intro-part4/0f299fb70d15ab9ff4d82b7865d8482d">Part 4&lt;/a> - Adding SSH Keys and copying Repos from Github to Gitlab&lt;/li>
&lt;/ul>
&lt;p>Seither habe ich gelernt, dass die Beispiele meiner commit messages nicht
gut gewählt waren.
&lt;a href="https://gist.github.com/robertpainsi/b632364184e70900af4ab688decf6f53">In diesem Gist&lt;/a>
gibt es gute Hinweise dazu.&lt;/p></description></item><item><title>Grading Scale</title><link>https://bkleinen.github.io/studies/grading/grading-scale/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/studies/grading/grading-scale/</guid><description>&lt;p>This is the official grading scale according to the &lt;a href="https://www.htw-berlin.de/fileadmin/HTW/Zentral/Rechtsstelle/Amtliche_Mitteilungsblaetter/2013/04_13.pdf">RPO&lt;/a>. There are 110-120 percent possible on all courses I teach.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Percent&lt;/th>
 &lt;th style="text-align: left">Grade&lt;/th>
 &lt;th style="text-align: left">Percent&lt;/th>
 &lt;th style="text-align: left">Grade&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">95 ≤ p&lt;/td>
 &lt;td style="text-align: left">1,0&lt;/td>
 &lt;td style="text-align: left">65 ≤ p &amp;lt; 70&lt;/td>
 &lt;td style="text-align: left">3,0&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">90 ≤ p &amp;lt; 95&lt;/td>
 &lt;td style="text-align: left">1,3&lt;/td>
 &lt;td style="text-align: left">60 ≤ p &amp;lt; 65&lt;/td>
 &lt;td style="text-align: left">3,3&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">85 ≤ p &amp;lt; 90&lt;/td>
 &lt;td style="text-align: left">1,7&lt;/td>
 &lt;td style="text-align: left">55 ≤ p &amp;lt; 60&lt;/td>
 &lt;td style="text-align: left">3,7&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">80 ≤ p &amp;lt; 85&lt;/td>
 &lt;td style="text-align: left">2,0&lt;/td>
 &lt;td style="text-align: left">50 ≤ p &amp;lt; 55&lt;/td>
 &lt;td style="text-align: left">4,0&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">75 ≤ p &amp;lt; 80&lt;/td>
 &lt;td style="text-align: left">2,3&lt;/td>
 &lt;td style="text-align: left">0 ≤ p &amp;lt; 50&lt;/td>
 &lt;td style="text-align: left">5,0&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">70 ≤ p &amp;lt; 75&lt;/td>
 &lt;td style="text-align: left">2,7&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Guideline to Lab Reports and Assignments</title><link>https://bkleinen.github.io/studies/grading/guideline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/studies/grading/guideline/</guid><description>&lt;h1 id="general-info-about-lab-reports-and-grading">General Info about Lab Reports and Grading&lt;/h1>
&lt;h2 id="what-to-hand-in">What to hand in&lt;/h2>
&lt;p>The assignments will clearly state wether you need to hand in a LabReport as PDF, source code or both.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>if both PDF and source code have to be submitted, upload two files: a PDF and a zip with the source code. Please do &lt;strong>not&lt;/strong> include the PDF in the ZIP file.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If only a PDF has to be submitted, hand in the PDF. If only source code has to be submitted, hand in only the zip file.&lt;/p></description></item><item><title>Hugo Markdown</title><link>https://bkleinen.github.io/material/hugo/markdown/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/hugo/markdown/</guid><description>&lt;p>This is something in between a playground and a cheatsheet for hugo markdown.&lt;/p>
&lt;h2 id="markdown-in-hugo">Markdown in Hugo&lt;/h2>
&lt;p>&lt;a href="https://gohugo.io/getting-started/configuration-markup/">https://gohugo.io/getting-started/configuration-markup/&lt;/a>&lt;/p>
&lt;ol>
&lt;li>&lt;del>strikethrough&lt;/del>&lt;/li>
&lt;li>
&lt;pre tabindex="0">&lt;code class="language-strikethrough~~~" data-lang="strikethrough~~~">&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;del>not strikethrough&lt;/del>&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="https://www.markdownguide.org/">https://www.markdownguide.org/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.markdownguide.org/tools/">https://www.markdownguide.org/tools/&lt;/a>&lt;/p>
&lt;h2 id="ordered-lists">Ordered Lists&lt;/h2>
&lt;p>&lt;a href="https://www.markdownguide.org/basic-syntax#ordered-lists">https://www.markdownguide.org/basic-syntax#ordered-lists&lt;/a>&lt;/p>
&lt;ol>
&lt;li>One
&lt;ol>
&lt;li>Ident Sublists 4 Spaces or 1 Tab more&lt;/li>
&lt;li>Numbering does not have to be correct in the source
&lt;ol>
&lt;li>But the first number matters&lt;/li>
&lt;li>second 42 is not a 42&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Without a one it is not even recognized as a list
42. But the first number matters
42. second 42 is not a 43&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Two&lt;/li>
&lt;/ol>
&lt;h2 id="code-in-lists">Code in Lists&lt;/h2>
&lt;ol>
&lt;li>One
&lt;ol>
&lt;li>Ident Sublists 4 Spaces or 1 Tab more&lt;/li>
&lt;li>Numbering does not have to be correct in the source
&lt;ol>
&lt;li>
&lt;p>But the first number matters&lt;/p></description></item><item><title>Impressum</title><link>https://bkleinen.github.io/contact/impressum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/contact/impressum/</guid><description>&lt;p>Diese Seite dient der Information meiner Studierenden über Kurse und generell
Organisation ihres Studiums. Sie verwendet keine Cookies und speichert über
die Informationen, die die jeweiligen Webserver unter &lt;a href="https://home.htw-berlin.de">https://home.htw-berlin.de&lt;/a>
und &lt;a href="https://github.com">https://github.com&lt;/a> für den Mirror unter &lt;a href="https://bkleinen.github.io">https://bkleinen.github.io&lt;/a> als
übliche Serverlogs speichern, keine Informationen. Weitere Informationen finden
Sie in der &lt;a href="../datenschutzerklaerung">Datenschutzerklärung&lt;/a>.&lt;/p>
&lt;h2 id="herausgeber">Herausgeber&lt;/h2>
&lt;p>Prof. Dr. Barne Kleinen&lt;br>
HTW Berlin, Fachbereich 4&lt;br>
Wilhelminenhofstr. 75A&lt;br>
12495 Berlin&lt;/p>
&lt;p>&lt;a href="mailto:barne.kleinen@htw-berlin.de">barne.kleinen@htw-berlin.de&lt;/a>&lt;/p>
&lt;p>Telefon: +49 30 5019 - 3499&lt;/p></description></item><item><title>Independent Coursework</title><link>https://bkleinen.github.io/studies/ic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/studies/ic/</guid><description>&lt;p>Prof. Weber-Wulff compiled a &lt;a href="https://people.f4.htw-berlin.de/~weberwu/PA/Independent-Coursework-Guide-2015-01-22.pdf">hand-out about ICs&lt;/a>, as Prüfungsausschussvorsitzende. (&lt;a href="./Independent-Coursework-Guide-2015-01-22.pdf">Mirror on my site&lt;/a>) I find it highly informative. Please read it!&lt;/p>
&lt;p>In addition to that, my specific rules about ICs are as follows:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>You need to talk to me - preferably during the office hours (see below) - about your topic
and register in LSF for the correct semester and course (IC1 or IC2). You will be rejected first and accepted later manually, please re-register as long as possible/necessary (Neuanmeldung). (Don&amp;rsquo;t ask. Or do ask learn about possible clashes of business processes and supporting IT.)&lt;/p></description></item><item><title>Info 1 - Schedule</title><link>https://bkleinen.github.io/classes/ss2018/info1/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/schedule/</guid><description>&lt;p>This schedule is tentative and subject to change.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Lecture&lt;/th>
 &lt;th style="text-align: left">Chapter&lt;/th>
 &lt;th style="text-align: left">Lab&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-04-03&lt;/td>
 &lt;td style="text-align: left">no class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-04-06&lt;/td>
 &lt;td style="text-align: left">Introduction to Class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-04-10&lt;/td>
 &lt;td style="text-align: left">Objects, Classes, Methods, BlueJ, Parameters, Compiler&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-01">Exercise 01&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-04-13&lt;/td>
 &lt;td style="text-align: left">Class Definitions, Fields, Constructors, Methods, Parameters, Assignment, Getters and Setter&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-04-17&lt;/td>
 &lt;td style="text-align: left">Printing to the command line, Conditional, Local Variables,Expressions&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-02">Exercise 02&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-04-20&lt;/td>
 &lt;td style="text-align: left">Abstraction, Modularization, Object Interaction&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-04-24&lt;/td>
 &lt;td style="text-align: left">Object Creation, Object and Class Diagrams, Primitive Types, Object Types, Multiple Constructors, Debugger&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-03">Exercise 03&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-04-27&lt;/td>
 &lt;td style="text-align: left">Collections, Generics, for-each, While Loops&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-05-01 *&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;- no class &amp;mdash;&amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-04">Exercise 04&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-05-04&lt;/td>
 &lt;td style="text-align: left">More Loops, Iterators, Arrays, For Loops&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-05-08&lt;/td>
 &lt;td style="text-align: left">Loops&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">&amp;ndash; week 17: no lab on Tue, week 18: no lab on Fri &amp;ndash;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-05-11 *&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;- no class &amp;mdash;&amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-05-15&lt;/td>
 &lt;td style="text-align: left">Graphical User Interfaces, Lambda Functions&lt;/td>
 &lt;td style="text-align: left">5 (13)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-05">Exercise 05&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-05-18&lt;/td>
 &lt;td style="text-align: left">Lambda Functions, Filter, Map, Reduce&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-05-22&lt;/td>
 &lt;td style="text-align: left">Library Classes, Reading Class Documentation, Random, Packages, (Hash)Maps&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-06">Exercise 06&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-05-25&lt;/td>
 &lt;td style="text-align: left">Public vs. Private, Interfaces, Class Variables, Writing Class Documentation&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-05-29&lt;/td>
 &lt;td style="text-align: left">Arrays&lt;/td>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-07">Exercise 07&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-06-01&lt;/td>
 &lt;td style="text-align: left">Unit Testing, Test Automation&lt;/td>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-06-05&lt;/td>
 &lt;td style="text-align: left">Modularization, Interfaces, Debugging, Walkthroughs, Testing and Interfaces&lt;/td>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-08">Exercise 08&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-06-08&lt;/td>
 &lt;td style="text-align: left">Designing Classes, Coupling, Cohesion, Refactoring&lt;/td>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-06-12&lt;/td>
 &lt;td style="text-align: left">Refactoring&lt;/td>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-09">Exercise 09&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-06-15&lt;/td>
 &lt;td style="text-align: left">Refactoring, Using the main method&lt;/td>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-06-19&lt;/td>
 &lt;td style="text-align: left">Inheritance, Subtyping, Polymorphism, Protected, Casting&lt;/td>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-10">Exercise 10&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-06-22&lt;/td>
 &lt;td style="text-align: left">Polymorphism, Static vs. dynamic typing, Overriding, Object equality&lt;/td>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-06-26&lt;/td>
 &lt;td style="text-align: left">Abstract Classes, Interfaces&lt;/td>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-11">Exercise 11&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-06-29&lt;/td>
 &lt;td style="text-align: left">Handling Errors, Exceptions, Assertions,&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-07-03&lt;/td>
 &lt;td style="text-align: left">File-based IO, Files, Command Line&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-12">Exercise 12&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-07-06&lt;/td>
 &lt;td style="text-align: left">Trial Exams&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-07-10&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; Start of the exam period &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">reports due - Trial Exams&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-07-13&lt;/td>
 &lt;td style="text-align: left">EXAM&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-07-17&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-07-20&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-07-24&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-07-27&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Info 1 - Schedule</title><link>https://bkleinen.github.io/classes/ss2021/info1/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/schedule/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week / KW&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Kick Off Date&lt;/th>
 &lt;th style="text-align: left">Topic&lt;/th>
 &lt;th style="text-align: left">Lab Assignment&lt;/th>
 &lt;th style="text-align: left">Material&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">Fri 09/04/2021&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Introduction to Class &amp;amp; Labs, Chapter 01 - Objects and Classes&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-01">Exercise 01 - Getting Started and Shapes&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/htw-imi-info1/chapter%5C1/tree/ss2021">Source Code&lt;/a>,&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Objects, Classes, Methods, BlueJ, Parameters, Compiler&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">[Video Part 1][101], [2][102]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 16/04/2021&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Chapter 02 - Understanding Class Definitions&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-02">Exercise 02 - Ticket Machine&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/htw-imi-info1/chapter02/tree/ss2021">Source Code&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Class Definitions, Fields, Constructors, Methods, Parameters, Assignment, Getters and Setter, Printing to the command line, Conditional, Local Variables, Expressions&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">[Video Part 1][201], [2][202], [3][203], [4][204], [5][205], [6][206], [7][207], [8][208], [9][209]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 23/04/2021&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Chapter 03 - Object Interaction&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-03">Exercise 03 - Book Exercise&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/htw-imi-info1/chapter03/tree/ss2021">Source Code&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Abstraction, Modularization, Object Interaction, Object Creation, Object and Class Diagrams, Primitive Types, Object Types, Multiple Constructors, Debugger&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">[Video Part 1][301], [2][302]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 30/04/2021&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Chapter 04 - Grouping Objects&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-04">Exercise 04 - Rock Around the Clock - Part 1&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/htw-imi-info1/chapter04/tree/ss2021">Source Code&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Collections, Generics, for-each, While Loops, More Loops, Iterators, Arrays, For Loops&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">[Video Part 1][401], [2][402], [3][403], [4][404], [5][405]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 07/05/2021&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Chapter 05 - Functional Processing of Collections (Advanced)&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-05">Exercise 05 - Rock Around the Clock - Part 2&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/htw-imi-info1/chapter05/tree/ss2021">Source Code&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Lambda Functions, Filter, Map, Reduce&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">[Video Part 1][501], [2][502]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 14/05/2021 *&lt;/td>
 &lt;td style="text-align: left">&lt;em>Vorlesungsfrei&lt;/em> - &lt;strong>Chapter 06 - More-Sophisticated Behavior&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-06">Exercise 06 - A Better Notebook&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/htw-imi-info1/chapter06/tree/ss2021">Source Code&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Library Classes, Reading Class Documentation, Random, Packages, (Hash)Maps, Public vs. Private, Interfaces, Class Variables, Writing Class Documentation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">[Video Part 1][601], [2][602], [3][603]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 21/05/2021&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Chapter 07 - Fixed-Size Collections—Arrays&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-07">Exercise 07 - Lambdas and Streams&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/htw-imi-info1/chapter07/tree/ss2021">Source Code&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Arrays&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">[Video Part 1][701], [2][702]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 28/05/2021&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Chapter 08 - Designing Classes&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-08">Exercise 08 - Lotto&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/htw-imi-info1/chapter08/tree/ss2021">Source Code&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Designing Classes, Coupling, Cohesion, Refactoring, Using the main method&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">[Video Part 1][801], [2][802], [3][803], [4][804]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 04/06/2021&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Chapter 09 - Well-Behaved Objects&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-09">Exercise 09 - Technical Support&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/htw-imi-info1/chapter09/tree/ss2021">Source Code&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Modularization, Interfaces, Debugging, Walkthroughs, Testing and Interfaces, Unit Testing, Test Automation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">[Video Part 1][901], [2][902], [3][903]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 11/06/2021&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Chapter 10 - Improving Structure with Inheritance&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-10">Exercise 10 - Bouncing Balls&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/htw-imi-info1/chapter10/tree/ss2021">Source Code&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Inheritance, Subtyping, Polymorphism, Protected, Casting, Polymorphism, Static vs. dynamic typing, Overriding, Object equality&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">[Video Part 1][1001], [2][1002], [3][1003]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 18/06/2021&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Chapter 11 - More about Inheritance&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-11">Exercise 11 - Testing with JUnit&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/htw-imi-info1/chapter11/tree/ss2021">Source Code&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Abstract Classes, Interfaces&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">[Video Part 1][1101], [2][1102], [3][1103]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 25/06/2021&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Chapter 12 - Further Abstraction Techniques&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-inheritance">Joker Exercise&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/htw-imi-info1/chapter12/tree/ss2021">Source Code&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Abstract Classes, Abstract Methods, Multiple inheritance, Interfaces&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">[Video Part 1][1201], [2][1202]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 02/07/2021&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Chapter 13 - Building Graphical User Interfaces&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">PA 1 6.7.&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/htw-imi-info1/chapter13/tree/ss2021">Source Code&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Graphical User Interfaces&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">[Video][1301]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 09/07/2021&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Chapter 14 - Handling Errors&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">PA 2 13.7.&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/htw-imi-info1/chapter14/tree/ss2021">Source Code&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Handling Errors, Exceptions, Assertions, File-based IO, Files, Command Line&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">[Video][1401]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Fri 16/07/2021&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">Showtime&lt;/td>
 &lt;td style="text-align: left">PA 3 20.7.&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>Exam period: 05/07/2021-24/07/2021&lt;/p></description></item><item><title>Info 1 - Schedule</title><link>https://bkleinen.github.io/classes/ws2019/info1/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/schedule/</guid><description>&lt;p>This schedule is tentative and subject to change.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Part&lt;/th>
 &lt;th style="text-align: left">Lecture&lt;/th>
 &lt;th style="text-align: left">Lab&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Tue, 2019-10-08&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Introduction to Class&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-00">Exercise Startup&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Introduction to Java, Programming with Kara&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Tue, 2019-10-15&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Introduction to Programming with Kara&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-01">Exercise 01&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Introduction to Programming with Kara&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Tue, 2019-10-22&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Objects, Classes, Methods, BlueJ, Parameters, Compiler (Chapter 01)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-02">Exercise 02&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Class Definitions, Fields, Constructors, Methods, Parameters, Assignment, Getters and Setter (Chapter 02)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Tue, 2019-10-29&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Printing to the command line, Conditional, Local Variables,Expressions (Chapter 02)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-03">Exercise 03&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Abstraction, Modularization, Object Interaction (Chapter 03)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Tue, 2019-11-05&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Object Creation, Object and Class Diagrams, Primitive Types, Object Types, Multiple Constructors, Debugger (Chapter 03)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-04">Exercise 04&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Collections, Generics, for-each, While Loops (Chapter 04)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Tue, 2019-11-12&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">More Loops, Iterators, Arrays, For Loops (Chapter 04)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-05">Exercise 05&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Loop Practice&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Tue, 2019-11-19&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Graphical User Interfaces, Lambda Functions (Chapter 13, Chapter 05)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-06">Exercise 06&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Lambda Functions, Filter, Map, Reduce (Chapter 05)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Tue, 2019-11-26&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Library Classes, Reading Class Documentation, Random, Packages, (Hash)Maps (Chapter 06)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-07">Exercise 07&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Public vs. Private, Interfaces, Class Variables, Writing Class Documentation (Chapter 06)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Tue, 2019-12-03&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Arrays (Chapter 07)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-08">Exercise 08&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Evaluation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Tue, 2019-12-10&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Unit Testing, Test Automation (Chapter 09)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-09">Exercise 09&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-09">Exercise 09&lt;/a>, Refactoring&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Tue, 2019-12-17&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Designing Classes, Coupling, Cohesion, Refactoring (Chapter 08)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-10">Exercise 10&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Refactoring, Using the main method (Chapter 08), Modularization, Interfaces, Debugging, Walkthroughs, Testing and Interfaces (Chapter 09)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Tue, 2020-01-07&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Inheritance, Subtyping, Polymorphism, Protected, Casting (Chapter 10)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-11">Exercise 11&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Polymorphism, Static vs. dynamic typing, Overriding, Object equality (Chapter 10)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Tue, 2020-01-14&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Abstract Classes, Interfaces (Chapter 11)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-12">Exercise 12&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Handling Errors, Exceptions, Assertions (Chapter 14)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Tue, 2020-01-21&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">File-based IO, Files, Command Line (Chapter 14)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Exam Preparation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Tue, 2020-01-28&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Q&amp;amp;A&lt;/td>
 &lt;td style="text-align: left">Trial Exams in KW 5 (Mo+Mi)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">Tue, 2020-02-04&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">EXAM&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Info 1 SoSe 2021 - Konzept Lernteamcoaching</title><link>https://bkleinen.github.io/classes/ss2021/info1/week/lernteamcoaching/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/week/lernteamcoaching/</guid><description>&lt;h1 id="lernteamcoaching-in-der-distanzlehre-in-info1">Lernteamcoaching in der Distanzlehre in Info1&lt;/h1>
&lt;p>Im Sommersemester 2021 wird Info1 nach dem didaktischen Konzept des Lernteamcoachings durchgeführt. Hierbei erarbeiten sich Studierende Inhalte zunächst individuell und dann gemeinsam in der Gruppe. Schliesslich wird jede Kleingruppe 1 x Woche gecoacht.&lt;/p>
&lt;p>Thema der Woche ist jeweils ein Kapitel im Buch &amp;ldquo;Object First with Java&amp;rdquo; sowie ein Lab Assignment. Die Lab Assignments beziehen sich überwiegend auf die Kapitel der Wochen davor, so dass nicht unmittelbar der aktuelle Stoff schon verstanden sein muss, um das Lab bearbeiten zu können.&lt;/p></description></item><item><title>Info 2 Finger Exercises</title><link>https://bkleinen.github.io/classes/ss2020/info2/material/topic02_1_finger_exercises/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/material/topic02_1_finger_exercises/</guid><description>&lt;p>This is a small collection of programming finger exercises to get you back to
programming java, and to get to know your new programming environment.&lt;/p>
&lt;p>I&amp;rsquo;ve numbered them for easier referencing in the Q&amp;amp;A.&lt;/p>
&lt;h1 id="basic-exercises">Basic Exercises&lt;/h1>
&lt;h1 id="fe_1-count-0s-in-an-array">FE_1: Count 0s in an array&lt;/h1>
&lt;p>Write a method that takes an integer array as parameter and returns the number of 0 contained in it.&lt;/p>
&lt;h1 id="fe_2-count-occurrences-of-an-character-in-a-string">FE_2: Count occurrences of an character in a String&lt;/h1>
&lt;p>Write a method that takes a String s and a character c as parameters and returns
the number of occurrences of c in s.&lt;/p></description></item><item><title>Info 2 Material - Algorithms and Data Structures</title><link>https://bkleinen.github.io/classes/ss2020/info2/material/algorithms_and_datastructures/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/material/algorithms_and_datastructures/</guid><description>&lt;h2 id="textbooks-and-material">Textbooks and Material&lt;/h2>
&lt;h3 id="algorithms-and-data-structures-in-general">Algorithms and Data Structures in General&lt;/h3>
&lt;p>The broader topic of this course is Algorithms and Data Structures. You&amp;rsquo;ll find lots of textbooks and other material on this general and all of it singular topics.
I picked out three textbooks:&lt;/p>
&lt;h1 id="overview">Overview&lt;/h1>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;h1 id="detailed-info">Detailed Info&lt;/h1>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted --></description></item><item><title>Info 2 Material Topic 01 - CRC Cards</title><link>https://bkleinen.github.io/classes/ss2020/info2/material/topic01_crc_cards/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/material/topic01_crc_cards/</guid><description>&lt;h1 id="crc-cards">CRC Cards&lt;/h1>
&lt;h2 id="literature">Literature&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;h2 id="software-suggestions">Software Suggestions&lt;/h2></description></item><item><title>Info 2 Python</title><link>https://bkleinen.github.io/classes/ss2020/info2/material/python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/material/python/</guid><description>&lt;h1 id="intro">Intro&lt;/h1>
&lt;p>Learn python with unit tests: &lt;a href="https://github.com/htw-imi-info2/learn-python-with-tests/tree/ws2018">https://github.com/htw-imi-info2/learn-python-with-tests/tree/ws2018&lt;/a>&lt;/p>
&lt;h1 id="algorithms-and-datastructure-examples-from-introduction-to-programming-in-python">Algorithms and Datastructure Examples from &amp;ldquo;Introduction to Programming in Python&amp;rdquo;&lt;/h1>
&lt;p>Home Page of the Book: &lt;a href="https://introcs.cs.princeton.edu/python/home">Introduction to Programming in Python&lt;/a>&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>You need to install a couple of additional packages to be able to run most
of the examples in the book. See the To get started
section on the &lt;a href="https://introcs.cs.princeton.edu/python/home">Home Page&lt;/a> -
you can stop above &amp;ldquo;Configuring IDLE&amp;rdquo; if you already have a way to edit and
run python programs on your computer.&lt;/p></description></item><item><title>Info 2 Python</title><link>https://bkleinen.github.io/classes/ws2018/info2/material/python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/material/python/</guid><description>&lt;h1 id="intro">Intro&lt;/h1>
&lt;p>Learn python with unit tests: &lt;a href="https://github.com/htw-imi-info2/learn-python-with-tests/tree/ws2018">https://github.com/htw-imi-info2/learn-python-with-tests/tree/ws2018&lt;/a>&lt;/p>
&lt;h1 id="algorithms-and-datastructure-examples-from-introduction-to-programming-in-python">Algorithms and Datastructure Examples from &amp;ldquo;Introduction to Programming in Python&amp;rdquo;&lt;/h1>
&lt;p>Home Page of the Book: &lt;a href="https://introcs.cs.princeton.edu/python/home">Introduction to Programming in Python&lt;/a>&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>You need to install a couple of additional packages to be able to run most
of the examples in the book. See the To get started
section on the &lt;a href="https://introcs.cs.princeton.edu/python/home">Home Page&lt;/a> -
you can stop above &amp;ldquo;Configuring IDLE&amp;rdquo; if you already have a way to edit and
run python programs on your computer.&lt;/p></description></item><item><title>Info 2 Textbooks - Algorithms and Data Structures</title><link>https://bkleinen.github.io/classes/ss2024/info2/material/algorithms_and_datastructures/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/material/algorithms_and_datastructures/</guid><description>&lt;h2 id="textbooks-and-material">Textbooks and Material&lt;/h2>
&lt;p>The broader topic of this course is Algorithms and Data Structures. You&amp;rsquo;ll find lots of textbooks and other material on this general and all of it singular topics.
I picked out three textbooks:&lt;/p>
&lt;h2 id="1-robert-sedgewick-and-kevin-wayne-algorithms-4th-ed">1. Robert Sedgewick and Kevin Wayne: Algorithms, 4th ed.&lt;/h2>
&lt;p>Excellent Textbook. A condensed version of the text is available on
the companion website:
&lt;a href="https://algs4.cs.princeton.edu/home/">https://algs4.cs.princeton.edu/home/&lt;/a>&lt;/p>
&lt;p>This is a Coursera Course based on this Textbook: &lt;a href="https://www.coursera.org/learn/algorithms-part1">Algorithms, Part I&lt;/a>, &lt;a href="https://www.coursera.org/learn/algorithms-part2">Algorithms, Part II&lt;/a>
as well as &lt;a href="https://www.coursera.org/learn/cs-algorithms-theory-machines">Computer Science: Algorithms, Theory, and Machines&lt;/a> by the same author which we will use for finite state automata.&lt;/p></description></item><item><title>Info 2 Worksheet 01 - Files</title><link>https://bkleinen.github.io/classes/ss2017/info2/worksheets/files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/worksheets/files/</guid><description>&lt;h1 id="a-how-long-can-a-string-be">A. How long can a String be?&lt;/h1>
&lt;p>In the lecture, I showed you a method for reading small files directly into a String,
which can only be used for small files. But what exactly is small? As it creates a String holding the whole file content,
it can&amp;rsquo;t be bigger than the maximum length of a String in Java. But how long can
a String in Java be?&lt;/p>
&lt;ol>
&lt;li>Find answers for that on the internet.&lt;/li>
&lt;li>How would you go about just trying out how large a String can be on your machine?
Write down a program for determining the maximum String size.&lt;/li>
&lt;li>Implement the Program. How big can the String be? How long does it take to run?&lt;/li>
&lt;li>How do you influence the Heap size of your java virtual machine?&lt;/li>
&lt;li>Inspect the memory usage of your program using &lt;a href="https://docs.oracle.com/javase/7/docs/technotes/guides/visualvm/intro.html">Java VisualVM&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1 id="b-nio-classes-and-interfaces">B. NIO Classes and Interfaces&lt;/h1>
&lt;ol>
&lt;li>Find all the classes and interfaces mentioned in the examples in the last lecture.&lt;/li>
&lt;li>What classes are System.out and System.in instances of?&lt;/li>
&lt;li>Draw a diagram showing the relations between all those classes and interfaces. Use &amp;laquo;interface&amp;raquo; to
mark interfaces, and dotted lines to show that a class implements an interface. If you want to see examples, see &lt;a href="https://www.ibm.com/developerworks/rational/library/content/RationalEdge/sep04/bell/">Figure 10 here&lt;/a>.&lt;/li>
&lt;/ol>
&lt;h1 id="c-how-to-test-a-program-working-on-a-file">C. How to test a program working on a file?&lt;/h1>
&lt;p>(Unit-)Testing programs that work on files is somewhat difficult, because the tests will
depend on matching test files residing (and be found) on the file system.
Let&amp;rsquo;s say you want to write a program that counts the number of words contained in a
given file.&lt;/p></description></item><item><title>Info 2 Worksheet 01 - Files</title><link>https://bkleinen.github.io/classes/ss2020/info2/worksheets/files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/worksheets/files/</guid><description>&lt;h1 id="a-how-long-can-a-string-be">A. How long can a String be?&lt;/h1>
&lt;p>In the lecture, I showed you a method for reading small files directly into a String,
which can only be used for small files. But what exactly is small? As it creates a String holding the whole file content,
it can&amp;rsquo;t be bigger than the maximum length of a String in Java. But how long can
a String in Java be?&lt;/p>
&lt;ol>
&lt;li>Find answers for that on the internet.&lt;/li>
&lt;li>How would you go about just trying out how large a String can be on your machine?
Write down a program for determining the maximum String size.&lt;/li>
&lt;li>Implement the Program. How big can the String be? How long does it take to run?&lt;/li>
&lt;li>How do you influence the Heap size of your java virtual machine?&lt;/li>
&lt;li>Inspect the memory usage of your program using &lt;a href="https://docs.oracle.com/javase/7/docs/technotes/guides/visualvm/intro.html">Java VisualVM&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1 id="b-nio-classes-and-interfaces">B. NIO Classes and Interfaces&lt;/h1>
&lt;ol>
&lt;li>Find all the classes and interfaces mentioned in the examples in the last lecture.&lt;/li>
&lt;li>What classes are System.out and System.in instances of?&lt;/li>
&lt;li>Draw a diagram showing the relations between all those classes and interfaces. Use &amp;laquo;interface&amp;raquo; to
mark interfaces, and dotted lines to show that a class implements an interface. If you want to see examples, see &lt;a href="https://www.ibm.com/developerworks/rational/library/content/RationalEdge/sep04/bell/">Figure 10 here&lt;/a>.&lt;/li>
&lt;/ol>
&lt;h1 id="c-how-to-test-a-program-working-on-a-file">C. How to test a program working on a file?&lt;/h1>
&lt;p>(Unit-)Testing programs that work on files is somewhat difficult, because the tests will
depend on matching test files residing (and be found) on the file system.
Let&amp;rsquo;s say you want to write a program that counts the number of words contained in a
given file.&lt;/p></description></item><item><title>Info 2 Worksheet 01 - Files</title><link>https://bkleinen.github.io/classes/ss2024/info2/worksheets/files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/worksheets/files/</guid><description>&lt;h1 id="a-how-long-can-a-string-be">A. How long can a String be?&lt;/h1>
&lt;p>In the lecture, I showed you a method for reading small files directly into a String,
which can only be used for small files. But what exactly is small? As it creates a String holding the whole file content,
it can&amp;rsquo;t be bigger than the maximum length of a String in Java. But how long can
a String in Java be?&lt;/p>
&lt;ol>
&lt;li>Find answers for that on the internet.&lt;/li>
&lt;li>How would you go about just trying out how large a String can be on your machine?
Write down a program for determining the maximum String size.&lt;/li>
&lt;li>Implement the Program. How big can the String be? How long does it take to run?&lt;/li>
&lt;li>How do you influence the Heap size of your java virtual machine?&lt;/li>
&lt;li>Inspect the memory usage of your program using &lt;a href="https://docs.oracle.com/javase/7/docs/technotes/guides/visualvm/intro.html">Java VisualVM&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1 id="b-nio-classes-and-interfaces">B. NIO Classes and Interfaces&lt;/h1>
&lt;ol>
&lt;li>Find all the classes and interfaces mentioned in the examples in the last lecture.&lt;/li>
&lt;li>What classes are System.out and System.in instances of?&lt;/li>
&lt;li>Draw a diagram showing the relations between all those classes and interfaces. Use &amp;laquo;interface&amp;raquo; to
mark interfaces, and dotted lines to show that a class implements an interface. If you want to see examples, see &lt;a href="https://www.ibm.com/developerworks/rational/library/content/RationalEdge/sep04/bell/">Figure 10 here&lt;/a>.&lt;/li>
&lt;/ol>
&lt;h1 id="c-how-to-test-a-program-working-on-a-file">C. How to test a program working on a file?&lt;/h1>
&lt;p>(Unit-)Testing programs that work on files is somewhat difficult, because the tests will
depend on matching test files residing (and be found) on the file system.
Let&amp;rsquo;s say you want to write a program that counts the number of words contained in a
given file.&lt;/p></description></item><item><title>Info 2 Worksheet 01 - Files</title><link>https://bkleinen.github.io/classes/ws2018/info2/worksheets/files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/worksheets/files/</guid><description>&lt;h1 id="a-how-long-can-a-string-be">A. How long can a String be?&lt;/h1>
&lt;p>In the lecture, I showed you a method for reading small files directly into a String,
which can only be used for small files. But what exactly is small? As it creates a String holding the whole file content,
it can&amp;rsquo;t be bigger than the maximum length of a String in Java. But how long can
a String in Java be?&lt;/p>
&lt;ol>
&lt;li>Find answers for that on the internet.&lt;/li>
&lt;li>How would you go about just trying out how large a String can be on your machine?
Write down a program for determining the maximum String size.&lt;/li>
&lt;li>Implement the Program. How big can the String be? How long does it take to run?&lt;/li>
&lt;li>How do you influence the Heap size of your java virtual machine?&lt;/li>
&lt;li>Inspect the memory usage of your program using &lt;a href="https://docs.oracle.com/javase/7/docs/technotes/guides/visualvm/intro.html">Java VisualVM&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1 id="b-nio-classes-and-interfaces">B. NIO Classes and Interfaces&lt;/h1>
&lt;ol>
&lt;li>Find all the classes and interfaces mentioned in the examples in the last lecture.&lt;/li>
&lt;li>What classes are System.out and System.in instances of?&lt;/li>
&lt;li>Draw a diagram showing the relations between all those classes and interfaces. Use &amp;laquo;interface&amp;raquo; to
mark interfaces, and dotted lines to show that a class implements an interface. If you want to see examples, see &lt;a href="https://www.ibm.com/developerworks/rational/library/content/RationalEdge/sep04/bell/">Figure 10 here&lt;/a>.&lt;/li>
&lt;/ol>
&lt;h1 id="c-how-to-test-a-program-working-on-a-file">C. How to test a program working on a file?&lt;/h1>
&lt;p>(Unit-)Testing programs that work on files is somewhat difficult, because the tests will
depend on matching test files residing (and be found) on the file system.
Let&amp;rsquo;s say you want to write a program that counts the number of words contained in a
given file.&lt;/p></description></item><item><title>Info 2 Worksheet 01 - Files</title><link>https://bkleinen.github.io/classes/ws2021/info2/worksheets/files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/worksheets/files/</guid><description>&lt;h1 id="a-how-long-can-a-string-be">A. How long can a String be?&lt;/h1>
&lt;p>In the lecture, I showed you a method for reading small files directly into a String,
which can only be used for small files. But what exactly is small? As it creates a String holding the whole file content,
it can&amp;rsquo;t be bigger than the maximum length of a String in Java. But how long can
a String in Java be?&lt;/p>
&lt;ol>
&lt;li>Find answers for that on the internet.&lt;/li>
&lt;li>How would you go about just trying out how large a String can be on your machine?
Write down a program for determining the maximum String size.&lt;/li>
&lt;li>Implement the Program. How big can the String be? How long does it take to run?&lt;/li>
&lt;li>How do you influence the Heap size of your java virtual machine?&lt;/li>
&lt;li>Inspect the memory usage of your program using &lt;a href="https://docs.oracle.com/javase/7/docs/technotes/guides/visualvm/intro.html">Java VisualVM&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1 id="b-nio-classes-and-interfaces">B. NIO Classes and Interfaces&lt;/h1>
&lt;ol>
&lt;li>Find all the classes and interfaces mentioned in the examples in the last lecture.&lt;/li>
&lt;li>What classes are System.out and System.in instances of?&lt;/li>
&lt;li>Draw a diagram showing the relations between all those classes and interfaces. Use &amp;laquo;interface&amp;raquo; to
mark interfaces, and dotted lines to show that a class implements an interface. If you want to see examples, see &lt;a href="https://www.ibm.com/developerworks/rational/library/content/RationalEdge/sep04/bell/">Figure 10 here&lt;/a>.&lt;/li>
&lt;/ol>
&lt;h1 id="c-how-to-test-a-program-working-on-a-file">C. How to test a program working on a file?&lt;/h1>
&lt;p>(Unit-)Testing programs that work on files is somewhat difficult, because the tests will
depend on matching test files residing (and be found) on the file system.
Let&amp;rsquo;s say you want to write a program that counts the number of words contained in a
given file.&lt;/p></description></item><item><title>Info 2 Worksheet 02 - Threads</title><link>https://bkleinen.github.io/classes/ss2017/info2/worksheets/threads/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/worksheets/threads/</guid><description>&lt;h1 id="a-visualize-concurrency">A. Visualize Concurrency&lt;/h1>
&lt;p>Write a little program that starts some threads (2-6 maybe) that create
an output visualizing the switch between the threads.
e.g.&lt;/p>
&lt;pre>&lt;code>Thread A running
Thread A running
Thread A running
Thread B running
Thread B running
Thread C running
Thread C running
Thread C running
Thread A running
&lt;/code>&lt;/pre>
&lt;h1 id="b-create-a-deadlock">B. Create a Deadlock&lt;/h1>
&lt;p>Write a little Program that creates a deadlock.&lt;/p>
&lt;h1 id="c-is-java-hashmap-thread-safe">C. Is Java HashMap Thread Safe?&lt;/h1>
&lt;h1 id="d-atomic-and-non-atomic-operations">D. Atomic and non-Atomic Operations&lt;/h1>
&lt;p>What will be the sum? Why might this not be safe?&lt;/p></description></item><item><title>Info 2 Worksheet 02 - Threads</title><link>https://bkleinen.github.io/classes/ss2020/info2/worksheets/threads/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/worksheets/threads/</guid><description>&lt;h1 id="a-visualize-concurrency">A. Visualize Concurrency&lt;/h1>
&lt;p>Write a little program that starts some threads (2-6 maybe) that create
an output visualizing the switch between the threads.
e.g.&lt;/p>
&lt;pre>&lt;code>Thread A running
Thread A running
Thread A running
Thread B running
Thread B running
Thread C running
Thread C running
Thread C running
Thread A running
&lt;/code>&lt;/pre>
&lt;h1 id="b-create-a-deadlock">B. Create a Deadlock&lt;/h1>
&lt;p>Write a little Program that creates a deadlock.&lt;/p>
&lt;h1 id="c-is-java-hashmap-thread-safe">C. Is Java HashMap Thread Safe?&lt;/h1>
&lt;h1 id="d-atomic-and-non-atomic-operations">D. Atomic and non-Atomic Operations&lt;/h1>
&lt;p>What will be the sum? Why might this not be safe?&lt;/p></description></item><item><title>Info 2 Worksheet 02 - Threads</title><link>https://bkleinen.github.io/classes/ss2024/info2/worksheets/threads/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/worksheets/threads/</guid><description>&lt;h1 id="a-visualize-concurrency">A. Visualize Concurrency&lt;/h1>
&lt;p>Write a little program that starts some threads (2-6 maybe) that create
an output visualizing the switch between the threads.
e.g.&lt;/p>
&lt;pre>&lt;code>Thread A running
Thread A running
Thread A running
Thread B running
Thread B running
Thread C running
Thread C running
Thread C running
Thread A running
&lt;/code>&lt;/pre>
&lt;h1 id="b-create-a-deadlock">B. Create a Deadlock&lt;/h1>
&lt;p>Write a little Program that creates a deadlock.&lt;/p>
&lt;h1 id="c-is-java-hashmap-thread-safe">C. Is Java HashMap Thread Safe?&lt;/h1>
&lt;h1 id="d-atomic-and-non-atomic-operations">D. Atomic and non-Atomic Operations&lt;/h1>
&lt;p>What will be the sum? Why might this not be safe?&lt;/p></description></item><item><title>Info 2 Worksheet 02 - Threads</title><link>https://bkleinen.github.io/classes/ws2018/info2/worksheets/threads/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/worksheets/threads/</guid><description>&lt;h1 id="a-visualize-concurrency">A. Visualize Concurrency&lt;/h1>
&lt;p>Write a little program that starts some threads (2-6 maybe) that create
an output visualizing the switch between the threads.
e.g.&lt;/p>
&lt;pre>&lt;code>Thread A running
Thread A running
Thread A running
Thread B running
Thread B running
Thread C running
Thread C running
Thread C running
Thread A running
&lt;/code>&lt;/pre>
&lt;h1 id="b-create-a-deadlock">B. Create a Deadlock&lt;/h1>
&lt;p>Write a little Program that creates a deadlock.&lt;/p>
&lt;h1 id="c-is-java-hashmap-thread-safe">C. Is Java HashMap Thread Safe?&lt;/h1>
&lt;h1 id="d-atomic-and-non-atomic-operations">D. Atomic and non-Atomic Operations&lt;/h1>
&lt;p>What will be the sum? Why might this not be safe?&lt;/p></description></item><item><title>Info 2 Worksheet 02 - Threads</title><link>https://bkleinen.github.io/classes/ws2021/info2/worksheets/threads/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/worksheets/threads/</guid><description>&lt;h1 id="a-visualize-concurrency">A. Visualize Concurrency&lt;/h1>
&lt;p>Write a little program that starts some threads (2-6 maybe) that create
an output visualizing the switch between the threads.
e.g.&lt;/p>
&lt;pre>&lt;code>Thread A running
Thread A running
Thread A running
Thread B running
Thread B running
Thread C running
Thread C running
Thread C running
Thread A running
&lt;/code>&lt;/pre>
&lt;h1 id="b-create-a-deadlock">B. Create a Deadlock&lt;/h1>
&lt;p>Write a little Program that creates a deadlock.&lt;/p>
&lt;h1 id="c-is-java-hashmap-thread-safe">C. Is Java HashMap Thread Safe?&lt;/h1>
&lt;h1 id="d-atomic-and-non-atomic-operations">D. Atomic and non-Atomic Operations&lt;/h1>
&lt;p>What will be the sum? Why might this not be safe?&lt;/p></description></item><item><title>Info 3 Code Overview</title><link>https://bkleinen.github.io/classes/ws2014/info3/code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info3/code/</guid><description>&lt;p>All code examples can be found on the github organization &lt;a href="https://github.com/htw-imi-info3-archive">htw-imi-info3-archive&lt;/a> - please note that there&amp;rsquo;s also stuff form former semesters, this is the list of repositories &amp;ldquo;released&amp;rdquo; for this term WS2014/15:&lt;/p>
&lt;h2 id="lectures">Lectures&lt;/h2>
&lt;ul>
&lt;li>01: Ruby Learning &lt;a href="https://github.com/htw-imi-info3-archive/rubylearning">https://github.com/htw-imi-info3-archive/rubylearning&lt;/a>&lt;/li>
&lt;li>02: Git Demo &lt;a href="https://github.com/htw-imi-info3-archive/su-03-gitdemo">https://github.com/htw-imi-info3-archive/su-03-gitdemo&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="labs">Labs&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/htw-imi-info3-archive/lab-01-ruby-exercise">Lab 01 Ruby Exercise&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/htw-imi-info3-archive/lab-04-testing">Lab 04 Testing&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/htw-imi-info3-archive/lab-05-ruby-gilded-rose-kata">Lab 05 Legacy Code: Ruby Version&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/htw-imi-info3-archive/lab-05-JavaEclipseGildedRose">Lab 05 Legacy Code: Java Eclipse Version&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/htw-imi-info3-archive/lab-05-JavaMavenGildedRose">Lab 05 Legacy Code: Java Maven Version&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/htw-imi-info3-archive/lab-06-railsapp-HTW">Lab 06 Rails 1: HTW&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Info 3 Code Overview</title><link>https://bkleinen.github.io/classes/ws2015/info3/code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info3/code/</guid><description>&lt;p>All code examples can be found on the github organization &lt;a href="https://github.com/htw-imi-info3-archive">htw-imi-info3-archive&lt;/a> - please note that there&amp;rsquo;s also stuff form former semesters, this is the list of repositories &amp;ldquo;released&amp;rdquo; for this term WS2015/16:&lt;/p>
&lt;p>None so far.&lt;/p></description></item><item><title>Info 3 Code Overview</title><link>https://bkleinen.github.io/classes/ws2017/info3/code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/info3/code/</guid><description>&lt;p>All code examples can be found on the github organization &lt;a href="https://github.com/htw-imi-info3-archive">htw-imi-info3-archive&lt;/a> - please note that there&amp;rsquo;s also stuff form former semesters, this is the list of repositories &amp;ldquo;released&amp;rdquo; for this term WS2015/16:&lt;/p>
&lt;p>None so far.&lt;/p></description></item><item><title>Info 3 Code Overview</title><link>https://bkleinen.github.io/classes/ws2020/info3/code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/info3/code/</guid><description>&lt;p>All code examples can be found on the github organization &lt;a href="https://github.com/htw-imi-info3-archive">htw-imi-info3-archive&lt;/a> - please note that there&amp;rsquo;s also stuff form former semesters, this is the list of repositories &amp;ldquo;released&amp;rdquo; for this term WS2015/16:&lt;/p>
&lt;p>None so far.&lt;/p></description></item><item><title>Info 3 WS 20/21 Continuous Assessment</title><link>https://bkleinen.github.io/classes/ws2020/info3/continuous_assessment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/info3/continuous_assessment/</guid><description>&lt;p>Due to the ongoing pandemic, the exam will be replaced by continuous assessment.
The continuous assessment consists of a series of assignments. They have to be
handed in individually, except for CA4, Clean Code Poster.&lt;/p>
&lt;p>These assignments replace the exam part in the &lt;a href="../#grades">class&amp;rsquo; overall grading&lt;/a>,
the overall grading scheme and the Lab part is not changed.&lt;/p>
&lt;h2 id="assignments">Assignments&lt;/h2>
&lt;p>These are the the assignment slots with grading points. The assigments are marked in moodle as &amp;ldquo;CA#&amp;rdquo;&lt;/p></description></item><item><title>Info1 - Class Material Overview</title><link>https://bkleinen.github.io/classes/ss2021/info1/material/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/material/</guid><description>&lt;h1 id="video-overview">Video Overview&lt;/h1>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Chapter&lt;/th>
 &lt;th style="text-align: left">Link&lt;/th>
 &lt;th style="text-align: left">Length&lt;/th>
 &lt;th style="text-align: left">Time Sum&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Part 9&lt;/td>
 &lt;td style="text-align: left">Variables [9][209]&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">[Part 1][301]&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h1 id="exercise-overview">Exercise Overview&lt;/h1>
&lt;h2 id="chapter-01">Chapter 01&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Exercise&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1.1 - 1.3&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">1.30 - 1.35&lt;/td>
 &lt;td style="text-align: left">Prelab Lab 01&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Info1 - Code Examples Overview</title><link>https://bkleinen.github.io/classes/ss2018/info1/code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/code/</guid><description>&lt;h2 id="lecture-code-examples">Lecture Code Examples&lt;/h2>
&lt;p>Don&amp;rsquo;t worry about noting down any code changes I make in class - I will upload everything to github!
The &amp;ldquo;Changes in ws2018&amp;rdquo; links will only work after I&amp;rsquo;ve uploaded those changes.&lt;/p>
&lt;p>Note that it might also be quite convenient to look at the code on the github page online,
the commit history shows you the exact changes I made. Click on &amp;ldquo;commits&amp;rdquo; and then one
individual commit, and you you&amp;rsquo;ll see the changes.&lt;/p></description></item><item><title>Info1 - Code Examples Overview</title><link>https://bkleinen.github.io/classes/ss2021/info1/code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/code/</guid><description>&lt;h2 id="lecture-code-examples">Lecture Code Examples&lt;/h2>
&lt;p>Don&amp;rsquo;t worry about noting down any code changes I make in class - I will upload everything to github!
The &amp;ldquo;Changes in ss2021&amp;rdquo; links will only work after I&amp;rsquo;ve uploaded those changes.&lt;/p>
&lt;p>Note that it might also be quite convenient to look at the code on the github page online,
the commit history shows you the exact changes I made. Click on &amp;ldquo;commits&amp;rdquo; and then one
individual commit, and you you&amp;rsquo;ll see the changes.&lt;/p></description></item><item><title>Info1 - Code Examples Overview</title><link>https://bkleinen.github.io/classes/ws2014/info1/code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info1/code/</guid><description>&lt;h2 id="lectures">Lectures&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/htw-imi-info1/kara-scenario1">Kara Scenario 1&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/htw-imi-info1/kara/tree/master">Kara Scenarios for Worksheet&lt;/a> - &lt;a href="https://github.com/htw-imi-info1/kara/tree/ws2014">WS2014&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/htw-imi-info1/chapter01">Chapter 01&lt;/a> - &lt;a href="https://github.com/htw-imi-info1/chapter01/tree/ws2014">Changes in WS2014&lt;/a> - &lt;a href="https://github.com/htw-imi-info1/chapter01/archive/ws2014.zip">ZIP&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/htw-imi-info1/chapter02">Chapter 02&lt;/a> - &lt;a href="https://github.com/htw-imi-info1/chapter02/tree/ws2014">Changes in WS2014&lt;/a> - &lt;a href="https://github.com/htw-imi-info1/chapter02/archive/ws2014.zip">ZIP&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/htw-imi-info1/chapter03">Chapter 03&lt;/a> - &lt;a href="https://github.com/htw-imi-info1/chapter03/tree/ws2014">Changes in WS2014&lt;/a> - &lt;a href="https://github.com/htw-imi-info1/chapter03/archive/ws2014.zip">ZIP&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/htw-imi-info1/chapter04">Chapter 04&lt;/a> - &lt;a href="https://github.com/htw-imi-info1/chapter04/tree/ws2014">Changes in WS2014&lt;/a> - &lt;a href="https://github.com/htw-imi-info1/chapter04/archive/ws2014.zip">ZIP&lt;/a> - 18.11.2014: in music organizer v3&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/htw-imi-info1/chapter05">Chapter 05&lt;/a> - &lt;a href="https://github.com/htw-imi-info1/chapter05/tree/ws2014">Changes in WS2014&lt;/a> - &lt;a href="https://github.com/htw-imi-info1/chapter05/archive/ws2014.zip">ZIP&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/htw-imi-info1/chapter07_testing">Chapter 06/07 (Testing)&lt;/a> - &lt;a href="https://github.com/htw-imi-info1/chapter07_testing/tree/ws2014">Changes in WS2014&lt;/a> - &lt;a href="https://github.com/htw-imi-info1/chapter07_testing/archive/ws2014.zip">ZIP&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You can download the whole archives by using the ZIP Button present on the repository sites.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You can also look at single files online on github.&lt;/p></description></item><item><title>Info1 - Code Examples Overview</title><link>https://bkleinen.github.io/classes/ws2015/info1/code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info1/code/</guid><description>&lt;h2 id="lecture-code-examples">Lecture Code Examples&lt;/h2>
&lt;p>Don&amp;rsquo;t worry about noting down any code changes I make in class - I will upload everything here!
Thus, the &amp;ldquo;Changes in ws2015&amp;rdquo; links will only work after I&amp;rsquo;ve uploaded those changes.&lt;/p>
&lt;p>Note that it might also be quite convenient to look at the code on the github page online,
the commit history shows you exactly the changes I made. Click on &amp;ldquo;commits&amp;rdquo; and then one
individual commit, and you see something like &lt;a href="https://github.com/htw-imi-info1/kara/commits/ws2015">this&lt;/a>.&lt;/p></description></item><item><title>Info1 - Code Examples Overview</title><link>https://bkleinen.github.io/classes/ws2016/info1/code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/code/</guid><description>&lt;h2 id="lecture-code-examples">Lecture Code Examples&lt;/h2>
&lt;p>Don&amp;rsquo;t worry about noting down any code changes I make in class - I will upload everything here!
Thus, the &amp;ldquo;Changes in ws2016&amp;rdquo; links will only work after I&amp;rsquo;ve uploaded those changes.&lt;/p>
&lt;p>Note that it might also be quite convenient to look at the code on the github page online,
the commit history shows you exactly the changes I made. Click on &amp;ldquo;commits&amp;rdquo; and then one
individual commit, and you see something like &lt;a href="https://github.com/htw-imi-info1/kara/commits/ws2016">this&lt;/a>.&lt;/p></description></item><item><title>Info1 - Code Examples Overview</title><link>https://bkleinen.github.io/classes/ws2019/info1/code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/code/</guid><description>&lt;h2 id="lecture-code-examples">Lecture Code Examples&lt;/h2>
&lt;p>Don&amp;rsquo;t worry about noting down any code changes I make in class - I will upload everything to github!
The &amp;ldquo;Changes in ws2019&amp;rdquo; links will only work after I&amp;rsquo;ve uploaded those changes.&lt;/p>
&lt;p>Note that it might also be quite convenient to look at the code on the github page online,
the commit history shows you the exact changes I made. Click on &amp;ldquo;commits&amp;rdquo; and then one
individual commit, and you you&amp;rsquo;ll see the changes.&lt;/p></description></item><item><title>Info1 Notebooks</title><link>https://bkleinen.github.io/classes/ss2021/info1/notebook/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/info1/notebook/</guid><description>&lt;h2 id="notebook-chapter-summaries-and-exercises">Notebook: Chapter Summaries and Exercises&lt;/h2>
&lt;p>We will provide Paper Worksheets for each Chapter and encourage you to print
them out and work on them with real pens.&lt;/p>
&lt;p>They will be provided in a format that allows you to bind them as a book
later if you wish to.&lt;/p>
&lt;p>See &lt;a href="https://www.youtube.com/watch?v=s5iMJxdN5KE">Frau Schimpf: DIY: Buchbinden – Offene Fadenheftung&lt;/a>
for an easy german instruction how this might be done, or
&lt;a href="https://www.youtube.com/watch?v=S2FRKbQI2kY&amp;amp;t=307s">How to Make a Sketchbook | DIY Coptic Stitch Bookbinding Tutorial | Sea Lemon&lt;/a> for
an english one which also shows a different way to attach the cover.&lt;/p></description></item><item><title>Info1 WS2012 - Overview Code Examples</title><link>https://bkleinen.github.io/classes/ws2013/info1/code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/code/</guid><description>&lt;ul>
&lt;li>&lt;a href="https://github.com/htw-imi-info1/kara-scenario1">Kara Scenario 1&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Info1 Zusatzkurse</title><link>https://bkleinen.github.io/classes/ss2018/info1/extra/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/extra/</guid><description>&lt;h1 id="zusatzmodule-informatik1-sose-2018">Zusatzmodule Informatik1 SoSe 2018&lt;/h1>
&lt;h2 id="worum-geht-es">Worum geht es?&lt;/h2>
&lt;p>In Informatik 1 wird es dieses Semester zwei Zusatzkurse geben, die euch mit kleinen Projekten die Möglichkeit geben, Programmieren anders zu lernen bzw. zu vertiefen.
Die Kurse sind optional, ihr könnt aber durch erfolgreichen Abschluss eines Kurses zusätzliche Credits erwerben die im Umfang ungefähr zwei Lab Reports entsprechen.&lt;/p>
&lt;p>Es stehen zwei Kurse zur Auswahl, die auf dieser Seite kurz vorgestellt werden.&lt;/p>
&lt;ul>
&lt;li>Introduction to Creative Computing&lt;/li>
&lt;li>Graphical User Interface&lt;/li>
&lt;/ul>
&lt;h2 id="introduction-to-creative-computing">Introduction to Creative Computing&lt;/h2>
&lt;p>&lt;strong>Zielgruppe&lt;/strong>: Studierende ohne/mit wenig Programmiererfahrung&lt;/p></description></item><item><title>Info2 - Comparators Handout</title><link>https://bkleinen.github.io/classes/ss2014/info2/handouts/comparator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info2/handouts/comparator/</guid><description>&lt;p>These are the links to the sources of the various handouts regarding&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.oracle.com/javase/tutorial/java/concepts/interface.html">Interfaces&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/7/docs/api/java/util/Comparator.html">Comparator&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Comparable.html">Comparable&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Total_order">Total Order&lt;/a>&lt;/li>
&lt;li>How they are used?&lt;/li>
&lt;/ul></description></item><item><title>Info2 - Comparators Handout</title><link>https://bkleinen.github.io/classes/ss2015/info2/handouts/comparator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/info2/handouts/comparator/</guid><description>&lt;p>These are the links to the sources of the various handouts regarding&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.oracle.com/javase/tutorial/java/concepts/interface.html">Interfaces&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/7/docs/api/java/util/Comparator.html">Comparator&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Comparable.html">Comparable&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Total_order">Total Order&lt;/a>&lt;/li>
&lt;li>How they are used?&lt;/li>
&lt;/ul></description></item><item><title>Info2 - Comparators Handout</title><link>https://bkleinen.github.io/classes/ss2017/info2/handouts/comparator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/handouts/comparator/</guid><description>&lt;p>These are the links to the sources of the various handouts regarding&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.oracle.com/javase/tutorial/java/concepts/interface.html">Interfaces&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/7/docs/api/java/util/Comparator.html">Comparator&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Comparable.html">Comparable&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Total_order">Total Order&lt;/a>&lt;/li>
&lt;li>How they are used?&lt;/li>
&lt;/ul></description></item><item><title>Info2 - Comparators Handout</title><link>https://bkleinen.github.io/classes/ss2020/info2/misc/comparator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/misc/comparator/</guid><description>&lt;p>These are the links to the sources of the various handouts regarding&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.oracle.com/javase/tutorial/java/concepts/interface.html">Interfaces&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/7/docs/api/java/util/Comparator.html">Comparator&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Comparable.html">Comparable&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Total_order">Total Order&lt;/a>&lt;/li>
&lt;li>How they are used?&lt;/li>
&lt;/ul></description></item><item><title>Info2 - Comparators Handout</title><link>https://bkleinen.github.io/classes/ss2024/info2/misc/comparator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/misc/comparator/</guid><description>&lt;p>These are the links to the sources of the various handouts regarding&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.oracle.com/javase/tutorial/java/concepts/interface.html">Interfaces&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/7/docs/api/java/util/Comparator.html">Comparator&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Comparable.html">Comparable&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Total_order">Total Order&lt;/a>&lt;/li>
&lt;li>How they are used?&lt;/li>
&lt;/ul></description></item><item><title>Info2 - Comparators Handout</title><link>https://bkleinen.github.io/classes/ws2018/info2/misc/comparator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/misc/comparator/</guid><description>&lt;p>These are the links to the sources of the various handouts regarding&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.oracle.com/javase/tutorial/java/concepts/interface.html">Interfaces&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/7/docs/api/java/util/Comparator.html">Comparator&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Comparable.html">Comparable&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Total_order">Total Order&lt;/a>&lt;/li>
&lt;li>How they are used?&lt;/li>
&lt;/ul></description></item><item><title>Info2 - Comparators Handout</title><link>https://bkleinen.github.io/classes/ws2021/info2/misc/comparator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/misc/comparator/</guid><description>&lt;p>These are the links to the sources of the various handouts regarding&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.oracle.com/javase/tutorial/java/concepts/interface.html">Interfaces&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/7/docs/api/java/util/Comparator.html">Comparator&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Comparable.html">Comparable&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Total_order">Total Order&lt;/a>&lt;/li>
&lt;li>How they are used?&lt;/li>
&lt;/ul></description></item><item><title>Info2 - Euclid Handout</title><link>https://bkleinen.github.io/classes/ss2014/info2/handouts/euclid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info2/handouts/euclid/</guid><description>&lt;p>Euclid of Alexandria (Greek : Εὐκλείδης, Eukleides) (* circa 365; † 275 BC) was a Greek mathematician, now known as &amp;ldquo;the father of geometry&amp;rdquo;. His most famous work is Elements, widely considered to be history&amp;rsquo;s most successful textbook. Within it, the properties of geometrical objects and integers are deduced from a small set of axioms, thereby anticipating (and partly inspiring) the axiomatic method of modern mathematics.1&lt;/p>
&lt;h2 id="elements-book-vii-proposition-2">Elements: Book VII, Proposition 2:&lt;/h2>
&lt;p>To find the greatest common measure of two given numbers not relatively prime.&lt;/p></description></item><item><title>Info2 - Euclid Handout</title><link>https://bkleinen.github.io/classes/ss2015/info2/handouts/euclid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/info2/handouts/euclid/</guid><description>&lt;p>Euclid of Alexandria( Greek:Εὐκλείδης, Euclides;
* ca. 365
† 275 BC) was a Greek mathematician, now known as &amp;ldquo;the father of geometry&amp;rdquo;. His most famous work is Elements, widely considered to be history&amp;rsquo;s most successful textbook. Within it, the properties of geometrical objects and integers are deduced from a small set of axioms, thereby anticipating (and partly inspiring) the axiomatic method of modern mathematics.1&lt;/p>
&lt;h2 id="elements-book-vii-proposition-2">Elements: Book VII, Proposition 2:&lt;/h2>
&lt;p>To find the greatest common measure of two given numbers not relatively prime.&lt;/p></description></item><item><title>Info2 - Euclid Handout</title><link>https://bkleinen.github.io/classes/ss2017/info2/handouts/euclid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/handouts/euclid/</guid><description>&lt;p>Euclid of Alexandria( Greek:Εὐκλείδης, Euclides;
* ca. 365
† 275 BC) was a Greek mathematician, now known as &amp;ldquo;the father of geometry&amp;rdquo;. His most famous work is Elements, widely considered to be history&amp;rsquo;s most successful textbook. Within it, the properties of geometrical objects and integers are deduced from a small set of axioms, thereby anticipating (and partly inspiring) the axiomatic method of modern mathematics.1&lt;/p>
&lt;h2 id="elements-book-vii-proposition-2">Elements: Book VII, Proposition 2:&lt;/h2>
&lt;p>To find the greatest common measure of two given numbers not relatively prime.&lt;/p></description></item><item><title>Info2 - Euclid Handout</title><link>https://bkleinen.github.io/classes/ss2020/info2/misc/euclid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/misc/euclid/</guid><description>&lt;p>Euclid of Alexandria( Greek:Εὐκλείδης, Euclides;
* ca. 365
† 275 BC) was a Greek mathematician, now known as &amp;ldquo;the father of geometry&amp;rdquo;. His most famous work is Elements, widely considered to be history&amp;rsquo;s most successful textbook. Within it, the properties of geometrical objects and integers are deduced from a small set of axioms, thereby anticipating (and partly inspiring) the axiomatic method of modern mathematics.1&lt;/p>
&lt;h2 id="elements-book-vii-proposition-2">Elements: Book VII, Proposition 2:&lt;/h2>
&lt;p>To find the greatest common measure of two given numbers not relatively prime.&lt;/p></description></item><item><title>Info2 - Euclid Handout</title><link>https://bkleinen.github.io/classes/ss2024/info2/misc/euclid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/misc/euclid/</guid><description>&lt;p>Euclid of Alexandria( Greek:Εὐκλείδης, Euclides;
* ca. 365
† 275 BC) was a Greek mathematician, now known as &amp;ldquo;the father of geometry&amp;rdquo;. His most famous work is Elements, widely considered to be history&amp;rsquo;s most successful textbook. Within it, the properties of geometrical objects and integers are deduced from a small set of axioms, thereby anticipating (and partly inspiring) the axiomatic method of modern mathematics.1&lt;/p>
&lt;h2 id="elements-book-vii-proposition-2">Elements: Book VII, Proposition 2:&lt;/h2>
&lt;p>To find the greatest common measure of two given numbers not relatively prime.&lt;/p></description></item><item><title>Info2 - Euclid Handout</title><link>https://bkleinen.github.io/classes/ws2018/info2/misc/euclid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/misc/euclid/</guid><description>&lt;p>Euclid of Alexandria( Greek:Εὐκλείδης, Euclides;
* ca. 365
† 275 BC) was a Greek mathematician, now known as &amp;ldquo;the father of geometry&amp;rdquo;. His most famous work is Elements, widely considered to be history&amp;rsquo;s most successful textbook. Within it, the properties of geometrical objects and integers are deduced from a small set of axioms, thereby anticipating (and partly inspiring) the axiomatic method of modern mathematics.1&lt;/p>
&lt;h2 id="elements-book-vii-proposition-2">Elements: Book VII, Proposition 2:&lt;/h2>
&lt;p>To find the greatest common measure of two given numbers not relatively prime.&lt;/p></description></item><item><title>Info2 - Euclid Handout</title><link>https://bkleinen.github.io/classes/ws2021/info2/misc/euclid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/misc/euclid/</guid><description>&lt;p>Euclid of Alexandria( Greek:Εὐκλείδης, Euclides;
* ca. 365
† 275 BC) was a Greek mathematician, now known as &amp;ldquo;the father of geometry&amp;rdquo;. His most famous work is Elements, widely considered to be history&amp;rsquo;s most successful textbook. Within it, the properties of geometrical objects and integers are deduced from a small set of axioms, thereby anticipating (and partly inspiring) the axiomatic method of modern mathematics.1&lt;/p>
&lt;h2 id="elements-book-vii-proposition-2">Elements: Book VII, Proposition 2:&lt;/h2>
&lt;p>To find the greatest common measure of two given numbers not relatively prime.&lt;/p></description></item><item><title>Info2 Questions &amp; Answers Sommersemester 2015</title><link>https://bkleinen.github.io/classes/ss2015/info2/quame/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/info2/quame/</guid><description>&lt;h1 id="questions">Questions&lt;/h1>
&lt;p>See [https://ba-thesis.herokuapp.com/questions]({{ site.BaseURL }}/miscellany/grasp/questions)&lt;/p>
&lt;p>Ask new questions here: [https://ba-thesis.herokuapp.com/questions]({{ site.BaseURL }}/miscellany/grasp/questions)&lt;/p>
&lt;h1 id="answers">Answers&lt;/h1>
&lt;p>##Question #11
This question was asked on May 29, 2015 22:29.&lt;/p>
&lt;p>Ich habe ein Problem mit der Anpassung des Dreiecks an die Fenstergröße, dies soll entweder abhängig von der Höhe oder der Breite von Dreieck und Fenster geschehen. Das Problem ist nun, dass sich das Dreieck entweder nicht wirklich proportional der Fenstergröße anpasst, oder sich die Seitenverhältnisse ändern, sodass die Grundseite kürzer erscheint als die zum oberen Punkt führenden Seiten. Wie könnte man dafür sorgen, dass die Seiten wirklich immer gleichlang bleiben ?&lt;/p></description></item><item><title>Info2 SoSe 2020 Schedule</title><link>https://bkleinen.github.io/classes/ss2020/info2/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/schedule/</guid><description>&lt;h2 id="tentative-schedule">Tentative Schedule.&lt;/h2>
&lt;p>Material for flipped remote classrooms is provided the week before. The overall topic of Info2 is Algorithms &amp;amp; Data Structures.
We&amp;rsquo;ll go through 8 broader Topics during the term:&lt;/p>
&lt;ul>
&lt;li>Topic 01: Object Oriented Design&lt;/li>
&lt;li>Topic 02: Java Fundamentals and Repetition&lt;/li>
&lt;li>Topic 03: Properties of Algorithms&lt;/li>
&lt;li>Topic 04: Data Structures&lt;/li>
&lt;li>Topic 05: Sorting&lt;/li>
&lt;li>Topic 06: Searching&lt;/li>
&lt;li>Topic 07: Theoretical Foundations&lt;/li>
&lt;li>Topic 08: Python&lt;/li>
&lt;/ul>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Lecture&lt;/th>
 &lt;th style="text-align: left">Quizz&lt;/th>
 &lt;th style="text-align: left">Topic&lt;/th>
 &lt;th style="text-align: left">Lecture&lt;/th>
 &lt;th style="text-align: left">Lab #&lt;/th>
 &lt;th style="text-align: left">Lab Topic&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">Thu 02/04/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;mdash; No lectures in the first week &amp;mdash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;mdash; No labs in the first week &amp;mdash;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Tue 07/04/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">01&lt;/td>
 &lt;td style="text-align: left">Welcome Back, Overview, Designing Applications&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-01">Designing an Application, CRC Cards (Pre-Lab!)&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 09/04/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">IntelliJ, Programming Exercises, Intro to Recursion.&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">(OO Design)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Tue 14/04/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">Recursion&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-02">Implementing CRC cards (Pre-Lab!)&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 16/04/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">Source Code Management with GIT&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">(OO Design)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Tue 21/04/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">Networking and File I/O in Java&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Extra Time for GIT&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 23/04/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">Concurrency&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Tue 28/04/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">Random numbers, Probabilistic Algorithms&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-03">Histogram&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 30/04/2020&lt;/td>
 &lt;td style="text-align: left">Random Algorithms&lt;/td>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">Complexity of Algorithms, Binary Search&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">(Java Fundamentals)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Tue 05/05/2020&lt;/td>
 &lt;td style="text-align: left">Lab 02&lt;/td>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">Properties of Algorithms, Maximum Contiguous Subsequence Sum&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-04">Chatterbox&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 07/05/2020&lt;/td>
 &lt;td style="text-align: left">Complexity, B. Search&lt;/td>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">Arrays, Lists and Stacks&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">(Java Networking, Concurrency)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Tue 12/05/2020&lt;/td>
 &lt;td style="text-align: left">Lab 03&lt;/td>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">Stacks &amp;amp; ADTs&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-05">Execution Times&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 14/05/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">PZ 2 Break, Contextual Interviews&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">(Properties of Algorithms)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Tue 19/05/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">PZ 2 Break&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 21/05/2020&lt;/td>
 &lt;td style="text-align: left">Stacks and Queues&lt;/td>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">&amp;mdash; Himmelfahrt (Bank Holiday) &amp;mdash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Tue 26/05/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">Stacks, Postfix and Enums&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-06">Reverse Polish Notation&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 28/05/2020&lt;/td>
 &lt;td style="text-align: left">Lab 04&lt;/td>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">Queues, Priority Queues, Collections: Sets, Bags, Maps. The Java Collection Framework&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">(Recursion)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Tue 02/06/2020&lt;/td>
 &lt;td style="text-align: left">Lab 05&lt;/td>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">-no lecture-&lt;/td>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-07">Recursive Triangles&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 04/06/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">Recursion, Maximum Contiguous Subsequence revisited&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">(Recursion)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Tue 09/06/2020&lt;/td>
 &lt;td style="text-align: left">Lab 06&lt;/td>
 &lt;td style="text-align: left">07&lt;/td>
 &lt;td style="text-align: left">Sorting Algorithms, Divide &amp;amp; Conquer&lt;/td>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-08">Eight Queens&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 11/06/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">07&lt;/td>
 &lt;td style="text-align: left">Sorting Algorithms: Quicksort, Radix Sort&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">(Recursion, Backtracking)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Tue 16/06/2020&lt;/td>
 &lt;td style="text-align: left">Lab 07&lt;/td>
 &lt;td style="text-align: left">07&lt;/td>
 &lt;td style="text-align: left">Searching, Scanning and Parsing Algorithms&lt;/td>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-09">Probabilistic Algorithms&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 18/06/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">07&lt;/td>
 &lt;td style="text-align: left">Graphs, Graph Algorithms&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">(Concurrency, Random)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Tue 23/06/2020&lt;/td>
 &lt;td style="text-align: left">Lab 08&lt;/td>
 &lt;td style="text-align: left">07&lt;/td>
 &lt;td style="text-align: left">String Searching and Pattern Matching&lt;/td>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-10">Getting from A to B&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 25/06/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">Finite State Automata&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">(Graphs and Graph Algorithms)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Tue 30/06/2020&lt;/td>
 &lt;td style="text-align: left">Lab 09&lt;/td>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">Hash Functions and HashMaps&lt;/td>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-11">Finite State Automata and Sorting&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 02/07/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">Searching, Nearest Neighbor, Branch and Bound,AVL Trees&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">(Theoretical Foundations, FSA)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Tue 07/07/2020&lt;/td>
 &lt;td style="text-align: left">Lab 10&lt;/td>
 &lt;td style="text-align: left">08&lt;/td>
 &lt;td style="text-align: left">Trees, Heapsort, Sorting Algorithms Conclusion&lt;/td>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-12">Scrabble Cheater&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 09/07/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Trial Exam, Exam Preparation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">(Hashes)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">Tue 14/07/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Exam&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu 16/07/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Klausureinsicht&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Info2 SS2014 Schedule</title><link>https://bkleinen.github.io/classes/ss2014/info2/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info2/schedule/</guid><description>&lt;p>Stand: 1.4.2014&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Lab (Group1)&lt;/th>
 &lt;th style="text-align: left">Lecture Wed&lt;/th>
 &lt;th style="text-align: left">Lecture Fri&lt;/th>
 &lt;th style="text-align: left">-&lt;/th>
 &lt;th style="text-align: left">Lecture Topic&lt;/th>
 &lt;th style="text-align: left">Lab No&lt;/th>
 &lt;th style="text-align: left">Lab Topic&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">04/02/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Welcome Back, Overview, Toolbox: Java, Eclipse, GIT&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">04/04/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Designing Applications&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">04/08/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Designing an Application, CRC Cards &amp;amp; Toolbox&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">04/09/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Error Handling and Exceptions&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">04/11/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Networking in Java. File I/O. Eclipse.&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">04/15/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Implementing CRC cards (Pre-Lab!)&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">04/16/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Java 8 - Lambdas&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">04/18/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Properties of Algorithms&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">04/22/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Chatterbox (Pre-Lab!)&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">04/23/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Maximum Contiguous Subsequence Sum &amp;quot;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">04/25/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Abstraction: Abstract Data Types and Design Patterns&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">04/29/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Histogram (Pre-Lab!)&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">04/30/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Lists&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">05/02/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Polya: How to Solve It. Collections: Sets, Bags, Maps.&lt;/td>
 &lt;td style="text-align: left">&amp;quot;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">05/06/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Execution Times (Pre-Lab!)&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">05/07/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Enumerations - Collections - Iterators&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">05/09/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Stacks&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">05/13/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Abstract Data Types (Pre-Lab!)&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">05/14/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Queues, Priority Queues&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">05/16/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Recursion&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">05/20/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Fun with Calculators - I (Pre-Lab!)&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">05/21/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Recursion continued, Finite State Automata&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">05/23/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Trees&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">05/27/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Reverse Polish Notation (Pre-Lab!)&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">05/28/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Quadtrees, AVL-Trees&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">05/30/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Random numbers, Probabilistic Algorithms&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">06/03/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Fun with Calculators - II (Pre-Lab!)&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">06/04/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Graphs, Graph Algorithms&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">06/06/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Sorting&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">06/10/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Recursive Triangles (Pre-Lab!)&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">06/11/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Sorting&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">06/13/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Sorting&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">06/17/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Getting from A to B (Pre-Lab!)&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">06/18/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Searching, Nearest Neighbor, Branch and Bound&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">06/20/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;String Searching and Pattern Matching&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">06/24/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Scrabble Cheater Basic Edition (Pre-Lab!)&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">06/25/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Scanning and Parsing Algorithms&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">06/27/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;NP-Complete Problems&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">07/01/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Scrabble Cheater Deluxe (Pre-Lab!)&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">07/02/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Cryptographic Algorithms&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">07/04/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Ruby&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">07/08/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Eight Queens (Pre-Lab!)&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">07/09/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Ruby&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">07/11/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Ruby&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">07/15/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Repetition&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">07/16/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Repetition&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">07/18/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Repetition&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">30&lt;/td>
 &lt;td style="text-align: left">07/22/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;No Lab&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">07/23/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;EXAM&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">07/25/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ldquo;Klausureinsicht&amp;rdquo;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Info2 SS2017 Klausurfragen</title><link>https://bkleinen.github.io/classes/ss2017/info2/klausurfragen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/klausurfragen/</guid><description>&lt;p>Klausurfragen gesammelt am 18.7.2017&lt;/p>
&lt;h2 id="001-info2-application-development">001-info2-application-development&lt;/h2>
&lt;p>keine gesammelt&lt;/p>
&lt;h2 id="002-info2-tooling">002-info2-Tooling&lt;/h2>
&lt;p>keine gesammelt&lt;/p>
&lt;h2 id="003-info2-networking-fileio-exceptions">003-info2-networking-fileio-exceptions&lt;/h2>
&lt;p>&amp;hellip; die API für Datei öffnen müssen Sie nicht auswendig kennen.&lt;/p>
&lt;ul>
&lt;li>Programmieraufgabe: Datei öffnen und etwas mit der Datei machen&lt;/li>
&lt;li>etwas in Datei reinschreiben&lt;/li>
&lt;/ul>
&lt;h2 id="004-info2-concurrency">004-info2-concurrency&lt;/h2>
&lt;p>&amp;hellip; das kommt erst in Info3 dran :) :&lt;/p>
&lt;ul>
&lt;li>selbst Thread implementieren&lt;/li>
&lt;li>Deadlock in Programm mit Threads finden&lt;/li>
&lt;/ul>
&lt;h2 id="005-info2-algorithms">005-info2-algorithms&lt;/h2>
&lt;ul>
&lt;li>Wie ist der Aufwand eines gegebenen Algorithmus?&lt;/li>
&lt;/ul>
&lt;h2 id="006-info2-lists">006-info2-lists&lt;/h2>
&lt;ul>
&lt;li>was ist die Komplexität für folgende Operationen für ArrayList und LinkedList? (Tabelle ergänzen)&lt;/li>
&lt;/ul>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">search&lt;/th>
 &lt;th style="text-align: left">add&lt;/th>
 &lt;th style="text-align: left">get(k)&lt;/th>
 &lt;th style="text-align: left">contains&lt;/th>
 &lt;th style="text-align: left">next&lt;/th>
 &lt;th style="text-align: left">remove&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">ArrayList&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">LinkedList&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">search&lt;/th>
 &lt;th style="text-align: left">add to front&lt;/th>
 &lt;th style="text-align: left">get(k)&lt;/th>
 &lt;th style="text-align: left">contains&lt;/th>
 &lt;th style="text-align: left">next&lt;/th>
 &lt;th style="text-align: left">remove&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">ArrayList&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">LinkedList&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>vorr. für next und remove: index (ArrayList) bzw. Pointer (LinkedList) auf jeweiliges Element.&lt;/p></description></item><item><title>Info2 SS2017 Klausurfragen</title><link>https://bkleinen.github.io/classes/ss2020/info2/misc/klausurfragen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/misc/klausurfragen/</guid><description>&lt;p>Klausurfragen gesammelt am 18.7.2017&lt;/p>
&lt;h2 id="001-info2-application-development">001-info2-application-development&lt;/h2>
&lt;p>keine gesammelt&lt;/p>
&lt;h2 id="002-info2-tooling">002-info2-Tooling&lt;/h2>
&lt;p>keine gesammelt&lt;/p>
&lt;h2 id="003-info2-networking-fileio-exceptions">003-info2-networking-fileio-exceptions&lt;/h2>
&lt;p>&amp;hellip; die API für Datei öffnen müssen Sie nicht auswendig kennen.&lt;/p>
&lt;ul>
&lt;li>Programmieraufgabe: Datei öffnen und etwas mit der Datei machen&lt;/li>
&lt;li>etwas in Datei reinschreiben&lt;/li>
&lt;/ul>
&lt;h2 id="004-info2-concurrency">004-info2-concurrency&lt;/h2>
&lt;p>&amp;hellip; das kommt erst in Info3 dran :) :&lt;/p>
&lt;ul>
&lt;li>selbst Thread implementieren&lt;/li>
&lt;li>Deadlock in Programm mit Threads finden&lt;/li>
&lt;/ul>
&lt;h2 id="005-info2-algorithms">005-info2-algorithms&lt;/h2>
&lt;ul>
&lt;li>Wie ist der Aufwand eines gegebenen Algorithmus?&lt;/li>
&lt;/ul>
&lt;h2 id="006-info2-lists">006-info2-lists&lt;/h2>
&lt;ul>
&lt;li>was ist die Komplexität für folgende Operationen für ArrayList und LinkedList? (Tabelle ergänzen)&lt;/li>
&lt;/ul>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">search&lt;/th>
 &lt;th style="text-align: left">add&lt;/th>
 &lt;th style="text-align: left">get(k)&lt;/th>
 &lt;th style="text-align: left">contains&lt;/th>
 &lt;th style="text-align: left">next&lt;/th>
 &lt;th style="text-align: left">remove&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">ArrayList&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">LinkedList&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">search&lt;/th>
 &lt;th style="text-align: left">add to front&lt;/th>
 &lt;th style="text-align: left">get(k)&lt;/th>
 &lt;th style="text-align: left">contains&lt;/th>
 &lt;th style="text-align: left">next&lt;/th>
 &lt;th style="text-align: left">remove&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">ArrayList&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">LinkedList&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>vorr. für next und remove: index (ArrayList) bzw. Pointer (LinkedList) auf jeweiliges Element.&lt;/p></description></item><item><title>Info2 SS2017 Klausurfragen</title><link>https://bkleinen.github.io/classes/ss2024/info2/misc/klausurfragen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/misc/klausurfragen/</guid><description>&lt;p>Klausurfragen gesammelt am 18.7.2017&lt;/p>
&lt;h2 id="001-info2-application-development">001-info2-application-development&lt;/h2>
&lt;p>keine gesammelt&lt;/p>
&lt;h2 id="002-info2-tooling">002-info2-Tooling&lt;/h2>
&lt;p>keine gesammelt&lt;/p>
&lt;h2 id="003-info2-networking-fileio-exceptions">003-info2-networking-fileio-exceptions&lt;/h2>
&lt;p>&amp;hellip; die API für Datei öffnen müssen Sie nicht auswendig kennen.&lt;/p>
&lt;ul>
&lt;li>Programmieraufgabe: Datei öffnen und etwas mit der Datei machen&lt;/li>
&lt;li>etwas in Datei reinschreiben&lt;/li>
&lt;/ul>
&lt;h2 id="004-info2-concurrency">004-info2-concurrency&lt;/h2>
&lt;p>&amp;hellip; das kommt erst in Info3 dran :) :&lt;/p>
&lt;ul>
&lt;li>selbst Thread implementieren&lt;/li>
&lt;li>Deadlock in Programm mit Threads finden&lt;/li>
&lt;/ul>
&lt;h2 id="005-info2-algorithms">005-info2-algorithms&lt;/h2>
&lt;ul>
&lt;li>Wie ist der Aufwand eines gegebenen Algorithmus?&lt;/li>
&lt;/ul>
&lt;h2 id="006-info2-lists">006-info2-lists&lt;/h2>
&lt;ul>
&lt;li>was ist die Komplexität für folgende Operationen für ArrayList und LinkedList? (Tabelle ergänzen)&lt;/li>
&lt;/ul>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">search&lt;/th>
 &lt;th style="text-align: left">add&lt;/th>
 &lt;th style="text-align: left">get(k)&lt;/th>
 &lt;th style="text-align: left">contains&lt;/th>
 &lt;th style="text-align: left">next&lt;/th>
 &lt;th style="text-align: left">remove&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">ArrayList&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">LinkedList&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">search&lt;/th>
 &lt;th style="text-align: left">add to front&lt;/th>
 &lt;th style="text-align: left">get(k)&lt;/th>
 &lt;th style="text-align: left">contains&lt;/th>
 &lt;th style="text-align: left">next&lt;/th>
 &lt;th style="text-align: left">remove&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">ArrayList&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">LinkedList&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>vorr. für next und remove: index (ArrayList) bzw. Pointer (LinkedList) auf jeweiliges Element.&lt;/p></description></item><item><title>Info2 SS2017 Klausurfragen</title><link>https://bkleinen.github.io/classes/ws2018/info2/misc/klausurfragen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/misc/klausurfragen/</guid><description>&lt;p>Klausurfragen gesammelt am 18.7.2017&lt;/p>
&lt;h2 id="001-info2-application-development">001-info2-application-development&lt;/h2>
&lt;p>keine gesammelt&lt;/p>
&lt;h2 id="002-info2-tooling">002-info2-Tooling&lt;/h2>
&lt;p>keine gesammelt&lt;/p>
&lt;h2 id="003-info2-networking-fileio-exceptions">003-info2-networking-fileio-exceptions&lt;/h2>
&lt;p>&amp;hellip; die API für Datei öffnen müssen Sie nicht auswendig kennen.&lt;/p>
&lt;ul>
&lt;li>Programmieraufgabe: Datei öffnen und etwas mit der Datei machen&lt;/li>
&lt;li>etwas in Datei reinschreiben&lt;/li>
&lt;/ul>
&lt;h2 id="004-info2-concurrency">004-info2-concurrency&lt;/h2>
&lt;p>&amp;hellip; das kommt erst in Info3 dran :) :&lt;/p>
&lt;ul>
&lt;li>selbst Thread implementieren&lt;/li>
&lt;li>Deadlock in Programm mit Threads finden&lt;/li>
&lt;/ul>
&lt;h2 id="005-info2-algorithms">005-info2-algorithms&lt;/h2>
&lt;ul>
&lt;li>Wie ist der Aufwand eines gegebenen Algorithmus?&lt;/li>
&lt;/ul>
&lt;h2 id="006-info2-lists">006-info2-lists&lt;/h2>
&lt;ul>
&lt;li>was ist die Komplexität für folgende Operationen für ArrayList und LinkedList? (Tabelle ergänzen)&lt;/li>
&lt;/ul>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">search&lt;/th>
 &lt;th style="text-align: left">add&lt;/th>
 &lt;th style="text-align: left">get(k)&lt;/th>
 &lt;th style="text-align: left">contains&lt;/th>
 &lt;th style="text-align: left">next&lt;/th>
 &lt;th style="text-align: left">remove&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">ArrayList&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">LinkedList&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">search&lt;/th>
 &lt;th style="text-align: left">add to front&lt;/th>
 &lt;th style="text-align: left">get(k)&lt;/th>
 &lt;th style="text-align: left">contains&lt;/th>
 &lt;th style="text-align: left">next&lt;/th>
 &lt;th style="text-align: left">remove&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">ArrayList&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">LinkedList&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>vorr. für next und remove: index (ArrayList) bzw. Pointer (LinkedList) auf jeweiliges Element.&lt;/p></description></item><item><title>Info2 SS2017 Klausurfragen</title><link>https://bkleinen.github.io/classes/ws2021/info2/misc/klausurfragen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/misc/klausurfragen/</guid><description>&lt;p>Klausurfragen gesammelt am 18.7.2017&lt;/p>
&lt;h2 id="001-info2-application-development">001-info2-application-development&lt;/h2>
&lt;p>keine gesammelt&lt;/p>
&lt;h2 id="002-info2-tooling">002-info2-Tooling&lt;/h2>
&lt;p>keine gesammelt&lt;/p>
&lt;h2 id="003-info2-networking-fileio-exceptions">003-info2-networking-fileio-exceptions&lt;/h2>
&lt;p>&amp;hellip; die API für Datei öffnen müssen Sie nicht auswendig kennen.&lt;/p>
&lt;ul>
&lt;li>Programmieraufgabe: Datei öffnen und etwas mit der Datei machen&lt;/li>
&lt;li>etwas in Datei reinschreiben&lt;/li>
&lt;/ul>
&lt;h2 id="004-info2-concurrency">004-info2-concurrency&lt;/h2>
&lt;p>&amp;hellip; das kommt erst in Info3 dran :) :&lt;/p>
&lt;ul>
&lt;li>selbst Thread implementieren&lt;/li>
&lt;li>Deadlock in Programm mit Threads finden&lt;/li>
&lt;/ul>
&lt;h2 id="005-info2-algorithms">005-info2-algorithms&lt;/h2>
&lt;ul>
&lt;li>Wie ist der Aufwand eines gegebenen Algorithmus?&lt;/li>
&lt;/ul>
&lt;h2 id="006-info2-lists">006-info2-lists&lt;/h2>
&lt;ul>
&lt;li>was ist die Komplexität für folgende Operationen für ArrayList und LinkedList? (Tabelle ergänzen)&lt;/li>
&lt;/ul>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">search&lt;/th>
 &lt;th style="text-align: left">add&lt;/th>
 &lt;th style="text-align: left">get(k)&lt;/th>
 &lt;th style="text-align: left">contains&lt;/th>
 &lt;th style="text-align: left">next&lt;/th>
 &lt;th style="text-align: left">remove&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">ArrayList&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">LinkedList&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">search&lt;/th>
 &lt;th style="text-align: left">add to front&lt;/th>
 &lt;th style="text-align: left">get(k)&lt;/th>
 &lt;th style="text-align: left">contains&lt;/th>
 &lt;th style="text-align: left">next&lt;/th>
 &lt;th style="text-align: left">remove&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">ArrayList&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">LinkedList&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(n)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>vorr. für next und remove: index (ArrayList) bzw. Pointer (LinkedList) auf jeweiliges Element.&lt;/p></description></item><item><title>Info2 SS2017 Schedule</title><link>https://bkleinen.github.io/classes/ss2017/info2/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/schedule/</guid><description>&lt;h2 id="tentative-schedule---lab-topics-are-subject-to-change">Tentative Schedule - Lab Topics are subject to change!&lt;/h2>
&lt;p>Lab Assignments not linked here have not released for this term yet and
might be changed.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Lecture&lt;/th>
 &lt;th style="text-align: left">Lecture Topic&lt;/th>
 &lt;th style="text-align: left">Group&lt;/th>
 &lt;th style="text-align: left">Lab&lt;/th>
 &lt;th style="text-align: left">Lab Topic&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-04-04&lt;/td>
 &lt;td style="text-align: left">Welcome Back, Overview, Designing Applications&lt;/td>
 &lt;td style="text-align: left">Group 2&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-01">Designing an Application, CRC Cards (Pre-Lab!)&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2017-04-07&lt;/td>
 &lt;td style="text-align: left">Toolbox: Java, Eclipse&lt;/td>
 &lt;td style="text-align: left">Group 1&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-01">Designing an Application, CRC Cards (Pre-Lab!)&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-04-11&lt;/td>
 &lt;td style="text-align: left">Error Handling and Exceptions reviewed&lt;/td>
 &lt;td style="text-align: left">Group 2&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-02">Implementing CRC cards (Pre-Lab!)&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2017-04-14&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;- Feiertag: Karfreitag &amp;mdash;&amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- no lab -&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-04-18&lt;/td>
 &lt;td style="text-align: left">Networking in Java. File I/O.&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- no lab -&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2017-04-21&lt;/td>
 &lt;td style="text-align: left">Concurrency&lt;/td>
 &lt;td style="text-align: left">Group 1&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-02">Implementing CRC cards (Pre-Lab!)&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-04-25&lt;/td>
 &lt;td style="text-align: left">Complexity of Algorithms, Binary Search&lt;/td>
 &lt;td style="text-align: left">Group 2&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-03">Histogram&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2017-04-28&lt;/td>
 &lt;td style="text-align: left">Properties of Algorithms, Maximum Contiguous Subsequence Sum&lt;/td>
 &lt;td style="text-align: left">Group 1&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-03">Histogram&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-05-02&lt;/td>
 &lt;td style="text-align: left">Arrays and Lists&lt;/td>
 &lt;td style="text-align: left">Group 2&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-04">Chatterbox&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2017-05-05&lt;/td>
 &lt;td style="text-align: left">Stacks&lt;/td>
 &lt;td style="text-align: left">Group 1&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-04">Chatterbox&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-05-09&lt;/td>
 &lt;td style="text-align: left">Recursion&lt;/td>
 &lt;td style="text-align: left">Group 2&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-05">Execution Times&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2017-05-12&lt;/td>
 &lt;td style="text-align: left">Queues, Priority Queues, Collections: Sets, Bags, Maps.&lt;/td>
 &lt;td style="text-align: left">Group 1&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-05">Execution Times&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-05-16&lt;/td>
 &lt;td style="text-align: left">Recursion&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-06">Reverse Polish Notation&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2017-05-19&lt;/td>
 &lt;td style="text-align: left">Sorting, Divide &amp;amp; Conquer, Maximum Contiguous Subsequence revisited&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-06">Reverse Polish Notation&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-05-23&lt;/td>
 &lt;td style="text-align: left">&amp;hellip;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- no lab -&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2017-05-26&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;- Frei: Freitag nach Himmelfahrt &amp;mdash;-&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- no lab -&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-05-30&lt;/td>
 &lt;td style="text-align: left">&amp;hellip;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-07">Recursive Triangles&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2017-06-02&lt;/td>
 &lt;td style="text-align: left">SortingQuicksort, Radix Sort&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-07">Recursive Triangles&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-06-06&lt;/td>
 &lt;td style="text-align: left">TWO Lectures! Sorting Condinued, Random numbers, Probabilistic Algorithms&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-08">Eight Queens&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2017-06-09&lt;/td>
 &lt;td style="text-align: left">Graphs, Graph Algorithms&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-08">Eight Queens&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-06-13&lt;/td>
 &lt;td style="text-align: left">Searching, Nearest Neighbor, Branch and Bound&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-09">Probablistic Algorithms&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2017-06-16&lt;/td>
 &lt;td style="text-align: left">Trees, Heapsort, Sorting Algorithms Conclusion&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-09">Probablistic Algorithms&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-06-20&lt;/td>
 &lt;td style="text-align: left">Finite State Automata&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-10">Getting from A to B&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2017-06-23&lt;/td>
 &lt;td style="text-align: left">Finite State Automata&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-06-27&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-10">Getting from A to B&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2017-06-30&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-07-04&lt;/td>
 &lt;td style="text-align: left">Hashs&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-11">Scrabble Cheater&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2017-07-07&lt;/td>
 &lt;td style="text-align: left">String Searching and Pattern Matching&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-11">Scrabble Cheater&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-07-11&lt;/td>
 &lt;td style="text-align: left">Searching,Scanning and Parsing Algorithms&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Trial Exam&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2017-07-14&lt;/td>
 &lt;td style="text-align: left">AVL Trees&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Trial Exam&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-07-18&lt;/td>
 &lt;td style="text-align: left">Repetition / Trial Exam Review&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2017-07-21&lt;/td>
 &lt;td style="text-align: left">Exam&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">30&lt;/td>
 &lt;td style="text-align: left">&lt;!-- raw HTML omitted -->Wed, 2017-07-26&lt;!-- raw HTML omitted -->&lt;/td>
 &lt;td style="text-align: left">Exam Review 26. Jul 2017, 12:30 to 14:00 &lt;!-- raw HTML omitted -->Day changed!&lt;!-- raw HTML omitted -->&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2017-07-28&lt;/td>
 &lt;td style="text-align: left">IMI Showtime&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Info2 WS2018 Schedule</title><link>https://bkleinen.github.io/classes/ws2018/info2/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/schedule/</guid><description>&lt;h2 id="tentative-schedule---lab-topics-are-subject-to-change">Tentative Schedule - Lab Topics are subject to change!&lt;/h2>
&lt;p>Lab Assignments not linked here have not been released for this term yet and
might be changed.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Lecture&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">Lecture Topic&lt;/th>
 &lt;th style="text-align: left">Lab&lt;/th>
 &lt;th style="text-align: left">Lab Topic&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">39&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-10-05&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Welcome Back, Overview, Designing Applications&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-01">Designing an Application, CRC Cards (Pre-Lab!)&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Toolbox: Java, Eclipse File I/O.&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">40&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-10-12&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Error Handling and Exceptions reviewed&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-02">Implementing CRC cards (Pre-Lab!)&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Networking in Java.&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-10-19&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Concurrency&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-03">Histogram&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Complexity of Algorithms, Binary Search&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-10-26&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../misc/collections/">e-learning: The Java Collection Framework&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../misc/collections/">e-learning&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../misc/collections/">e-learning: The Java Collection Framework&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-11-02&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Properties of Algorithms, Maximum Contiguous Subsequence Sum&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-04">Chatterbox&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Arrays, Lists and Stacks&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-11-09&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Queues, Priority Queues, Collections: Sets, Bags, Maps.&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-05">Execution Times&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Recursion&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-11-16&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Recursion&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-06">Reverse Polish Notation&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Sorting, Divide &amp;amp; Conquer, Maximum Contiguous Subsequence revisited&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-11-23&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Sorting Quicksort, Radix Sort&lt;/td>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-07">Recursive Triangles&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Sorting Continued&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-11-30&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Random numbers, Probabilistic Algorithms&lt;/td>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-08">Eight Queens&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Graphs, Graph Algorithms&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-12-07&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Searching, Nearest Neighbor, Branch and Bound&lt;/td>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-09">Probablistic Algorithms&lt;/a> (Pre-Lab!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Trees, Heapsort, Sorting Algorithms Conclusion&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-12-14&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Hashs&lt;/td>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-10">Getting from A to B&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">String Searching and Pattern Matching&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-12-21&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Finite State Automata&lt;/td>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-11">Finite State Automata and Sorting&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">Finite State Automata&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Fri, 2019-01-04&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Searching, Scanning and Parsing Algorithms&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Repetition; Questions&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">AVL Trees, Python Start&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Fri, 2019-01-11&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">2nd Language (Phyton) + Repetition of Algorithms&lt;/td>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-12">Scrabble Cheater Basic Edition&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">2nd Language (Phyton) + Repetition of Algorithms&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Fri, 2019-01-18&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Exam Preparation&lt;/td>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-13">Scrabble Cheater Deluxe&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">2nd Language (Phyton) + Repetition of Algorithms&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Fri, 2019-01-25&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Repetition &amp;amp; Exam Preparation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Trial Exam&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">2nd Language (Phyton) + Repetition of Algorithms&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Fri, 2019-02-01&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">Exam&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">II&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">57&lt;/td>
 &lt;td style="text-align: left">Fri, 2019-02-08&lt;/td>
 &lt;td style="text-align: left">I&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://imi-bachelor.htw-berlin.de/studium/projekte/showtime-und-projekte-im-wintersemester-201819/">IMI SHOWTIME!!&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Info2 WS2018 Topics and Grading</title><link>https://bkleinen.github.io/classes/ss2020/info2/material/topics_and_grading/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/material/topics_and_grading/</guid><description>&lt;p>&lt;a href="../topics_and_grading_questions">With questions&lt;/a>&lt;/p>
&lt;p>Sum: 115% - There might be questions that count in two categories - eg. the Complexity of a
searching algorithm.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">115&lt;/th>
 &lt;th style="text-align: left">Lecture Topic&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">Properties, especially Complexity of Algorithms&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Abstract Data Types / Data Structures&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Queue, Stack, List, Set, Directory/Map, Bags, Trees, Binary Search Trees, AVL Trees&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- The Java Collection Framework&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Graphs and Graph Algorithms&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Graph Data Structure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Graph Algorithms: Breath-First and Depth-First Search&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">paths Dijkstra: cheapest path between start and end&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">2-3 aus:&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">File I/O andNetworking in Java (Sockets)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Maximum Contiguous Subsequence Sum&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Concurrency&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Rekursion&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Divide &amp;amp; Conquer&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Random numbers, Probabilistic Algorithms&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Finite State Automata (Grammars)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Sorting: pseudocode / in worten beschreiben oder daran erkennen, manual&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Radixsort l * n&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Mergesort n log n&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Quicksort n log n&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Heapsort n log n&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Insertion Sort&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Bogo Sort&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Selection Sort&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Cocktail Shaker&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Searching and String Searching&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Binary Search&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Linear Search&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- String Searching&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- KMP (Skip Searching)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">Python&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>&lt;a href="../topics_and_grading_class_draft/">Draft done in class 4.1.2019&lt;/a>&lt;/p></description></item><item><title>Info2 WS2018 Topics and Grading</title><link>https://bkleinen.github.io/classes/ss2020/info2/material/topics_and_grading_questions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/material/topics_and_grading_questions/</guid><description>&lt;p>Sum: 115% - There might be questions that count in two categories - eg. the Complexity of a
searching algorithm.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">115&lt;/th>
 &lt;th style="text-align: left">Lecture Topic&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">A&lt;/td>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">Properties, especially Complexity of Algorithms&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">B&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Abstract Data Types / Data Structures&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Queue, Stack, List, Set, Directory/Map, Bags, Trees, Binary Search Trees, AVL Trees&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- The Java Collection Framework&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">C&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Graphs and Graph Algorithms&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Graph Data Structure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Graph Algorithms: Breath-First and Depth-First Search&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">paths Dijkstra: cheapest path between start and end&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">D&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">2-3 aus:&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">File I/O andNetworking in Java (Sockets)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Maximum Contiguous Subsequence Sum&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Concurrency&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Rekursion&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Divide &amp;amp; Conquer&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Random numbers, Probabilistic Algorithms&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Finite State Automata (Grammars)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">E&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Sorting: pseudocode / in worten beschreiben oder daran erkennen, manual&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Radixsort l * n&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Mergesort n log n&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Quicksort n log n&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Heapsort n log n&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Insertion Sort&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Bogo Sort&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Selection Sort&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Cocktail Shaker&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">F&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Searching and String Searching&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Binary Search&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Linear Search&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- String Searching&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- KMP (Skip Searching)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">G&lt;/td>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">Python&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>&lt;a href="../topics_and_grading_class_draft/">Draft done in class 4.1.2019&lt;/a>&lt;/p></description></item><item><title>Info2 WS2018 Topics and Grading</title><link>https://bkleinen.github.io/classes/ws2018/info2/material/topics_and_grading/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/material/topics_and_grading/</guid><description>&lt;p>&lt;a href="../topics_and_grading_questions">With questions&lt;/a>&lt;/p>
&lt;p>Sum: 115% - There might be questions that count in two categories - eg. the Complexity of a
searching algorithm.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">115&lt;/th>
 &lt;th style="text-align: left">Lecture Topic&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">Properties, especially Complexity of Algorithms&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Abstract Data Types / Data Structures&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Queue, Stack, List, Set, Directory/Map, Bags, Trees, Binary Search Trees, AVL Trees&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- The Java Collection Framework&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Graphs and Graph Algorithms&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Graph Data Structure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Graph Algorithms: Breath-First and Depth-First Search&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">paths Dijkstra: cheapest path between start and end&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">2-3 aus:&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">File I/O andNetworking in Java (Sockets)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Maximum Contiguous Subsequence Sum&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Concurrency&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Rekursion&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Divide &amp;amp; Conquer&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Random numbers, Probabilistic Algorithms&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Finite State Automata (Grammars)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Sorting: pseudocode / in worten beschreiben oder daran erkennen, manual&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Radixsort l * n&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Mergesort n log n&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Quicksort n log n&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Heapsort n log n&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Insertion Sort&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Bogo Sort&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Selection Sort&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Cocktail Shaker&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Searching and String Searching&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Binary Search&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Linear Search&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- String Searching&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- KMP (Skip Searching)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">Python&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>&lt;a href="../topics_and_grading_class_draft/">Draft done in class 4.1.2019&lt;/a>&lt;/p></description></item><item><title>Info2 WS2018 Topics and Grading</title><link>https://bkleinen.github.io/classes/ws2018/info2/material/topics_and_grading_questions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/material/topics_and_grading_questions/</guid><description>&lt;p>Sum: 115% - There might be questions that count in two categories - eg. the Complexity of a
searching algorithm.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">115&lt;/th>
 &lt;th style="text-align: left">Lecture Topic&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">A&lt;/td>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">Properties, especially Complexity of Algorithms&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">B&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Abstract Data Types / Data Structures&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Queue, Stack, List, Set, Directory/Map, Bags, Trees, Binary Search Trees, AVL Trees&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- The Java Collection Framework&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">C&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Graphs and Graph Algorithms&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Graph Data Structure&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Graph Algorithms: Breath-First and Depth-First Search&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">paths Dijkstra: cheapest path between start and end&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">D&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">2-3 aus:&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">File I/O andNetworking in Java (Sockets)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Maximum Contiguous Subsequence Sum&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Concurrency&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Rekursion&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Divide &amp;amp; Conquer&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Random numbers, Probabilistic Algorithms&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Finite State Automata (Grammars)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">E&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Sorting: pseudocode / in worten beschreiben oder daran erkennen, manual&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Radixsort l * n&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Mergesort n log n&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Quicksort n log n&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Heapsort n log n&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Insertion Sort&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Bogo Sort&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Selection Sort&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Cocktail Shaker&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">F&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Searching and String Searching&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Binary Search&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- Linear Search&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- String Searching&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- KMP (Skip Searching)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">G&lt;/td>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">Python&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>&lt;a href="../topics_and_grading_class_draft/">Draft done in class 4.1.2019&lt;/a>&lt;/p></description></item><item><title>Info2 WS2018 Topics and Grading Draft</title><link>https://bkleinen.github.io/classes/ss2020/info2/material/topics_and_grading_class_draft/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/material/topics_and_grading_class_draft/</guid><description>&lt;p>This is just the draft!! &lt;a href="../topics_and_grading/">see the final version&lt;/a>&lt;/p>
&lt;h2 id="rough-overview-percent-and-topic">Rough Overview: Percent and Topic&lt;/h2>
&lt;p>Properties(Complexity) of Algorithms&lt;/p>
&lt;p>10-15 Abstract Data Types / Data Structures&lt;/p>
&lt;ul>
&lt;li>Queue, Stack, List, Set, Directory/Map, Bags, Trees, Binary Search Trees&lt;/li>
&lt;li>The Java Collection Framework&lt;/li>
&lt;/ul>
&lt;p>10 Graphs&lt;/p>
&lt;ul>
&lt;li>Graph Algorithms: Breath-First and Depth-First Search&lt;/li>
&lt;li>Dijkstra: cheapest path between start and end&lt;/li>
&lt;/ul>
&lt;p>10 Complexity of Algorithms
Maximum Contiguous Subsequence Sum&lt;/p>
&lt;p>File I/O
5 Networking in Java (Sockets)&lt;/p>
&lt;p>Concurrency
5 Rekursion&lt;/p></description></item><item><title>Info2 WS2018 Topics and Grading Draft</title><link>https://bkleinen.github.io/classes/ws2018/info2/material/topics_and_grading_class_draft/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/material/topics_and_grading_class_draft/</guid><description>&lt;p>This is just the draft!! &lt;a href="../topics_and_grading/">see the final version&lt;/a>&lt;/p>
&lt;h2 id="rough-overview-percent-and-topic">Rough Overview: Percent and Topic&lt;/h2>
&lt;p>Properties(Complexity) of Algorithms&lt;/p>
&lt;p>10-15 Abstract Data Types / Data Structures&lt;/p>
&lt;ul>
&lt;li>Queue, Stack, List, Set, Directory/Map, Bags, Trees, Binary Search Trees&lt;/li>
&lt;li>The Java Collection Framework&lt;/li>
&lt;/ul>
&lt;p>10 Graphs&lt;/p>
&lt;ul>
&lt;li>Graph Algorithms: Breath-First and Depth-First Search&lt;/li>
&lt;li>Dijkstra: cheapest path between start and end&lt;/li>
&lt;/ul>
&lt;p>10 Complexity of Algorithms
Maximum Contiguous Subsequence Sum&lt;/p>
&lt;p>File I/O
5 Networking in Java (Sockets)&lt;/p>
&lt;p>Concurrency
5 Rekursion&lt;/p></description></item><item><title>Info2: Exercise 00:</title><link>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-14/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;h2 id="lab-report--what-to-turn-in">Lab Report / What to turn in&lt;/h2>
&lt;p>Your report is due by 23:00 am the night before your next lab.
Submit a Report in PDF Format and the Source Code as Zipped file.&lt;/p>
&lt;p>As in Informatics 1, I am more interested in process than in product,
although we are now getting more interested in products as well.
Your report should include any collaborators on top of the first page,
summarize what you learned,
and note the time you invested in this exercise.
Both of you need to upload the same report in PDF format to Moodle before the
deadline.&lt;/p></description></item><item><title>Info2: Exercise 00:</title><link>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-14/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;h2 id="lab-report--what-to-turn-in">Lab Report / What to turn in&lt;/h2>
&lt;p>Your report is due the day before your next lab (for exact times, please refer to moodle).&lt;/p>
&lt;p>Submit a Report in PDF Format and the Source Code as Zipped file.&lt;/p>
&lt;p>As in Informatics 1, I am more interested in process than in product,
although we are now getting more interested in products as well.
Your report should include any collaborators on top of the first page,
summarize what you learned,
and note the time you invested in this exercise.
Both of you need to upload the same report in PDF format to Moodle before the
deadline.&lt;/p></description></item><item><title>Info2: Exercise 00:</title><link>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-14/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;h2 id="lab-report--what-to-turn-in">Lab Report / What to turn in&lt;/h2>
&lt;p>Your report is due the day before your next lab (for exact times, please refer to moodle).&lt;/p>
&lt;p>Submit a Report in PDF Format and the Source Code as Zipped file.&lt;/p>
&lt;p>As in Informatics 1, I am more interested in process than in product,
although we are now getting more interested in products as well.
Your report should include any collaborators on top of the first page,
summarize what you learned,
and note the time you invested in this exercise.
Both of you need to upload the same report in PDF and zipped source format to Moodle before the
deadline.&lt;/p></description></item><item><title>Info2: Exercise 00:</title><link>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-14/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;h2 id="lab-report--what-to-turn-in">Lab Report / What to turn in&lt;/h2>
&lt;p>Your report is due the day before your next lab (for exact times, please refer to moodle).&lt;/p>
&lt;p>Submit a Report in PDF Format and the Source Code as Zipped file.&lt;/p>
&lt;p>As in Informatics 1, I am more interested in process than in product,
although we are now getting more interested in products as well.
Your report should include any collaborators on top of the first page,
summarize what you learned,
and note the time you invested in this exercise.
Both of you need to upload the same report in PDF and zipped source format to Moodle before the
deadline.&lt;/p></description></item><item><title>Info2: Exercise 00:</title><link>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-14/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;h2 id="lab-report--what-to-turn-in">Lab Report / What to turn in&lt;/h2>
&lt;p>Your report is due the day before your next lab (for exact times, please refer to moodle).&lt;/p>
&lt;p>Submit a Report in PDF Format and the Source Code as Zipped file.&lt;/p>
&lt;p>As in Informatics 1, I am more interested in process than in product,
although we are now getting more interested in products as well.
Your report should include any collaborators on top of the first page,
summarize what you learned,
and note the time you invested in this exercise.
Both of you need to upload the same report in PDF and zipped source format to Moodle before the
deadline.&lt;/p></description></item><item><title>Info2: Exercise 00: Programming &amp; Tools</title><link>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-00/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-00/</guid><description>&lt;h2 id="learning-goals">Learning Goals&lt;/h2>
&lt;p>After this lab you should be able to agree with each of the following statements&lt;/p>
&lt;p>I am familiar with programming in IntelliJ:&lt;/p>
&lt;ul>
&lt;li>I can create a new Java project in IntelliJ&lt;/li>
&lt;li>I remember most of the concepts from A1 Ex1&lt;/li>
&lt;li>I can run my new Java project in IntelliJ&lt;/li>
&lt;/ul>
&lt;p>I am ready to use Git:&lt;/p>
&lt;ul>
&lt;li>I can clone an online repository&lt;/li>
&lt;li>I can create an empty repository on GitLab&lt;/li>
&lt;li>I can update my local repository&amp;rsquo;s remotes&lt;/li>
&lt;li>I can add changes to be committed&lt;/li>
&lt;li>I can commit changes&lt;/li>
&lt;li>I can push changes&lt;/li>
&lt;/ul>
&lt;h2 id="pre-lab-do-this-before-the-lab">Pre-Lab (Do this BEFORE the lab)&lt;/h2>
&lt;h3 id="1-prepare-your-work-environment">1. Prepare your work environment&lt;/h3>
&lt;p>The labs will be taught on campus. You can either&lt;/p></description></item><item><title>Info2: Exercise 01: Application Design</title><link>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-01/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please bring these exercises P1 and P2 printed out or written out with you to lab.
Please have your name on your page.&lt;/p>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> How do you obtain tickets to go see a movie? Write down the steps that you take, in order.&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> If you have tickets and have to cancel, what do you have to do? Write down the steps, in order.&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> Read up on the
&lt;a href="https://c2.com/doc/oopsla89/paper.html">Class-Responsibility-Collaboration Card method (CRC Cards)&lt;/a>.
This must be read before class, as you will not be able to do the exercise if you have no idea what this is.&lt;/p></description></item><item><title>Info2: Exercise 01: Application Design</title><link>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-01/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Remember to do all the necessary steps listed on the &lt;a href="..">Labs&lt;/a> page, including the following exercises:&lt;/p>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> How do you obtain tickets to go see a movie? Write down the steps that you take, in order.&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> If you have tickets and have to cancel, what do you have to do? Write down the steps, in order.&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> Find out what the &lt;em>Class-Responsibility-Collaboration Card method&lt;/em> is, what the use of CRC Cards is and how they are created. The following resources can be of help:&lt;/p></description></item><item><title>Info2: Exercise 01: Application Design</title><link>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-01/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please bring these exercises P1 and P2 printed out or written out with you to lab.
Please have your name on your page.&lt;/p>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> How do you obtain tickets to go see a movie? Write down the steps that you take, in order.&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> If you have tickets and have to cancel, what do you have to do? Write down the steps, in order.&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> Read up on the
&lt;a href="https://c2.com/doc/oopsla89/paper.html">Class-Responsibility-Collaboration Card method (CRC Cards)&lt;/a>.
This must be read before class, as you will not be able to do the exercise if you have no idea what this is.&lt;/p></description></item><item><title>Info2: Exercise 01: Application Design</title><link>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-01/</guid><description>&lt;figure>&lt;img src="https://bkleinen.github.io/images/classes/info2/crc-cards.jpg"
 alt="CRC Cards">&lt;figcaption>
 &lt;p>CRC Cards&lt;/p>
 &lt;/figcaption>
&lt;/figure>

&lt;h2 id="learning-goals">Learning Goals&lt;/h2>
&lt;p>After this lab you should be able to agree with each of the following statements.&lt;/p>
&lt;p>I can use CRC Cards to design an application:&lt;/p>
&lt;ul>
&lt;li>Using the underline methods, I can identify candidates for classes, methods and fields.&lt;/li>
&lt;li>By working through scenarios I can identify cases where a class needs to be split up.&lt;/li>
&lt;li>By working through scenarios I can identify cases where classes need to be merged.&lt;/li>
&lt;li>By working through scenarios I can identify cases where additional classes need to be added.&lt;/li>
&lt;li>By working through scenarios I can identify what data needs to be stored.&lt;/li>
&lt;/ul>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Remember to do all the necessary steps listed on the &lt;a href="..">Labs&lt;/a> page, including the following exercises:&lt;/p></description></item><item><title>Info2: Exercise 01: Dealing with Objects and Toolbox</title><link>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-01/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please bring these exercises P1 and P2 printed out or written out with you to lab.
Please have your name on your page.&lt;/p>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> How do you obtain tickets to go see a movie? Write down the steps that you take, in order.&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> If you have tickets and have to cancel, what do you have to do? Write down the steps, in order.&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> Read up on the
&lt;a href="https://c2.com/doc/oopsla89/paper.html">Class-Responsibility-Collaboration Card method (CRC Cards)&lt;/a>.
This must be read before class, as you will not be able to do the exercise if you have no idea what this is.&lt;/p></description></item><item><title>Info2: Exercise 01: Dealing with Objects and Toolbox</title><link>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-01/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please bring these exercises P1 and P2 printed out or written out with you to lab.
Please have your name on your page.&lt;/p>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> How do you obtain tickets to go see a movie? Write down the steps that you take, in order.&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> If you have tickets and have to cancel, what do you have to do? Write down the steps, in order.&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> Read up on the
&lt;a href="https://c2.com/doc/oopsla89/paper.html">Class-Responsibility-Collaboration Card method (CRC Cards)&lt;/a>.
This must be read before class, as you will not be able to do the exercise if you have no idea what this is.&lt;/p></description></item><item><title>Info2: Exercise 02: Implementing CRC Cards</title><link>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-02/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please think through the following questions before coming to the lab. Write down your answers and bring them with you for pre-lab check-in.&lt;/p>
&lt;ol>
&lt;li>This exercise builds on the design you did last week using CRC cards.&lt;/li>
&lt;li>What properties should a data structure have that can model movie theater seats?&lt;/li>
&lt;li>Given an n x m matrix and a cell c in (r, c). How do I reference the neighboring cells in the same row? In the same column? How do I reference the diagonal cells?&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>These are the required exercises for this week. We are going to see if we can get our minds back into Java-Mode. Work in groups of two, &lt;em>&lt;strong>each&lt;/strong>&lt;/em> of you hands in the same report. Remember to put both of your names on the report. Groups of three are only possible if one of the three is new, i.e. did not take Info 1 last semester. You can continue to use BlueJ, or move to Eclipse, if you wish.&lt;/p></description></item><item><title>Info2: Exercise 02: Implementing CRC Cards</title><link>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-02/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please think through the following questions before coming to the lab. Write down your answers and bring them with you for pre-lab check-in.&lt;/p>
&lt;ol>
&lt;li>This exercise builds on the design you did last week using CRC cards.&lt;/li>
&lt;li>What properties should a data structure have that can model movie theater seats?&lt;/li>
&lt;li>Given an n x m matrix and a cell c in (r, c). How do I reference the neighboring cells in the same row? In the same column? How do I reference the diagonal cells?&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>These are the required exercises for this week. We are going to see if we can get our minds back into Java-Mode. Work in groups of two, &lt;em>&lt;strong>each&lt;/strong>&lt;/em> of you hands in the same report. Remember to put both of your names on the report. Groups of three are only possible if one of the three is new, i.e. did not take Info 1 last semester. You can continue to use BlueJ, or move to Eclipse, if you wish.&lt;/p></description></item><item><title>Info2: Exercise 02: Implementing CRC Cards</title><link>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-02/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please think through the following questions before coming to the lab. Write down your answers and bring them with you for pre-lab check-in.&lt;/p>
&lt;ol>
&lt;li>This exercise builds on the design you did last week using CRC cards.&lt;/li>
&lt;li>What properties should a data structure have that can model movie theater seats?&lt;/li>
&lt;li>Given an n x m matrix and a cell c in (r, c). How do I reference the neighboring cells in the same row? In the same column? How do I reference the diagonal cells?&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>These are the required exercises for this week. We are going to see if we can get our minds back into Java-Mode. Work in groups of two, &lt;em>&lt;strong>each&lt;/strong>&lt;/em> of you hands in the same report. Remember to put both of your names on the report. Groups of three are only possible if one of the three is new, i.e. did not take Info 1 last semester. You can continue to use BlueJ, or move to Eclipse, if you wish.&lt;/p></description></item><item><title>Info2: Exercise 02: Implementing CRC Cards</title><link>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-02/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>This exercise builds on the design you did last week using CRC cards. Please think through the following questions together with your team before coming to the lab and write down your answers somewhere.&lt;/p>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> What properties should a data structure have that can model movie theater seats?&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> Given an n x m matrix and a cell c in (r, c). How do I reference the neighboring cells in the same row? In the same column? How do I reference the diagonal cells?&lt;/p></description></item><item><title>Info2: Exercise 02: Implementing CRC Cards</title><link>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-02/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please think through the following questions before coming to the lab. Write down your answers and bring them with you for pre-lab check-in.&lt;/p>
&lt;ol>
&lt;li>This exercise builds on the design you did last week using CRC cards.&lt;/li>
&lt;li>What properties should a data structure have that can model movie theater seats?&lt;/li>
&lt;li>Given an n x m matrix and a cell c in (r, c). How do I reference the neighboring cells in the same row? In the same column? How do I reference the diagonal cells?&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>These are the required exercises for this week. We are going to see if we can get our minds back into Java-Mode. Work in groups of 2-3 people, &lt;em>&lt;strong>all&lt;/strong>&lt;/em> of you hand in the same report. Remember to put all of your names on the report. You can continue to use BlueJ, or move to Eclipse, if you wish.&lt;/p></description></item><item><title>Info2: Exercise 02: Implementing CRC Cards</title><link>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-02/</guid><description>&lt;h2 id="learning-goals">Learning Goals&lt;/h2>
&lt;p>After this lab you should be able to agree with each of the following statements. This looks like a lot, but it is all repetition from what you learned in Info1. Ideally you agree with each statement even before starting the lab.&lt;/p>
&lt;p>I remember programming concepts concerning classes and objects:&lt;/p>
&lt;ul>
&lt;li>I know the difference between classes and objects.&lt;/li>
&lt;li>I can instantiate an object.&lt;/li>
&lt;/ul>
&lt;p>I remember programming concepts concerning fields and variable types:&lt;/p></description></item><item><title>Info2: Exercise 03: Chatterbox</title><link>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-03/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please research the following questions before coming to the lab. Write down your answers and bring them with you for pre-lab check-in. There are many sites that will show you the code for this.&lt;/p>
&lt;ol>
&lt;li>How do you set up a connection between two computers in Java?&lt;/li>
&lt;li>Write a method to read from a connection in Java.&lt;/li>
&lt;li>Write a method to write to a connection in Java.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>These are the required exercises for this week. Work in groups of two, each of you hands in the same report. Remember to put both your names on the report. You can continue to use BlueJ, or move to Eclipse, if you wish. We will be practicing much programming in the small this semester.&lt;/p></description></item><item><title>Info2: Exercise 03: Chatterbox</title><link>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-03/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please research the following questions before coming to the lab. Write down your answers and bring them with you for pre-lab check-in. There are many sites that will show you the code for this.&lt;/p>
&lt;ol>
&lt;li>How do you set up a connection between two computers in Java?&lt;/li>
&lt;li>Write a method to read from a connection in Java.&lt;/li>
&lt;li>Write a method to write to a connection in Java.&lt;/li>
&lt;li>How do you create concurrent threads?&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>These are the required exercises for this week. Work in groups of two, each of you hands in the same report. Remember to put both your names on the report. You can continue to use BlueJ, or move to Eclipse, if you wish. We will be practicing much programming in the small this semester.&lt;/p></description></item><item><title>Info2: Exercise 03: Histogram</title><link>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-03/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please think through the following questions before coming to the lab. Write down your answers and bring them with you for pre-lab check-in.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>In some programming languages, such as Ada, you can
define an array of characters with any discrete type as the index:&lt;/p>
&lt;pre>&lt;code>someArray : ARRAY ['A' .. 'Z'] of INTEGER;
&lt;/code>&lt;/pre>
&lt;p>You can then access the array, for example, using a value of character type: someArray[&amp;lsquo;T&amp;rsquo;]. Java does not have this feature. How would you go about making an array in Java for representing counters for the letters &amp;lsquo;A&amp;rsquo; to &amp;lsquo;Z&amp;rsquo;?&lt;/p></description></item><item><title>Info2: Exercise 03: Histogram</title><link>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-03/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please think through the following questions before coming to the lab. Write down your answers and be prepared to answer them in class.&lt;/p>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> In some programming languages, such as Ada, you can define an array of characters with any discrete type as the index:&lt;/p>
&lt;pre>&lt;code> someArray : ARRAY ['A' .. 'Z'] of INTEGER;
&lt;/code>&lt;/pre>
&lt;p>You can then access the array, for example, using a value of character type: someArray[&amp;lsquo;T&amp;rsquo;]. Java does not have this feature. How would you go about making an array in Java for representing counters for the letters &amp;lsquo;A&amp;rsquo; to &amp;lsquo;Z&amp;rsquo;?&lt;/p></description></item><item><title>Info2: Exercise 03: Histogram</title><link>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-03/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please think through the following questions before coming to the lab. Write down your answers and bring them with you for pre-lab check-in.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>In some programming languages, such as Ada, you can
define an array of characters with any discrete type as the index:&lt;/p>
&lt;pre>&lt;code>someArray : ARRAY ['A' .. 'Z'] of INTEGER;
&lt;/code>&lt;/pre>
&lt;p>You can then access the array, for example, using a value of character type: someArray[&amp;lsquo;T&amp;rsquo;]. Java does not have this feature. How would you go about making an array in Java for representing counters for the letters &amp;lsquo;A&amp;rsquo; to &amp;lsquo;Z&amp;rsquo;?&lt;/p></description></item><item><title>Info2: Exercise 03: Histogram</title><link>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-03/</guid><description>&lt;h2 id="learning-goals">Learning Goals&lt;/h2>
&lt;p>After this lab you should be able to agree with each of the following statements.&lt;/p>
&lt;p>I can handle File-based IO with Java:&lt;/p>
&lt;ul>
&lt;li>I can read from a text file using a Reader, eg. BufferedReader.&lt;/li>
&lt;li>I can write to a text file using a Writer, eg. BufferedWriter.&lt;/li>
&lt;li>I close my streams after I finished reading or writing.&lt;/li>
&lt;li>I can use try-with-resources to make sure that in the end, a resource is always closed&lt;/li>
&lt;/ul>
&lt;p>I can handle Exceptions:&lt;/p></description></item><item><title>Info2: Exercise 04: Chatterbox</title><link>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-04/</guid><description>&lt;p>not yet released.&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please research/review the following questions before coming to the lab. Write down your answers and bring them with you for pre-lab check-in. There are many sites that will show you the code for this.&lt;/p>
&lt;ol>
&lt;li>How do you set up a connection with Sockets between two computers in Java?&lt;/li>
&lt;li>Write a method to read from a connection in Java.&lt;/li>
&lt;li>Write a method to write to a connection in Java.&lt;/li>
&lt;li>How do you create concurrent threads?&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>These are the required exercises for this week. Work in groups of two, each of you hands in the same report. Remember to put both your names on the report. You can continue to use BlueJ, or move to Eclipse, if you wish. We will be practicing much programming in the small this semester.&lt;/p></description></item><item><title>Info2: Exercise 04: Chatterbox</title><link>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-04/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Write down the code for the following questions and be able to explain what is happening.&lt;/p>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> How do you set up a connection with Sockets between two computers in Java?&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> Write a method to read from a connection in Java.&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> Write a method to write to a connection in Java.&lt;/p>
&lt;p>&lt;em>&lt;strong>P4.&lt;/strong>&lt;/em> How do you create concurrent threads?&lt;/p>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;h3 id="step-1-client-sends-messages-to-server">Step 1: Client sends messages to Server&lt;/h3>
&lt;ol>
&lt;li>Start your chatterbox by writing a method that listens for a Socket connection on a port. This is your Chatterbox server. For now, just echo what you have read to the console.&lt;/li>
&lt;li>Now write a client that connects to it and writes to a port.&lt;/li>
&lt;li>Test your methods on your own machine.&lt;/li>
&lt;li>Follow the instructions to connect to an HTW lab computer at &lt;a href="https://imi-bachelor.htw-berlin.de/studium/labore/hinweise/entfernter-zugriff-auf-labor-pcs-ueber-vpn-und-remote-desktop/">https://imi-bachelor.htw-berlin.de/studium/labore/hinweise/entfernter-zugriff-auf-labor-pcs-ueber-vpn-und-remote-desktop/&lt;/a> and copy your code onto your lab computer. It is recommended you use a ganymed computer. Share your address and port with others and see whether you can chat with each other. You might need to change the default ports of your program to ports between 8000 and 8010.&lt;/li>
&lt;/ol>
&lt;h3 id="step-2-server-can-send-message">Step 2: Server can send message&lt;/h3>
&lt;ol start="5">
&lt;li>Extend your Server such that you can enter messages on the Server side as well, and extend your Client to receive and Display those messages.&lt;/li>
&lt;/ol>
&lt;h3 id="step-3-simultaneous-sending-and-receiving">Step 3: Simultaneous sending and receiving&lt;/h3>
&lt;ol start="6">
&lt;li>Now extend your Chatterbox such that it can &lt;em>simultaneously&lt;/em> receive and send messages using Java Threads.&lt;/li>
&lt;/ol>
&lt;h2 id="for-the-bored">For the bored:&lt;/h2>
&lt;ol start="7">
&lt;li>Remember that support desk application we had? Well, can you set it up so that your server listens for someone to type something, feeds it into the support desk, gets the support desk answer back and returns that to the person asking?&lt;/li>
&lt;li>Read up on Eliza and see if you can make a chatterbox &amp;ldquo;shrink&amp;rdquo; (psychiatrist).&lt;/li>
&lt;li>Create a Chat Server that can handle connections from more than one client using one Thread for each connected client.&lt;/li>
&lt;/ol>
&lt;h2 id="lab-report--what-to-turn-in">Lab Report / What to turn in&lt;/h2>
&lt;p>All info on the lab reports can be found on the &lt;a href="https://bkleinen.github.io/classes/ss2020/info2/labs/">Labs&lt;/a> page.&lt;/p></description></item><item><title>Info2: Exercise 04: Chatterbox</title><link>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-04/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please research/review the following questions before coming to the lab. Write down your answers and bring them with you for pre-lab check-in. There are many sites that will show you the code for this.&lt;/p>
&lt;ol>
&lt;li>How do you set up a connection with Sockets between two computers in Java?&lt;/li>
&lt;li>Write a method to read from a connection in Java.&lt;/li>
&lt;li>Write a method to write to a connection in Java.&lt;/li>
&lt;li>How do you create concurrent threads?&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>These are the required exercises for this week. Work in groups of 2-3, each of you hands in the same report. Remember to put both your names on the report. You can continue to use BlueJ, or move to Eclipse, if you wish. We will be practicing much programming in the small this semester.&lt;/p></description></item><item><title>Info2: Exercise 04: Chatterbox</title><link>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-04/</guid><description>&lt;h2 id="learning-goals">Learning Goals&lt;/h2>
&lt;p>After this lab you should be able to agree with each of the following statements.&lt;/p>
&lt;p>I can use the Socket API for TCP connections:&lt;/p>
&lt;ul>
&lt;li>I can create a server that listens for and accepts connections&lt;/li>
&lt;li>I can create a client that makes a connection request to the server&lt;/li>
&lt;li>I can send text from a client to a server via streams&lt;/li>
&lt;li>I can send text from a server to a client via streams&lt;/li>
&lt;li>I can use multithreading to simultaneously process tcp requests and input from the user&lt;/li>
&lt;li>(if you do the &amp;ldquo;for the bored&amp;rdquo; part: I can use multithreading for the server to handle multiple connection requests)&lt;/li>
&lt;/ul>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Write down the code for the following questions and be able to explain what is happening.&lt;/p></description></item><item><title>Info2: Exercise 05: Execution times</title><link>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-05/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please have these completed before coming to the lab. BTW, I like questions like this on the exam&amp;hellip;&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Programs A and B are analyzed and are found to have worst-case running times no greater than 150 N log N and N&lt;!-- raw HTML omitted -->2&lt;!-- raw HTML omitted --> , respectively. Answer the following questions, if possible:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Which program has the better guarantee on the running time for large values of N (N &amp;gt; 10 000)?&lt;/p></description></item><item><title>Info2: Exercise 05: Execution times</title><link>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-05/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please have these completed before coming to the lab. BTW, I like questions like this on the exam&amp;hellip;&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Programs A and B are analyzed and are found to have worst-case running times no greater than 150 N log N and N&lt;!-- raw HTML omitted -->2&lt;!-- raw HTML omitted -->, respectively. Answer the following questions, if possible:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Which program has the better guarantee on the running time for large values of N (N &amp;gt; 10 000)?&lt;/p></description></item><item><title>Info2: Exercise 05: Execution times</title><link>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-05/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please have these completed before coming to the lab. BTW, I like questions like this on the exam&amp;hellip;&lt;/p>
&lt;h3 id="part-1">Part 1&lt;/h3>
&lt;p>Programs A and B are analyzed and are found to have worst-case running times no greater than 150 N log N and N&lt;!-- raw HTML omitted -->2&lt;!-- raw HTML omitted -->, respectively. Answer the following questions, if possible:&lt;/p>
&lt;ol>
&lt;li>Which program has the better guarantee on the running time for large values of N (N &amp;gt; 10 000)?&lt;/li>
&lt;li>Which program has the better guarantee on the running time for small values of N (N &amp;lt; 100)?&lt;/li>
&lt;li>Which program will run faster on average for N = 1000?&lt;/li>
&lt;li>Is it possible that program B will run faster than program A on all possible inputs?&lt;/li>
&lt;/ol>
&lt;h3 id="part-2">Part 2&lt;/h3>
&lt;p>An algorithm takes 0.5 ms for input size 100. How long will it take for input size 500 if the running time is the following:&lt;/p></description></item><item><title>Info2: Exercise 05: Execution times</title><link>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-05/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> Programs A and B are analyzed and are found to have worst-case running times no greater than 150 N log N and N&lt;!-- raw HTML omitted -->2&lt;!-- raw HTML omitted -->, respectively. Answer the following questions, if possible:&lt;/p>
&lt;p>a) Which program has the better guarantee on the running time for large values of N (N &amp;gt; 10 000)?&lt;/p>
&lt;p>b) Which program has the better guarantee on the running time for small values of N (N &amp;lt; 100)?&lt;/p></description></item><item><title>Info2: Exercise 05: Execution times</title><link>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-05/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please have these completed before coming to the lab. BTW, I like questions like this on the exam&amp;hellip;&lt;/p>
&lt;h3 id="part-1">Part 1&lt;/h3>
&lt;p>Programs A and B are analyzed and are found to have worst-case running times no greater than 150 N log N and N&lt;!-- raw HTML omitted -->2&lt;!-- raw HTML omitted -->, respectively. Answer the following questions, if possible:&lt;/p>
&lt;ol>
&lt;li>Which program has the better guarantee on the running time for large values of N (N &amp;gt; 10 000)?&lt;/li>
&lt;li>Which program has the better guarantee on the running time for small values of N (N &amp;lt; 100)?&lt;/li>
&lt;li>Which program will run faster on average for N = 1000?&lt;/li>
&lt;li>Is it possible that program B will run faster than program A on all possible inputs?&lt;/li>
&lt;/ol>
&lt;h3 id="part-2">Part 2&lt;/h3>
&lt;p>An algorithm takes 0.5 ms for input size 100. How long will it take for input size 500 if the running time is the following:&lt;/p></description></item><item><title>Info2: Exercise 05: Execution times</title><link>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-05/</guid><description>&lt;h2 id="learning-goals">Learning Goals&lt;/h2>
&lt;p>After this lab you should be able to agree with each of the following statements.&lt;/p>
&lt;p>I can evaluate the efficiency of algorithms:&lt;/p>
&lt;ul>
&lt;li>I understand the correlation between input and running time for different program structures&lt;/li>
&lt;li>I can use big-o-notation to describe the running time of algorithms&lt;/li>
&lt;li>I can calculate the running time of algorithms by adding up running times of different structures&lt;/li>
&lt;li>I can compare running times based on their running time in big-o-notation&lt;/li>
&lt;/ul>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> Programs A and B are analyzed and are found to have worst-case running times no greater than 150 N log N and N&lt;!-- raw HTML omitted -->2&lt;!-- raw HTML omitted -->, respectively. Answer the following questions, if possible:&lt;/p></description></item><item><title>Info2: Exercise 06: Reverse Polish Notation</title><link>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-06/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Make sure that you understand &lt;a href="../lab-06-handout">postfix evaluation&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://bkleinen.github.io/broken_link">Łukasiewicz&lt;/a> was a Polish logician, so his notation for parentheses-free expressions is often called Reverse Polish Notation. To get your brain in gear, convert the following expressions to RPN! What are the values of the expressions?&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>1. &amp;lt;tt&amp;gt;1 * 2 + 3 &amp;lt;/tt&amp;gt;
2. &amp;lt;tt&amp;gt;1 + 2 * 3 &amp;lt;/tt&amp;gt;
3. &amp;lt;tt&amp;gt;1 + 2 - 3 ^ 4&amp;lt;/tt&amp;gt;
4. &amp;lt;tt&amp;gt;1 ^ 2 - 3 * 4&amp;lt;/tt&amp;gt;
5. &amp;lt;tt&amp;gt;1 + 2 * 3 - 4 ^ 5 + 6&amp;lt;/tt&amp;gt;
6. &amp;lt;tt&amp;gt;( 1 + 2 ) * 3 + ( 4 ^ ( 5 - 6 ) )&amp;lt;/tt&amp;gt;
7. &amp;lt;tt&amp;gt;1 + 2 + 3 / 4 + 5 + 6 * ( 7 + 8 )&amp;lt;/tt&amp;gt;
8. &amp;lt;tt&amp;gt;9 - 1 - 2 - 3 * 2 - 1&amp;lt;/tt&amp;gt;
&lt;/code>&lt;/pre>
&lt;p> &lt;/p></description></item><item><title>Info2: Exercise 06: Reverse Polish Notation</title><link>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-06/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Make sure that you understand &lt;a href="../lab-06-handout">postfix evaluation&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://bkleinen.github.io/broken_link"> 	Łukasiewicz&lt;/a> was a Polish logician, so his notation for parentheses-free expressions is often called Reverse Polish Notation. To get your brain in gear, convert the following expressions to RPN! What are the values of the expressions?&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>1. &amp;lt;tt&amp;gt;1 * 2 + 3 &amp;lt;/tt&amp;gt;
2. &amp;lt;tt&amp;gt;1 + 2 * 3 &amp;lt;/tt&amp;gt;
3. &amp;lt;tt&amp;gt;1 + 2 - 3 ^ 4&amp;lt;/tt&amp;gt;
4. &amp;lt;tt&amp;gt;1 ^ 2 - 3 * 4&amp;lt;/tt&amp;gt;
5. &amp;lt;tt&amp;gt;1 + 2 * 3 - 4 ^ 5 + 6&amp;lt;/tt&amp;gt;
6. &amp;lt;tt&amp;gt;( 1 + 2 ) * 3 + ( 4 ^ ( 5 - 6 ) )&amp;lt;/tt&amp;gt;
7. &amp;lt;tt&amp;gt;1 + 2 + 3 / 4 + 5 + 6 * ( 7 + 8 )&amp;lt;/tt&amp;gt;
8. &amp;lt;tt&amp;gt;9 - 1 - 2 - 3 * 2 - 1&amp;lt;/tt&amp;gt;
&lt;/code>&lt;/pre>
&lt;p> &lt;/p></description></item><item><title>Info2: Exercise 06: Reverse Polish Notation</title><link>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-06/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Make sure that you understand &lt;a href="../lab-06-handout">postfix evaluation&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://bkleinen.github.io/broken_link"> 	Łukasiewicz&lt;/a> was a Polish logician, so his notation for parentheses-free expressions is often called Reverse Polish Notation. To get your brain in gear, convert the following expressions to RPN! What are the values of the expressions?&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>1. 1 * 2 + 3
2. 1 + 2 * 3
3. 1 + 2 - 3 ^ 4
4. 1 ^ 2 - 3 * 4
5. 1 + 2 * 3 - 4 ^ 5 + 6
6. ( 1 + 2 ) * 3 + ( 4 ^ ( 5 - 6 ) )
7. 1 + 2 + 3 / 4 + 5 + 6 * ( 7 + 8 )
8. 9 - 1 - 2 - 3 * 2 - 1
&lt;/code>&lt;/pre>
&lt;p> &lt;/p></description></item><item><title>Info2: Exercise 06: Reverse Polish Notation</title><link>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-06/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> Make sure that you understand &lt;a href="../lab-06-handout">postfix evaluation&lt;/a>. If you do the complete Pre-Lab you will be able to understand the algorithms given in the hand out.&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> What is the order of precedence for the operators &amp;ldquo;+&amp;rdquo;, &amp;ldquo;-&amp;rdquo;, &amp;ldquo;*&amp;rdquo;, &amp;ldquo;/&amp;rdquo;, &amp;ldquo;^&amp;rdquo;? If we wanted to include &amp;ldquo;(&amp;rdquo; and &amp;ldquo;)&amp;rdquo; in this order, where would each of them be?&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> Łukasiewicz was a Polish logician, so his notation for parentheses-free expressions is often called Reverse Polish Notation. To get your brain in gear, convert the following expressions to RPN! What are the values of the expressions?&lt;/p></description></item><item><title>Info2: Exercise 06: Reverse Polish Notation</title><link>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-06/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Make sure that you understand &lt;a href="../lab-06-handout">postfix evaluation&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://bkleinen.github.io/broken_link"> 	Łukasiewicz&lt;/a> was a Polish logician, so his notation for parentheses-free expressions is often called Reverse Polish Notation. To get your brain in gear, convert the following expressions to RPN! What are the values of the expressions?&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>1. 1 * 2 + 3
2. 1 + 2 * 3
3. 1 + 2 - 3 ^ 4
4. 1 ^ 2 - 3 * 4
5. 1 + 2 * 3 - 4 ^ 5 + 6
6. ( 1 + 2 ) * 3 + ( 4 ^ ( 5 - 6 ) )
7. 1 + 2 + 3 / 4 + 5 + 6 * ( 7 + 8 )
8. 9 - 1 - 2 - 3 * 2 - 1
&lt;/code>&lt;/pre>
&lt;p> &lt;/p></description></item><item><title>Info2: Exercise 06: Reverse Polish Notation</title><link>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-06/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> Make sure that you understand postfix evaluation. If you do the complete Pre-Lab you will be able to understand the algorithms given in the &lt;a href="../lab-06-handout">hand out&lt;/a>.&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> What is the order of precedence for the operators &amp;ldquo;+&amp;rdquo;, &amp;ldquo;-&amp;rdquo;, &amp;ldquo;*&amp;rdquo;, &amp;ldquo;/&amp;rdquo;, &amp;ldquo;^&amp;rdquo;? If we wanted to include &amp;ldquo;(&amp;rdquo; and &amp;ldquo;)&amp;rdquo; in this order, where would each of them be?&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> Łukasiewicz was a Polish logician, so his notation for parentheses-free expressions is often called Reverse Polish Notation. To get your brain in gear, convert the following expressions to RPN! What are the values of the expressions?&lt;/p></description></item><item><title>Info2: Exercise 07: Recursive Triangles</title><link>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-07/</guid><description>&lt;p>&lt;img src="../images/SierpinskiTriangle.png" alt="Machine" title="Sierpinski Triangle">&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>What exactly is an equilateral
triangle? Can you write a class that draws a triangle? What data do you need to know in order to put a triangle at a particular position on the screen?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What is the mathematical formula for finding the midpoint of a line segment that connects two Points?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What is the resolution of your computer screen? How can you find out? What is the largest equilateral triangle that you can show on a screen with this resolution?&lt;/p></description></item><item><title>Info2: Exercise 07: Recursive Triangles</title><link>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-07/</guid><description>&lt;p>&lt;img src="../images/SierpinskiTriangle.png" alt="Machine" title="Sierpinski Triangle">&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>What exactly is an equilateral
triangle? Can you write a class that draws a triangle? What data do you need to know in order to put a triangle at a particular position on the screen?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What is the mathematical formula for finding the midpoint of a line segment that connects two Points?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What is the resolution of your computer screen? How can you find out? What is the largest equilateral triangle that you can show on a screen with this resolution?&lt;/p></description></item><item><title>Info2: Exercise 07: Recursive Triangles</title><link>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-07/</guid><description>&lt;p>&lt;img src="../images/SierpinskiTriangle.png" alt="Machine" title="Sierpinski Triangle">&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>What exactly is an equilateral
triangle? Can you write a class that draws a triangle? What data do you need to know in order to put a triangle at a particular position on the screen?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What is the mathematical formula for finding the midpoint of a line segment that connects two Points?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What is the resolution of your computer screen? How can you find out? What is the largest equilateral triangle that you can show on a screen with this resolution?&lt;/p></description></item><item><title>Info2: Exercise 07: Recursive Triangles</title><link>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-07/</guid><description>&lt;p>&lt;img src="../images/SierpinskiTriangle.png" alt="Machine" title="Sierpinski Triangle">&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> What exactly is an equilateral triangle? Can you write a class that draws a triangle? What data do you need to know in order to put a triangle at a particular position on the screen?&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> What is the mathematical formula for finding the midpoint of a line segment that connects two Points?&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> What is the resolution of your computer screen? How can you find out? What is the largest equilateral triangle that you can show on a screen with this resolution?&lt;/p></description></item><item><title>Info2: Exercise 07: Recursive Triangles</title><link>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-07/</guid><description>&lt;p>&lt;img src="../images/SierpinskiTriangle.png" alt="Machine" title="Sierpinski Triangle">&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>What exactly is an equilateral
triangle? Can you write a class that draws a triangle? What data do you need to know in order to put a triangle at a particular position on the screen?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What is the mathematical formula for finding the midpoint of a line segment that connects two Points?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What is the resolution of your computer screen? How can you find out? What is the largest equilateral triangle that you can show on a screen with this resolution?&lt;/p></description></item><item><title>Info2: Exercise 07: Recursive Triangles</title><link>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-07/</guid><description>&lt;p>&lt;img src="../images/SierpinskiTriangle.png" alt="Machine" title="Sierpinski Triangle">&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> What exactly is an equilateral triangle? Draft a class that draws a triangle. What data do you need to know in order to put a triangle at a particular position on the screen?&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> What is the mathematical formula for finding the midpoint of a line segment that connects two Points?&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> What is the resolution of your computer screen? How can you find out? What is the largest equilateral triangle that you can show on a screen with this resolution?&lt;/p></description></item><item><title>Info2: Exercise 08: Eight Queens</title><link>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-08/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>This is one of the standard exercises that all computer science students have to solve at least once in their lifetimes! If you have never played chess, find someone who does or find a book and look up how a Queen moves and threatens in chess. Find out what a chess board looks like.&lt;/li>
&lt;li>Define a matrix (two-dimensional array) of integers in Java. Write a method to put a -1 in every cell of the matrix.&lt;/li>
&lt;li>Given two cells in a matrix, (r1, c1) and (r2, c2). How can you determine if
&lt;ol>
&lt;li>the cells are in the same row?&lt;/li>
&lt;li>the cells are in the same column?&lt;/li>
&lt;li>the cells are in the same ascending diagonal?&lt;/li>
&lt;li>the cells are in the same descending diagonal?&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Implement the recursive solution to the Towers of Hanoi so that you can review how recursion works using the debugger.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;ol start="9">
&lt;li>Our goal is to write a program to determine if eight queens can be placed on an 8 x 8 chess board without them threatening each other! Start by deciding how to represent a chess board with a data structure. Don&amp;rsquo;t worry about the colors of the board yet. Write a Chessboard class! What methods will you need?&lt;/li>
&lt;li>Write a method for determining if the current board state contains a queen that is threatening another one. What is the complexity of your method in terms of N, the number of rows on the board? If your algorithm is worse than linear, you might want to look for something better.&lt;/li>
&lt;li>We speak of &amp;ldquo;backtracking&amp;rdquo; when we go back to a previous state and try a different branch. Use some coins on a paper chess board to figure out what to do when you reach a state in which one queen is threatened by another. There are iterative, recursive, and random solutions to this problem. Try and implement a recursive solution!&lt;/li>
&lt;li>Now implement a search routine that looks for a state in which the queens don&amp;rsquo;t threaten each other. If there is a solution, print it to System.out. If there is more than one solution, print them as well. What is the complexity of your algorithm? Does your program work for 10 queens on a 10 x 10 board? 13 on a 13 x 13 board?&lt;/li>
&lt;li>(For the bored) Design a Chessboard GUI with a queen figure. Output the result of the program using your Chessboard GUI.&lt;/li>
&lt;li>(For the really bored) Animate the search by showing the positions as they are tested, illuminating the threats. How long does it take to show such an attempt? How long will the program need for the exhaustive search?&lt;/li>
&lt;li>(If you are already finished with all of this and have time on your hands) How many knights can be put on an 8 x 8 board without threatening each other?&lt;/li>
&lt;li>(For the mathematically curious) For which N is it possible to put N queens on an N x N board? Example: 2 queens cannot be placed on a 2 x 2 board, 3 cannot be placed on a 3 x 3 board. But 4 queens can be placed on a 4 x 4 board, for example at B1, D2, A3, C4. Can you prove this?&lt;/li>
&lt;/ol>
&lt;h2 id="lab-report--what-to-turn-in">Lab Report / What to turn in&lt;/h2>
&lt;p>Your report is due the day before your next lab (for exact times, please refer to moodle).&lt;/p></description></item><item><title>Info2: Exercise 08: Eight Queens</title><link>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-08/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>This is one of the standard exercises that all computer science students have to solve at least once in their lifetimes! If you have never played chess, find someone who does or find a book and look up how a Queen moves and threatens in chess. Find out what a chess board looks like.&lt;/li>
&lt;li>Define a matrix (two-dimensional array) of integers in Java. Write a method to put a -1 in every cell of the matrix.&lt;/li>
&lt;li>Given two cells in a matrix, (r1, c1) and (r2, c2). How can you determine if
&lt;ol>
&lt;li>the cells are in the same row?&lt;/li>
&lt;li>the cells are in the same column?&lt;/li>
&lt;li>the cells are in the same ascending diagonal?&lt;/li>
&lt;li>the cells are in the same descending diagonal?&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Implement the recursive solution to the Towers of Hanoi so that you can review how recursion works using the debugger.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;ol start="9">
&lt;li>Our goal is to write a program to determine if eight queens can be placed on an 8 x 8 chess board without them threatening each other! Start by deciding how to represent a chess board with a data structure. Don&amp;rsquo;t worry about the colors of the board yet. Write a Chessboard class! What methods will you need?&lt;/li>
&lt;li>Write a method for determining if the current board state contains a queen that is threatening another one. What is the complexity of your method in terms of N, the number of rows on the board? If your algorithm is worse than linear, you might want to look for something better.&lt;/li>
&lt;li>We speak of &amp;ldquo;backtracking&amp;rdquo; when we go back to a previous state and try a different branch. Use some coins on a paper chess board to figure out what to do when you reach a state in which one queen is threatened by another. There are iterative, recursive, and random solutions to this problem. Try and implement a recursive solution!&lt;/li>
&lt;li>Now implement a search routine that looks for a state in which the queens don&amp;rsquo;t threaten each other. If there is a solution, print it to System.out. If there is more than one solution, print them as well. What is the complexity of your algorithm? Does your program work for 10 queens on a 10 x 10 board? 13 on a 13 x 13 board?&lt;/li>
&lt;li>(For the bored) Design a Chessboard GUI with a queen figure. Output the result of the program using your Chessboard GUI.&lt;/li>
&lt;li>(For the really bored) Animate the search by showing the positions as they are tested, illuminating the threats. How long does it take to show such an attempt? How long will the program need for the exhaustive search?&lt;/li>
&lt;li>(If you are already finished with all of this and have time on your hands) How many knights can be put on an 8 x 8 board without threatening each other?&lt;/li>
&lt;li>(For the mathematically curious) For which N is it possible to put N queens on an N x N board? Example: 2 queens cannot be placed on a 2 x 2 board, 3 cannot be placed on a 3 x 3 board. But 4 queens can be placed on a 4 x 4 board, for example at B1, D2, A3, C4. Can you prove this?&lt;/li>
&lt;/ol>
&lt;h2 id="lab-report--what-to-turn-in">Lab Report / What to turn in&lt;/h2>
&lt;p>Your report is due the day before your next lab (for exact times, please refer to moodle).&lt;/p></description></item><item><title>Info2: Exercise 08: Eight Queens</title><link>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-08/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> Make a chess board and mark how a Queen moves and threatens.&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> Define a matrix (two-dimensional array) of integers in Java. Write a method to put a &lt;em>-1&lt;/em> in every cell of the matrix.&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> Given two cells in a matrix, (r1, c1) and (r2, c2). How can you determine if
a) the cells are in the same row?
b) the cells are in the same column?
c) the cells are in the same ascending diagonal (lower left to upper right)?
d) the cells are in the same descending diagonal (upper left to lower right)?&lt;/p></description></item><item><title>Info2: Exercise 08: Eight Queens</title><link>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-08/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>This is one of the standard exercises that all computer science students have to solve at least once in their lifetimes! If you have never played chess, find someone who does or find a book and look up how a Queen moves and threatens in chess. Find out what a chess board looks like.&lt;/li>
&lt;li>Define a matrix (two-dimensional array) of integers in Java. Write a method to put a -1 in every cell of the matrix.&lt;/li>
&lt;li>Given two cells in a matrix, (r1, c1) and (r2, c2). How can you determine if
&lt;ol>
&lt;li>the cells are in the same row?&lt;/li>
&lt;li>the cells are in the same column?&lt;/li>
&lt;li>the cells are in the same ascending diagonal?&lt;/li>
&lt;li>the cells are in the same descending diagonal?&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Implement the recursive solution to the Towers of Hanoi so that you can review how recursion works using the debugger.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;ol start="9">
&lt;li>Our goal is to write a program to determine if eight queens can be placed on an 8 x 8 chess board without them threatening each other! Start by deciding how to represent a chess board with a data structure. Don&amp;rsquo;t worry about the colors of the board yet. Write a Chessboard class! What methods will you need?&lt;/li>
&lt;li>Write a method for determining if the current board state contains a queen that is threatening another one. What is the complexity of your method in terms of N, the number of rows on the board? If your algorithm is worse than linear, you might want to look for something better.&lt;/li>
&lt;li>We speak of &amp;ldquo;backtracking&amp;rdquo; when we go back to a previous state and try a different branch. Use some coins on a paper chess board to figure out what to do when you reach a state in which one queen is threatened by another. There are iterative, recursive, and random solutions to this problem. Try and implement a recursive solution!&lt;/li>
&lt;li>Now implement a search routine that looks for a state in which the queens don&amp;rsquo;t threaten each other. If there is a solution, print it to System.out. If there is more than one solution, print them as well. What is the complexity of your algorithm? Does your program work for 10 queens on a 10 x 10 board? 13 on a 13 x 13 board?&lt;/li>
&lt;li>(For the bored) Design a Chessboard GUI with a queen figure. Output the result of the program using your Chessboard GUI.&lt;/li>
&lt;li>(For the really bored) Animate the search by showing the positions as they are tested, illuminating the threats. How long does it take to show such an attempt? How long will the program need for the exhaustive search?&lt;/li>
&lt;li>(If you are already finished with all of this and have time on your hands) How many knights can be put on an 8 x 8 board without threatening each other?&lt;/li>
&lt;li>(For the mathematically curious) For which N is it possible to put N queens on an N x N board? Example: 2 queens cannot be placed on a 2 x 2 board, 3 cannot be placed on a 3 x 3 board. But 4 queens can be placed on a 4 x 4 board, for example at B1, D2, A3, C4. Can you prove this?&lt;/li>
&lt;/ol>
&lt;h2 id="lab-report--what-to-turn-in">Lab Report / What to turn in&lt;/h2>
&lt;p>Your report is due the day before your next lab (for exact times, please refer to moodle).
Submit both a lab report as pdf and your whole source code directory as a zip.&lt;/p></description></item><item><title>Info2: Exercise 08: Eight Queens</title><link>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-08/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> Make a chess board and mark how a Queen moves and threatens.&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> Define a matrix (two-dimensional array) of integers in Java. Write a method to put a &lt;em>-1&lt;/em> in every cell of the matrix.&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> Given two cells in a matrix, (r1, c1) and (r2, c2). How can you determine if
a) the cells are in the same row?
b) the cells are in the same column?
c) the cells are in the same ascending diagonal (lower left to upper right)?
d) the cells are in the same descending diagonal (upper left to lower right)?&lt;/p></description></item><item><title>Info2: Exercise 08: Multi-Threaded Chat Application</title><link>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-08/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Experiment with the Source Code Examples for Concurrency.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Do a Class Design for your Chat Application: Don&amp;rsquo;t put all of the Server in one and all of the Client in another class; design small classes with one responsibility and small methods. Especially the user interface should not be intermingled with the rest of the application.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="assignment-multi-threaded-chat">Assignment: Multi-Threaded Chat&lt;/h2>
&lt;p>This builds on &lt;a href="../lab-03">Assignment 3, Chatterbox&lt;/a>, where you built a little Chat Application that was only able to handle one connection from one client. Now you are required to build a full Chat Application with a Server that allows multiple clients to connect, and sends chat messages to all connected clients. To do this simultaneously, e.g. accept user input in the client and receive messages from the server, you will need multiple threads both in the client and the server.&lt;/p></description></item><item><title>Info2: Exercise 08: Multi-Threaded Chat Application</title><link>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-08-chat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-08-chat/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Experiment with the Source Code Examples for Concurrency.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Do a Class Design for your Chat Application: Don&amp;rsquo;t put all of the Server in one and all of the Client in another class; design small classes with one responsibility and small methods. Especially the user interface should not be intermingled with the rest of the application.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="assignment-multi-threaded-chat">Assignment: Multi-Threaded Chat&lt;/h2>
&lt;p>This builds on &lt;a href="../lab-03">Assignment 3, Chatterbox&lt;/a>, where you built a little Chat Application that was only able to handle one connection from one client. Now you are required to build a full Chat Application with a Server that allows multiple clients to connect, and sends chat messages to all connected clients. To do this simultaneously, e.g. accept user input in the client and receive messages from the server, you will need multiple threads both in the client and the server.&lt;/p></description></item><item><title>Info2: Exercise 08: Multi-Threaded Chat Application</title><link>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-08-chat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-08-chat/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Experiment with the Source Code Examples for Concurrency.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Do a Class Design for your Chat Application: Don&amp;rsquo;t put all of the Server in one and all of the Client in another class; design small classes with one responsibility and small methods. Especially the user interface should not be intermingled with the rest of the application.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="assignment-multi-threaded-chat">Assignment: Multi-Threaded Chat&lt;/h2>
&lt;p>This builds on &lt;a href="../lab-03">Assignment 3, Chatterbox&lt;/a>, where you built a little Chat Application that was only able to handle one connection from one client. Now you are required to build a full Chat Application with a Server that allows multiple clients to connect, and sends chat messages to all connected clients. To do this simultaneously, e.g. accept user input in the client and receive messages from the server, you will need multiple threads both in the client and the server.&lt;/p></description></item><item><title>Info2: Exercise 08: Multi-Threaded Chat Application</title><link>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-08-chat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-08-chat/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Experiment with the Source Code Examples for Concurrency.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Do a Class Design for your Chat Application: Don&amp;rsquo;t put all of the Server in one and all of the Client in another class; design small classes with one responsibility and small methods. Especially the user interface should not be intermingled with the rest of the application.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="assignment-multi-threaded-chat">Assignment: Multi-Threaded Chat&lt;/h2>
&lt;p>This builds on &lt;a href="../lab-03">Assignment 3, Chatterbox&lt;/a>, where you built a little Chat Application that was only able to handle one connection from one client. Now you are required to build a full Chat Application with a Server that allows multiple clients to connect, and sends chat messages to all connected clients. To do this simultaneously, e.g. accept user input in the client and receive messages from the server, you will need multiple threads both in the client and the server.&lt;/p></description></item><item><title>Info2: Exercise 09: Eight Queens</title><link>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-09/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>This is one of the standard exercises that all computer science students have to solve at least once in their lifetimes! If you have never played chess, find someone who does or find a book and look up how a Queen moves and threatens in chess. Find out what a chess board looks like.&lt;/li>
&lt;li>Define a matrix (two-dimensional array) of integers in Java. Write a method to put a -1 in every cell of the matrix.&lt;/li>
&lt;li>Given two cells in a matrix, (r1, c1) and (r2, c2). How can you determine if
&lt;ol>
&lt;li>the cells are in the same row?&lt;/li>
&lt;li>the cells are in the same column?&lt;/li>
&lt;li>the cells are in the same ascending diagonal?&lt;/li>
&lt;li>the cells are in the same descending diagonal?&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Implement the recursive solution to the Towers of Hanoi so that you can review how recursion works using the debugger.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;ol start="9">
&lt;li>Our goal is to write a program to determine if eight queens can be placed on an 8 x 8 chess board without them threatening each other! Start by deciding how to represent a chess board with a data structure. Don&amp;rsquo;t worry about the colors of the board yet. Write a Chessboard class! What methods will you need?&lt;/li>
&lt;li>Write a method for determining if the current board state contains a queen that is threatening another one. What is the complexity of your method in terms of N, the number of rows on the board? If your algorithm is worse than linear, you might want to look for something better.&lt;/li>
&lt;li>We speak of &amp;ldquo;backtracking&amp;rdquo; when we go back to a previous state and try a different branch. Use some coins on a paper chess board to figure out what to do when you reach a state in which one queen is threatened by another. There are iterative, recursive, and random solutions to this problem. Try and implement a recursive solution!&lt;/li>
&lt;li>Now implement a search routine that looks for a state in which the queens don&amp;rsquo;t threaten each other. If there is a solution, print it to System.out. If there is more than one solution, print them as well. What is the complexity of your algorithm? Does your program work for 10 queens on a 10 x 10 board? 13 on a 13 x 13 board?&lt;/li>
&lt;li>(For the bored) Design a Chessboard GUI with a queen figure. Output the result of the program using your Chessboard GUI.&lt;/li>
&lt;li>(For the really bored) Animate the search by showing the positions as they are tested, illuminating the threats. How long does it take to show such an attempt? How long will the program need for the exhaustive search?&lt;/li>
&lt;li>(If you are already finished with all of this and have time on your hands) How many knights can be put on an 8 x 8 board without threatening each other?&lt;/li>
&lt;li>(For the mathematically curious) For which N is it possible to put N queens on an N x N board? Example: 2 queens cannot be placed on a 2 x 2 board, 3 cannot be placed on a 3 x 3 board. But 4 queens can be placed on a 4 x 4 board, for example at B1, D2, A3, C4. Can you prove this?&lt;/li>
&lt;/ol>
&lt;h2 id="lab-report--what-to-turn-in">Lab Report / What to turn in&lt;/h2>
&lt;p>Your report is due by 23:00 am the night before your next lab.
Submit a Report in PDF Format and the Source Code as Zipped file.&lt;/p></description></item><item><title>Info2: Exercise 09: Probabilistic Algorithms</title><link>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-09/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>How do you compute the area of a circle and a rectangle?&lt;/li>
&lt;li>Draw an circle that matches exactly into a square. How do the areas of the
circle and the square relate to each other?&lt;/li>
&lt;li>How can you represent points in a plane?&lt;/li>
&lt;li>Prepare a sketch with formulas about the ratio of the areas and how to determine
if a given point in the square is as well within the circle.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;h3 id="computation-of-pi">Computation of Pi&lt;/h3>
&lt;p>Use an probabilistic algorithm to approximate the Number Pi:&lt;/p></description></item><item><title>Info2: Exercise 09: Probabilistic Algorithms</title><link>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-09/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>How do you compute the area of a circle and a rectangle?&lt;/li>
&lt;li>Draw an circle that matches exactly into a square. How do the areas of the
circle and the square relate to each other?&lt;/li>
&lt;li>How can you represent points in a plane?&lt;/li>
&lt;li>Prepare a sketch with formulas about the ratio of the areas and how to determine
if a given point in the square is as well within the circle.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;h3 id="computation-of-pi">Computation of Pi&lt;/h3>
&lt;p>Use an probabilistic algorithm to approximate the Number Pi:&lt;/p></description></item><item><title>Info2: Exercise 09: Probabilistic Algorithms</title><link>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-09/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> How do you compute the area of a circle and a rectangle?&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> Draw an circle that matches exactly into a square. How do the areas of the
circle and the square relate to each other?&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> How can you represent points in a plane?&lt;/p>
&lt;p>&lt;em>&lt;strong>P4.&lt;/strong>&lt;/em> Prepare a sketch with formulas about the ratio of the areas and how to determine
if a given point in the square is as well within the circle.&lt;/p></description></item><item><title>Info2: Exercise 09: Probabilistic Algorithms</title><link>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-09/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>How do you compute the area of a circle and a rectangle?&lt;/li>
&lt;li>Draw an circle that matches exactly into a square. How do the areas of the
circle and the square relate to each other?&lt;/li>
&lt;li>How can you represent points in a plane?&lt;/li>
&lt;li>Prepare a sketch with formulas about the ratio of the areas and how to determine
if a given point in the square is as well within the circle.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;h3 id="computation-of-pi">Computation of Pi&lt;/h3>
&lt;p>Use an probabilistic algorithm to approximate the Number Pi:&lt;/p></description></item><item><title>Info2: Exercise 09: Probabilistic Algorithms</title><link>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-09/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> How do you compute the area of a circle and a rectangle?&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> Draw an circle that matches exactly into a square. How do the areas of the
circle and the square relate to each other?&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> How can you represent points in a plane?&lt;/p>
&lt;p>&lt;em>&lt;strong>P4.&lt;/strong>&lt;/em> Prepare a sketch with formulas about the ratio of the areas and how to determine
if a given point in the square is as well within the circle.&lt;/p></description></item><item><title>Info2: Exercise 10: Getting from A to B</title><link>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-10/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>Define an abstract data type for a weighted graph. What methods does your ADT need? What are the signatures for the operators?&lt;/li>
&lt;li>Find algorithms for determining the minimum path and the cheapest path between two nodes in a directed graph. I strongly suggest visiting a library (that is one of these places that keeps ancient books around). There are Algorithm and Data Structure books available in many languages. There is also an example in the Wikipedia, but it is not really easy to understand.&lt;/li>
&lt;li>Your algorithm will probably need an adjacency matrix oder an adjacency list as its data structure. Think about how you would implement such a structure, if you only had linked lists available. What methods will you need for your data structure?&lt;/li>
&lt;li>Briefly review generating random numbers.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>Our goal is to write a program to determine how to get from A to B, either fast or cheap. We first need some test data.&lt;/p></description></item><item><title>Info2: Exercise 10: Getting from A to B</title><link>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-10/</guid><description>&lt;p>&lt;img src="https://bkleinen.github.io/images/s-bahn.jpg" alt="S-Bahn-Ring">
&lt;!-- raw HTML omitted -->S-Bahn Ring generated with &lt;a href="https://github.com/bkleinen/bvg-graph">https://github.com/bkleinen/bvg-graph&lt;/a> based on OpenStreetMap&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>Define an interface data type for a weighted graph. What methods does it need? What are the signatures?&lt;/li>
&lt;li>Read on Depth-First-Search and Dijkstra Algorithm to compute the shortest and cheapest path in a given graph. We&amp;rsquo;ve covered them in class, also.&lt;/li>
&lt;li>Your algorithm will probably need an adjacency matrix oder an adjacency list as its data structure. Think about how you would implement such a structure, if you only had linked lists available. What methods will you need for your data structure?&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>Our goal is to write a program to determine how to get from A to B, either fast or cheap. We first need some test data.&lt;/p></description></item><item><title>Info2: Exercise 10: Getting from A to B</title><link>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-10/</guid><description>&lt;p>&lt;img src="https://bkleinen.github.io/images/s-bahn.jpg" alt="S-Bahn-Ring">&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->S-Bahn Ring generated with &lt;a href="https://github.com/bkleinen/bvg-graph">https://github.com/bkleinen/bvg-graph&lt;/a> based on OpenStreetMap&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> Define an interface data type for a weighted graph. What methods does it need? What are the signatures?&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> Read on Depth-First-Search and Dijkstra Algorithm to compute the shortest and cheapest path in a given graph. We&amp;rsquo;ve covered them in class, also.&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> Your algorithm will probably need an adjacency matrix oder an adjacency list as its data structure. Think about how you would implement such a structure, if you only had linked lists available. What methods will you need for your data structure?&lt;/p></description></item><item><title>Info2: Exercise 10: Getting from A to B</title><link>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-10/</guid><description>&lt;p>&lt;img src="https://bkleinen.github.io/images/s-bahn.jpg" alt="S-Bahn-Ring">
&lt;!-- raw HTML omitted -->S-Bahn Ring generated with &lt;a href="https://github.com/bkleinen/bvg-graph">https://github.com/bkleinen/bvg-graph&lt;/a> based on OpenStreetMap&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>Define an interface data type for a weighted graph. What methods does it need? What are the signatures?&lt;/li>
&lt;li>Read on Depth-First-Search and Dijkstra Algorithm to compute the shortest and cheapest path in a given graph. We&amp;rsquo;ve covered them in class, also.&lt;/li>
&lt;li>Your algorithm will probably need an adjacency matrix oder an adjacency list as its data structure. Think about how you would implement such a structure, if you only had linked lists available. What methods will you need for your data structure?&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>Our goal is to write a program to determine how to get from A to B, either fast or cheap. We first need some test data.&lt;/p></description></item><item><title>Info2: Exercise 10: Getting from A to B</title><link>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-10/</guid><description>&lt;p>&lt;img src="https://bkleinen.github.io/images/s-bahn.jpg" alt="S-Bahn-Ring">
&lt;!-- raw HTML omitted -->S-Bahn Ring generated with &lt;a href="https://github.com/bkleinen/bvg-graph">https://github.com/bkleinen/bvg-graph&lt;/a> based on OpenStreetMap&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> Define an interface data type for a weighted graph. What methods does it need? What are the signatures?&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> Read up on Depth-First-Search to compute a path in a given graph. Sketch the algorithm on paper. Do you have an idea how you could find the &lt;em>shortest&lt;/em> path, instead of just a path?&lt;/p></description></item><item><title>Info2: Exercise 10: Probabilistic Algorithms</title><link>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-10/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>How do you compute the area of a circle and a rectangle?&lt;/li>
&lt;li>Draw an circle that matches exactly into a square. How do the areas of the
circle and the square relate to each other?&lt;/li>
&lt;li>How can you represent points in a plane?&lt;/li>
&lt;li>Prepare a sketch with formulas about the ratio of the areas and how to determine
if a given point in the square is as well within the circle.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;h3 id="computation-of-pi">Computation of Pi&lt;/h3>
&lt;p>Use an probabilistic algorithm to approximate the Number Pi:&lt;/p></description></item><item><title>Info2: Exercise 11: Finite State Automata and Sorting Algorithms</title><link>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-11/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>No Pre-Lab this time.&lt;/p>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;h3 id="part-1-finite-automata">Part 1: Finite Automata&lt;/h3>
&lt;p>This is to get some practice with Finite Automata.&lt;/p>
&lt;h4 id="which-languages-do-these-automata-accept">Which Languages do these Automata accept?&lt;/h4>
&lt;p>For the following two Finite Automata given by their transition tables, draw the transition diagram and describe the language they accept in English (or German) sentences.
Give examples for words in and not in the language.&lt;/p>
&lt;p>You find a NFA Simulator in &lt;a href="https://github.com/htw-imi-info2/Lab11_DFA">https://github.com/htw-imi-info2/Lab11_DFA&lt;/a>.
Create Simulations for them with test cases from the words you found. You can use &lt;a href="https://github.com/htw-imi-info2/Lab11_DFA/blob/master/test/examples/NFA1AtThirdFromLast.java">NFA1AtThirdFromLast.java&lt;/a> as an example.&lt;/p></description></item><item><title>Info2: Exercise 11: Finite State Automata and Sorting Algorithms</title><link>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-11-nfa-not-in-ss2017/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-11-nfa-not-in-ss2017/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>No Pre-Lab this time.&lt;/p>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;h3 id="part-1-finite-automata">Part 1: Finite Automata&lt;/h3>
&lt;p>This is to get some practice with Finite Automata.&lt;/p>
&lt;h4 id="which-languages-do-these-automata-accept">Which Languages do these Automata accept?&lt;/h4>
&lt;p>For the following two Finite Automata given by their transition tables, draw the transition diagram and describe the language they accept in English (or German) sentences.
Give examples for words in and not in the language.&lt;/p>
&lt;p>You find a NFA Simulator in &lt;a href="https://github.com/htw-imi-info2/Lab11_DFA">https://github.com/htw-imi-info2/Lab11_DFA&lt;/a>.
Create Simulations for them with test cases from the words you found. You can use &lt;a href="https://github.com/htw-imi-info2/Lab11_DFA/blob/master/test/examples/NFA1AtThirdFromLast.java">NFA1AtThirdFromLast.java&lt;/a> as an example.&lt;/p></description></item><item><title>Info2: Exercise 11: Finite State Automata and Sorting Algorithms</title><link>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-11/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> What is the difference between an NFA and an DFA?&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> Which sorting algorithms have you learned about so far? Review their algorithms.&lt;/p>
&lt;p>&lt;a href="https://www.geeksforgeeks.org/">Geeks for Geeks&lt;/a> has some helpful explanations, including nice videos. Useful for a quick reminder of the algorithms. Eg. &lt;a href="https://www.geeksforgeeks.org/selection-sort/">Selection Sort&lt;/a>.&lt;/p>
&lt;p>Really good more detailed explanations can be found at the Back to Back SWE YouTube Channel:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://youtu.be/ufIET8dMnus">Insertion Sort&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://youtu.be/alJswNJ4P3U">Merge Sort&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://youtu.be/uXBnyYuwPe8">Quick Sort&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://youtu.be/k72DtCnY4MU">Heap Sort&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;h3 id="part-1-finite-automata">Part 1: Finite Automata&lt;/h3>
&lt;p>This is to get some practice with Finite Automata.&lt;/p></description></item><item><title>Info2: Exercise 11: Finite State Automata and Sorting Algorithms</title><link>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-11/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>No Pre-Lab this time.&lt;/p>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;h3 id="part-1-finite-automata">Part 1: Finite Automata&lt;/h3>
&lt;p>This is to get some practice with Finite Automata.&lt;/p>
&lt;h4 id="which-languages-do-these-automata-accept">Which Languages do these Automata accept?&lt;/h4>
&lt;p>For the following two Finite Automata given by their transition tables, draw the transition diagram and describe the language they accept in English (or German) sentences.
Give examples for words in and not in the language.&lt;/p>
&lt;p>You find a NFA Simulator in &lt;a href="https://github.com/htw-imi-info2/Lab11_DFA">https://github.com/htw-imi-info2/Lab11_DFA&lt;/a>.
Create Simulations for them with test cases from the words you found. You can use &lt;a href="https://github.com/htw-imi-info2/Lab11_DFA/blob/master/test/examples/NFA1AtThirdFromLast.java">NFA1AtThirdFromLast.java&lt;/a> as an example.&lt;/p></description></item><item><title>Info2: Exercise 11: Finite State Automata and Sorting Algorithms</title><link>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-11/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> What is the difference between an NFA and an DFA?&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> Which sorting algorithms have you learned about so far? Review their algorithms.&lt;/p>
&lt;p>&lt;a href="https://www.geeksforgeeks.org/">Geeks for Geeks&lt;/a> has some helpful explanations, including nice videos. Useful for a quick reminder of the algorithms. Eg. &lt;a href="https://www.geeksforgeeks.org/selection-sort/">Selection Sort&lt;/a>.&lt;/p>
&lt;p>Really good more detailed explanations can be found at the Back to Back SWE YouTube Channel:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://youtu.be/ufIET8dMnus">Insertion Sort&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://youtu.be/alJswNJ4P3U">Merge Sort&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://youtu.be/uXBnyYuwPe8">Quick Sort&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://youtu.be/k72DtCnY4MU">Heap Sort&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="assignment-1-finite-automata">Assignment 1: Finite Automata&lt;/h2>
&lt;p>This is to get some practice with Finite Automata.&lt;/p></description></item><item><title>Info2: Exercise 11: Getting from A to B</title><link>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-11/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>Define an abstract data type for a weighted graph. What methods does your ADT need? What are the signatures for the operators?&lt;/li>
&lt;li>Find algorithms for determining the minimum path and the cheapest path between two nodes in a directed graph. I strongly suggest visiting a library (that is one of these places that keeps ancient books around). There are Algorithm and Data Structure books available in many languages. There is also an example in the Wikipedia, but it is not really easy to understand.&lt;/li>
&lt;li>Your algorithm will probably need an adjacency matrix oder an adjacency list as its data structure. Think about how you would implement such a structure, if you only had linked lists available. What methods will you need for your data structure?&lt;/li>
&lt;li>Briefly review generating random numbers.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>Our goal is to write a program to determine how to get from A to B, either fast or cheap. We first need some test data.&lt;/p></description></item><item><title>Info2: Exercise 11: Scrabble Cheater - Basic Edition</title><link>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-11/</guid><description>&lt;p>&lt;img src="./../images/scrabble_4468636695_2434bc60ff_b.jpg" alt="Scrabble" title="scrabble tile rack">
Foto by &lt;a href="https://www.flickr.com/photos/mk1971/4468636695">Mags_cat&lt;/a>&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>Review the rules of &lt;a href="https://en.wikipedia.org/wiki/Scrabble">Scrabble&lt;/a>, if you have never played it before.&lt;/li>
&lt;li>What was a permutation?&lt;/li>
&lt;li>What would a normalization function for different permutations of characters words look like? That is, &amp;ldquo;JAVA&amp;rdquo; and &amp;ldquo;VAJA&amp;rdquo; are permutations, what would a normalized permutation look like?&lt;/li>
&lt;li>How do you determine if two strings are permutations of each other?&lt;/li>
&lt;li>How can you generate all permutations of the characters in a String? What if some of the letters are the same. Hint: Look at the binomial coefficient.&lt;/li>
&lt;li>how many different 2,3,4,5 and 6-letter subsets are there for each 7-letters?&lt;/li>
&lt;li>Can you find lists of valid words for Scrabble in English online? Are there perhaps any sorted by number of letters in the word? Or maybe one file for each word size? Note down the URLs!&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>This week you will implement a simple scrabble cheater that will read in words from a scrabble word list, and find all permutations for a 7 letter tile rack.
Next week you will extend this cheater by also searching for subsets (that is, shorter words) as well as optimizing the underlying data structure for performance.&lt;/p></description></item><item><title>Info2: Exercise 12: Scrabble Cheater - Basic Edition</title><link>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-12/</guid><description>&lt;p>&lt;img src="./../images/scrabble_4468636695_2434bc60ff_b.jpg" alt="Scrabble" title="scrabble tile rack">
Foto by &lt;a href="https://www.flickr.com/photos/mk1971/4468636695">Mags_cat&lt;/a>&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>Review the rules of &lt;a href="https://en.wikipedia.org/wiki/Scrabble">Scrabble&lt;/a>, if you have never played it before.&lt;/li>
&lt;li>What was a permutation?&lt;/li>
&lt;li>What would a normalization function for different permutations of characters words look like? That is, &amp;ldquo;JAVA&amp;rdquo; and &amp;ldquo;VAJA&amp;rdquo; are permutations, what would a normalized permutation look like?&lt;/li>
&lt;li>How do you determine if two strings are permutations of each other?&lt;/li>
&lt;li>How can you generate all permutations of the characters in a String? What if some of the letters are the same. Hint: Look at the binomial coefficient.&lt;/li>
&lt;li>how many different 2,3,4,5 and 6-letter subsets are there for each 7-letters?&lt;/li>
&lt;li>Can you find lists of valid words for Scrabble in English online? Are there perhaps any sorted by number of letters in the word? Or maybe one file for each word size? Note down the URLs!&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>This week you will implement a simple scrabble cheater that will read in words from a scrabble word list, and find all permutations for a 7 letter tile rack.
Next week you will extend this cheater by also searching for subsets (that is, shorter words) as well as optimizing the underlying data structure for performance.&lt;/p></description></item><item><title>Info2: Exercise 12: Scrabble Cheater - Basic Edition</title><link>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-12/</guid><description>&lt;p>&lt;img src="./../images/scrabble_4468636695_2434bc60ff_b.jpg" alt="Scrabble" title="scrabble tile rack">
Foto by &lt;a href="https://www.flickr.com/photos/mk1971/4468636695">Mags_cat&lt;/a>&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>Review the rules of &lt;a href="https://en.wikipedia.org/wiki/Scrabble">Scrabble&lt;/a>, if you have never played it before.&lt;/li>
&lt;li>What was a permutation?&lt;/li>
&lt;li>What would a normalization function for different permutations of characters words look like? That is, &amp;ldquo;JAVA&amp;rdquo; and &amp;ldquo;VAJA&amp;rdquo; are permutations, what would a normalized permutation look like?&lt;/li>
&lt;li>How do you determine if two strings are permutations of each other?&lt;/li>
&lt;li>How can you generate all permutations of the characters in a String? What if some of the letters are the same. Hint: Look at the binomial coefficient.&lt;/li>
&lt;li>how many different 2,3,4,5 and 6-letter subsets are there for each 7-letters?&lt;/li>
&lt;li>Can you find lists of valid words for Scrabble in English online? Are there perhaps any sorted by number of letters in the word? Or maybe one file for each word size? Note down the URLs!&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>This week you will implement a simple scrabble cheater that will read in words from a scrabble word list, and find all permutations for a 7 letter tile rack.
Next week you will extend this cheater by also searching for subsets (that is, shorter words) as well as optimizing the underlying data structure for performance.&lt;/p></description></item><item><title>Info2: Exercise 12: Scrabble Cheater - Basic Edition</title><link>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-12/</guid><description>&lt;p>&lt;img src="./../images/scrabble_4468636695_2434bc60ff_b.jpg" alt="Scrabble" title="scrabble tile rack">
Foto by &lt;a href="https://www.flickr.com/photos/mk1971/4468636695">Mags_cat&lt;/a>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> Review the rules of &lt;a href="https://en.wikipedia.org/wiki/Scrabble">Scrabble&lt;/a>, if you have never played it before.&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> What is a permutation?&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> What would a normalization function for different permutations of words look like? That is, &amp;ldquo;JAVA&amp;rdquo; and &amp;ldquo;VAJA&amp;rdquo; are permutations, what would a normalized permutation look like?&lt;/p>
&lt;p>&lt;em>&lt;strong>P4.&lt;/strong>&lt;/em> How do you determine if two Strings are permutations of each other?&lt;/p></description></item><item><title>Info2: Exercise 12: Scrabble Cheater - Basic Edition</title><link>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-12/</guid><description>&lt;p>&lt;img src="./../images/scrabble_4468636695_2434bc60ff_b.jpg" alt="Scrabble" title="scrabble tile rack">
Foto by &lt;a href="https://www.flickr.com/photos/mk1971/4468636695">Mags_cat&lt;/a>&lt;/p>
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;ol>
&lt;li>Review the rules of &lt;a href="https://en.wikipedia.org/wiki/Scrabble">Scrabble&lt;/a>, if you have never played it before.&lt;/li>
&lt;li>What was a permutation?&lt;/li>
&lt;li>What would a normalization function for different permutations of characters words look like? That is, &amp;ldquo;JAVA&amp;rdquo; and &amp;ldquo;VAJA&amp;rdquo; are permutations, what would a normalized permutation look like?&lt;/li>
&lt;li>How do you determine if two strings are permutations of each other?&lt;/li>
&lt;li>How can you generate all permutations of the characters in a String? What if some of the letters are the same. Hint: Look at the binomial coefficient.&lt;/li>
&lt;li>how many different 2,3,4,5 and 6-letter subsets are there for each 7-letters?&lt;/li>
&lt;li>Can you find lists of valid words for Scrabble in English online? Are there perhaps any sorted by number of letters in the word? Or maybe one file for each word size? Note down the URLs!&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>This week you will implement a simple scrabble cheater that will read in words from a scrabble word list, and find all permutations for a 7 letter tile rack.
Next week you will extend this cheater by also searching for subsets (that is, shorter words) as well as optimizing the underlying data structure for performance.&lt;/p></description></item><item><title>Info2: Exercise 12: Scrabble Cheater - Basic Edition</title><link>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-12/</guid><description>&lt;p>&lt;img src="./../images/scrabble_4468636695_2434bc60ff_b.jpg" alt="Scrabble" title="scrabble tile rack">
Foto by &lt;a href="https://www.flickr.com/photos/mk1971/4468636695">Mags_cat&lt;/a>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;em>&lt;strong>P1.&lt;/strong>&lt;/em> Review the rules of &lt;a href="https://en.wikipedia.org/wiki/Scrabble">Scrabble&lt;/a>, if you have never played it before.&lt;/p>
&lt;p>&lt;em>&lt;strong>P2.&lt;/strong>&lt;/em> What is a permutation?&lt;/p>
&lt;p>&lt;em>&lt;strong>P3.&lt;/strong>&lt;/em> What would a normalization function for different permutations of words look like? That is, &amp;ldquo;JAVA&amp;rdquo; and &amp;ldquo;VAJA&amp;rdquo; are permutations, what would a normalized permutation look like?&lt;/p>
&lt;p>&lt;em>&lt;strong>P4.&lt;/strong>&lt;/em> How do you determine if two Strings are permutations of each other?&lt;/p></description></item><item><title>Info2: Exercise 13: Scrabble Cheater - Deluxe</title><link>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-13/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;img src="../../images/scrabble_331161309_a8e6c6c3fd_o.jpg" alt="Scrabble" title="scrabble 1">
Foto by &lt;a href="https://www.flickr.com/photos/derbeth/331161309/">Piotr&lt;/a>&lt;/p>
&lt;ol>
&lt;li>What would the exact data structure be for a hash table that stores Strings and chains the collisions?&lt;/li>
&lt;li>Review the construction of a hash function. Note that you will need prime numbers. Does your isPrime method work? If not, fix it now.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>This week we will improve the Scrabble Cheater by storing the Words in a Hash Map,
making the lookup of permutations way more efficient.&lt;/p></description></item><item><title>Info2: Exercise 13: Scrabble Cheater - Deluxe</title><link>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-13/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;img src="../../images/scrabble_331161309_a8e6c6c3fd_o.jpg" alt="Scrabble" title="scrabble 1">
Foto by &lt;a href="https://www.flickr.com/photos/derbeth/331161309/">Piotr&lt;/a>&lt;/p>
&lt;ol>
&lt;li>What would the exact data structure be for a hash table that stores Strings and chains the collisions?&lt;/li>
&lt;li>Review the construction of a hash function. Note that you will need prime numbers. Does your isPrime method work? If not, fix it now.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>This week we will improve the Scrabble Cheater by storing the Words in a Hash Map,
making the lookup of permutations way more efficient.&lt;/p></description></item><item><title>Info2: Exercise 13: Scrabble Cheater - Deluxe</title><link>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-13/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;img src="../../images/scrabble_331161309_a8e6c6c3fd_o.jpg" alt="Scrabble" title="scrabble 1">
Foto by &lt;a href="https://www.flickr.com/photos/derbeth/331161309/">Piotr&lt;/a>&lt;/p>
&lt;ol>
&lt;li>What would the exact data structure be for a hash table that stores Strings and chains the collisions?&lt;/li>
&lt;li>Review the construction of a hash function. Note that you will need prime numbers. Does your isPrime method work? If not, fix it now.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>This week we will improve the Scrabble Cheater by storing the Words in a Hash Map,
making the lookup of permutations way more efficient.&lt;/p></description></item><item><title>Info2: Exercise 13: Scrabble Cheater - Deluxe</title><link>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-13/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;img src="../../images/scrabble_331161309_a8e6c6c3fd_o.jpg" alt="Scrabble" title="scrabble 1">
Foto by &lt;a href="https://www.flickr.com/photos/derbeth/331161309/">Piotr&lt;/a>&lt;/p>
&lt;ol>
&lt;li>What would the exact data structure be for a hash table that stores Strings and chains the collisions?&lt;/li>
&lt;li>Review the construction of a hash function. Note that you will need prime numbers. Does your isPrime method work? If not, fix it now.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>This week we will improve the Scrabble Cheater by finding matches for shorter
Words that can be build with your tile rack (method allValidWords()).&lt;/p></description></item><item><title>Info2: Exercise 13: Scrabble Cheater - Deluxe</title><link>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-13/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;img src="../../images/scrabble_331161309_a8e6c6c3fd_o.jpg" alt="Scrabble" title="scrabble 1">
Foto by &lt;a href="https://www.flickr.com/photos/derbeth/331161309/">Piotr&lt;/a>&lt;/p>
&lt;ol>
&lt;li>What would the exact data structure be for a hash table that stores Strings and chains the collisions?&lt;/li>
&lt;li>Review the construction of a hash function. Note that you will need prime numbers. Does your isPrime method work? If not, fix it now.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>This week we will improve the Scrabble Cheater by finding matches for shorter
Words that can be build with your tile rack (method allValidWords()).&lt;/p></description></item><item><title>Info2: Exercise 13: Scrabble Cheater - Deluxe</title><link>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-13/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;img src="../../images/scrabble_331161309_a8e6c6c3fd_o.jpg" alt="Scrabble" title="scrabble 1">
Foto by &lt;a href="https://www.flickr.com/photos/derbeth/331161309/">Piotr&lt;/a>&lt;/p>
&lt;ol>
&lt;li>What would the exact data structure be for a hash table that stores Strings and chains the collisions?&lt;/li>
&lt;li>Review the construction of a hash function. Note that you will need prime numbers. Does your isPrime method work? If not, fix it now.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>This week we will improve the Scrabble Cheater by finding matches for shorter
Words that can be build with your tile rack (method allValidWords()).&lt;/p></description></item><item><title>Info2: Exercise 4: Histogram</title><link>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-04/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please think through the following questions before coming to the lab. Write down your answers and bring them with you for pre-lab check-in.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>In some programming languages, such as Ada, you can define an array of characters with any discrete type as the index:&lt;/p>
&lt;pre>&lt;code> someArray : ARRAY ['A' .. 'Z'] of INTEGER;
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ol>
&lt;p>You can then access the array, for example, using a value of character type: someArray[&amp;lsquo;T&amp;rsquo;]. Java does not have this feature. How would you go about making an array in Java for representing counters for the letters &amp;lsquo;A&amp;rsquo; to &amp;lsquo;Z&amp;rsquo;?&lt;/p></description></item><item><title>Info2: Exercise 4: Histogram</title><link>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-04/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>Please think through the following questions before coming to the lab. Write down your answers and bring them with you for pre-lab check-in.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>In some programming languages, such as Ada, you can
define an array of characters with any discrete type as the index:&lt;/p>
&lt;pre>&lt;code>someArray : ARRAY ['A' .. 'Z'] of INTEGER;
&lt;/code>&lt;/pre>
&lt;p>You can then access the array, for example, using a value of character type: someArray[&amp;lsquo;T&amp;rsquo;]. Java does not have this feature. How would you go about making an array in Java for representing counters for the letters &amp;lsquo;A&amp;rsquo; to &amp;lsquo;Z&amp;rsquo;?&lt;/p></description></item><item><title>Info2: Handout for Exercise 6: Infix/Prefix/Postfix</title><link>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-06-handout/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info2/labs/lab-06-handout/</guid><description>&lt;p>##Definitions&lt;/p>
&lt;p>&lt;strong>Infix:&lt;/strong> The operator is placed between the two operands: 3 + 5&lt;/p>
&lt;p>&lt;strong>Prefix:&lt;/strong> The operator is placed before the two operands: + 3 5&lt;/p>
&lt;p>&lt;strong>Postfix:&lt;/strong> The operator is placed after the two operands: 3 5 +&lt;/p>
&lt;p>##Calculator algorithm&lt;/p>
&lt;ol>
&lt;li>Convert infix to postfix&lt;/li>
&lt;li>Use stack to evaluate postfix&lt;/li>
&lt;li>Output top of stack (should be the only element)&lt;/li>
&lt;/ol>
&lt;p>##Evaluate postfix algorithm##&lt;/p>
&lt;ol>
&lt;li>Given a sequence of tokens s&lt;/li>
&lt;li>While s is not empty:
&lt;ol>
&lt;li>Let t = next token.&lt;/li>
&lt;li>If t is an operand, push it;&lt;/li>
&lt;li>If t is an operator:
&lt;ol>
&lt;li>put the top into rhs, pop it;&lt;/li>
&lt;li>put the top into lhs, pop it;&lt;/li>
&lt;li>calculate lhs t rhs;&lt;/li>
&lt;li>push the result&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>The top of the stack is the result.&lt;/li>
&lt;/ol>
&lt;p>##Convert infix to postfix algorithm&lt;/p></description></item><item><title>Info2: Handout for Exercise 6: Infix/Prefix/Postfix</title><link>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-06-handout/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/info2/labs/lab-06-handout/</guid><description>&lt;p>##Definitions&lt;/p>
&lt;p>&lt;strong>Infix:&lt;/strong> The operator is placed between the two operands: 3 + 5&lt;/p>
&lt;p>&lt;strong>Prefix:&lt;/strong> The operator is placed before the two operands: + 3 5&lt;/p>
&lt;p>&lt;strong>Postfix:&lt;/strong> The operator is placed after the two operands: 3 5 +&lt;/p>
&lt;p>##Calculator algorithm&lt;/p>
&lt;ol>
&lt;li>Convert infix to postfix&lt;/li>
&lt;li>Use stack to evaluate postfix&lt;/li>
&lt;li>Output top of stack (should be the only element)&lt;/li>
&lt;/ol>
&lt;p>##Evaluate postfix algorithm##&lt;/p>
&lt;ol>
&lt;li>Given a sequence of tokens s&lt;/li>
&lt;li>While s is not empty:
&lt;ol>
&lt;li>Let t = next token.&lt;/li>
&lt;li>If t is an operand, push it;&lt;/li>
&lt;li>If t is an operator:
&lt;ol>
&lt;li>put the top into rhs, pop it;&lt;/li>
&lt;li>put the top into lhs, pop it;&lt;/li>
&lt;li>calculate lhs t rhs;&lt;/li>
&lt;li>push the result&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>The top of the stack is the result.&lt;/li>
&lt;/ol>
&lt;p>##Convert infix to postfix algorithm&lt;/p></description></item><item><title>Info2: Handout for Exercise 6: Infix/Prefix/Postfix</title><link>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-06-handout/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/info2/labs/lab-06-handout/</guid><description>&lt;h2 id="definitions">Definitions&lt;/h2>
&lt;p>&lt;strong>Infix:&lt;/strong> The operator is placed between the two operands: 3 + 5&lt;/p>
&lt;p>&lt;strong>Prefix:&lt;/strong> The operator is placed before the two operands: + 3 5&lt;/p>
&lt;p>&lt;strong>Postfix:&lt;/strong> The operator is placed after the two operands: 3 5 +&lt;/p>
&lt;h2 id="calculator-algorithm">Calculator algorithm&lt;/h2>
&lt;ol>
&lt;li>Convert infix to postfix&lt;/li>
&lt;li>Use stack to evaluate postfix&lt;/li>
&lt;li>Output top of stack (should be the only element)&lt;/li>
&lt;/ol>
&lt;h2 id="evaluate-postfix-algorithm">Evaluate postfix algorithm##&lt;/h2>
&lt;ol>
&lt;li>Given a sequence of tokens s&lt;/li>
&lt;li>While s is not empty:
&lt;ol>
&lt;li>Let t = next token.&lt;/li>
&lt;li>If t is an operand, push it;&lt;/li>
&lt;li>If t is an operator:
&lt;ol>
&lt;li>put the top into rhs, pop it;&lt;/li>
&lt;li>put the top into lhs, pop it;&lt;/li>
&lt;li>calculate lhs t rhs;&lt;/li>
&lt;li>push the result&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>The top of the stack is the result.&lt;/li>
&lt;/ol>
&lt;h2 id="convert-infix-to-postfix-algorithm">Convert infix to postfix algorithm&lt;/h2>
&lt;ol>
&lt;li>Given a sequence of tokens s and a result r&lt;/li>
&lt;li>While s is not empty:
&lt;ol>
&lt;li>Let t = next token.&lt;/li>
&lt;li>If t is an operand, r = r + t;&lt;/li>
&lt;li>If t is an open parenthesis, push it.&lt;/li>
&lt;li>If t is a close parenthesis:
&lt;ol>
&lt;li>while top &amp;lt;&amp;gt; open parenthesis
&lt;ol>
&lt;li>r = r + top&lt;/li>
&lt;li>pop&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>pop // removes the open parenthesis&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>If t is an operator
&lt;ol>
&lt;li>while not (top is of lower precedence than t OR t is right associative and top is of equal precedence)
&lt;ol>
&lt;li>r = r + top&lt;/li>
&lt;li>pop&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>push t&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>while stack not empty
&lt;ol>
&lt;li>r = r + top&lt;/li>
&lt;li>pop&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol></description></item><item><title>Info2: Handout for Exercise 6: Infix/Prefix/Postfix</title><link>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-06-handout/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/labs/lab-06-handout/</guid><description>&lt;h2 id="definitions">Definitions&lt;/h2>
&lt;p>&lt;strong>Infix:&lt;/strong> The operator is placed between the two operands: 3 + 5&lt;/p>
&lt;p>&lt;strong>Prefix:&lt;/strong> The operator is placed before the two operands: + 3 5&lt;/p>
&lt;p>&lt;strong>Postfix:&lt;/strong> The operator is placed after the two operands: 3 5 +&lt;/p>
&lt;h2 id="calculator-algorithm">Calculator algorithm&lt;/h2>
&lt;ol>
&lt;li>Convert infix to postfix&lt;/li>
&lt;li>Use stack to evaluate postfix&lt;/li>
&lt;li>Output top of stack (should be the only element)&lt;/li>
&lt;/ol>
&lt;h3 id="convert-infix-to-postfix-algorithm">Convert infix to postfix algorithm&lt;/h3>
&lt;ol>
&lt;li>Given a sequence of tokens s and a result r&lt;/li>
&lt;li>While s is not empty:
&lt;ol>
&lt;li>Let t = next token.&lt;/li>
&lt;li>If t is an operand, r = r + t;&lt;/li>
&lt;li>If t is an open parenthesis, push it.&lt;/li>
&lt;li>If t is a close parenthesis:
&lt;ol>
&lt;li>while top &amp;lt;&amp;gt; open parenthesis
&lt;ol>
&lt;li>r = r + top&lt;/li>
&lt;li>pop&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>pop // removes the open parenthesis&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>If t is an operator
&lt;ol>
&lt;li>while not (top is of lower precedence than t OR t is right associative and top is of equal precedence)
&lt;ol>
&lt;li>r = r + top&lt;/li>
&lt;li>pop&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>push t&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>while stack not empty
&lt;ol>
&lt;li>r = r + top&lt;/li>
&lt;li>pop&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h3 id="evaluate-postfix-algorithm">Evaluate postfix algorithm&lt;/h3>
&lt;ol>
&lt;li>Given a sequence of tokens s&lt;/li>
&lt;li>While s is not empty:
&lt;ol>
&lt;li>Let t = next token.&lt;/li>
&lt;li>If t is an operand, push it;&lt;/li>
&lt;li>If t is an operator:
&lt;ol>
&lt;li>put the top into rhs, pop it;&lt;/li>
&lt;li>put the top into lhs, pop it;&lt;/li>
&lt;li>calculate lhs t rhs;&lt;/li>
&lt;li>push the result&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>The top of the stack is the result.&lt;/li>
&lt;/ol></description></item><item><title>Info2: Handout for Exercise 6: Infix/Prefix/Postfix</title><link>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-06-handout/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/labs/lab-06-handout/</guid><description>&lt;h2 id="definitions">Definitions&lt;/h2>
&lt;p>&lt;strong>Infix:&lt;/strong> The operator is placed between the two operands: 3 + 5&lt;/p>
&lt;p>&lt;strong>Prefix:&lt;/strong> The operator is placed before the two operands: + 3 5&lt;/p>
&lt;p>&lt;strong>Postfix:&lt;/strong> The operator is placed after the two operands: 3 5 +&lt;/p>
&lt;h2 id="calculator-algorithm">Calculator algorithm&lt;/h2>
&lt;ol>
&lt;li>Convert infix to postfix&lt;/li>
&lt;li>Use stack to evaluate postfix&lt;/li>
&lt;li>Output top of stack (should be the only element)&lt;/li>
&lt;/ol>
&lt;h2 id="evaluate-postfix-algorithm">Evaluate postfix algorithm##&lt;/h2>
&lt;ol>
&lt;li>Given a sequence of tokens s&lt;/li>
&lt;li>While s is not empty:
&lt;ol>
&lt;li>Let t = next token.&lt;/li>
&lt;li>If t is an operand, push it;&lt;/li>
&lt;li>If t is an operator:
&lt;ol>
&lt;li>put the top into rhs, pop it;&lt;/li>
&lt;li>put the top into lhs, pop it;&lt;/li>
&lt;li>calculate lhs t rhs;&lt;/li>
&lt;li>push the result&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>The top of the stack is the result.&lt;/li>
&lt;/ol>
&lt;h2 id="convert-infix-to-postfix-algorithm">Convert infix to postfix algorithm&lt;/h2>
&lt;ol>
&lt;li>Given a sequence of tokens s and a result r&lt;/li>
&lt;li>While s is not empty:
&lt;ol>
&lt;li>Let t = next token.&lt;/li>
&lt;li>If t is an operand, r = r + t;&lt;/li>
&lt;li>If t is an open parenthesis, push it.&lt;/li>
&lt;li>If t is a close parenthesis:
&lt;ol>
&lt;li>while top &amp;lt;&amp;gt; open parenthesis
&lt;ol>
&lt;li>r = r + top&lt;/li>
&lt;li>pop&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>pop // removes the open parenthesis&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>If t is an operator
&lt;ol>
&lt;li>while not (top is of lower precedence than t OR t is right associative and top is of equal precedence)
&lt;ol>
&lt;li>r = r + top&lt;/li>
&lt;li>pop&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>push t&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>while stack not empty
&lt;ol>
&lt;li>r = r + top&lt;/li>
&lt;li>pop&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol></description></item><item><title>Info2: Handout for Exercise 6: Infix/Prefix/Postfix</title><link>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-06-handout/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/labs/lab-06-handout/</guid><description>&lt;h2 id="definitions">Definitions&lt;/h2>
&lt;p>&lt;strong>Infix:&lt;/strong> The operator is placed between the two operands: 3 + 5&lt;/p>
&lt;p>&lt;strong>Prefix:&lt;/strong> The operator is placed before the two operands: + 3 5&lt;/p>
&lt;p>&lt;strong>Postfix:&lt;/strong> The operator is placed after the two operands: 3 5 +&lt;/p>
&lt;h2 id="calculator-algorithm">Calculator algorithm&lt;/h2>
&lt;ol>
&lt;li>Convert infix to postfix&lt;/li>
&lt;li>Use stack to evaluate postfix&lt;/li>
&lt;li>Output top of stack (should be the only element)&lt;/li>
&lt;/ol>
&lt;h3 id="convert-infix-to-postfix-algorithm">Convert infix to postfix algorithm&lt;/h3>
&lt;ol>
&lt;li>Given a sequence of tokens s and a result r&lt;/li>
&lt;li>While s is not empty:
&lt;ol>
&lt;li>Let t = next token.&lt;/li>
&lt;li>If t is an operand, r = r + t;&lt;/li>
&lt;li>If t is an open parenthesis, push it.&lt;/li>
&lt;li>If t is a close parenthesis:
&lt;ol>
&lt;li>while top &amp;lt;&amp;gt; open parenthesis
&lt;ol>
&lt;li>r = r + top&lt;/li>
&lt;li>pop&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>pop // removes the open parenthesis&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>If t is an operator
&lt;ol>
&lt;li>while not (top is of lower precedence than t OR t is right associative and top is of equal precedence)
&lt;ol>
&lt;li>r = r + top&lt;/li>
&lt;li>pop&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>push t&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>while stack not empty
&lt;ol>
&lt;li>r = r + top&lt;/li>
&lt;li>pop&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h3 id="evaluate-postfix-algorithm">Evaluate postfix algorithm&lt;/h3>
&lt;ol>
&lt;li>Given a sequence of tokens s&lt;/li>
&lt;li>While s is not empty:
&lt;ol>
&lt;li>Let t = next token.&lt;/li>
&lt;li>If t is an operand, push it;&lt;/li>
&lt;li>If t is an operator:
&lt;ol>
&lt;li>put the top into rhs, pop it;&lt;/li>
&lt;li>put the top into lhs, pop it;&lt;/li>
&lt;li>calculate lhs t rhs;&lt;/li>
&lt;li>push the result&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>The top of the stack is the result.&lt;/li>
&lt;/ol></description></item><item><title>Info3 Schedule (tentative)</title><link>https://bkleinen.github.io/classes/ws2015/info3/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info3/schedule/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Lecturer&lt;/th>
 &lt;th style="text-align: left">Lecture Topic&lt;/th>
 &lt;th style="text-align: left">Lab&lt;/th>
 &lt;th style="text-align: left">Topic&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-10-08&lt;/td>
 &lt;td style="text-align: left">DWW&lt;/td>
 &lt;td style="text-align: left">Intro to Software Engineering&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2015-10-09&lt;/td>
 &lt;td style="text-align: left">DWW&lt;/td>
 &lt;td style="text-align: left">Socio-technical Systems and Ethics&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-01-casestudies">Case Studies of Ethical Questions&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-10-15&lt;/td>
 &lt;td style="text-align: left">DWW&lt;/td>
 &lt;td style="text-align: left">Software Processes&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2015-10-16&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&lt;/td>
 &lt;td style="text-align: left">no class&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">no lab! whole day for all on 2015-10-09&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-10-22&lt;/td>
 &lt;td style="text-align: left">DWW&lt;/td>
 &lt;td style="text-align: left">Requirements Engineering&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2015-10-23&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">A Requirements Example&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-02-usecases-class">Use Cases and Class Diagrams&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-10-29&lt;/td>
 &lt;td style="text-align: left">DWW&lt;/td>
 &lt;td style="text-align: left">Requirements Elicitation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2015-10-30&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">Agile Development&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-02-usecases-class">Use Cases and Class Diagrams&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-11-05&lt;/td>
 &lt;td style="text-align: left">DWW&lt;/td>
 &lt;td style="text-align: left">System Models (Ch. 5 ISSE)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2015-11-06&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">Architectural Design&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-03-sequence-state">Sequence Diagrams and State Machine Diagrams&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-11-12&lt;/td>
 &lt;td style="text-align: left">DWW&lt;/td>
 &lt;td style="text-align: left">Design Patterns (GoF)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2015-11-13&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">Patterns of Enterprise Application Architectures&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-03-sequence-state">Sequence Diagrams and State Machine Diagrams&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-11-19&lt;/td>
 &lt;td style="text-align: left">DWW&lt;/td>
 &lt;td style="text-align: left">Software Testing&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2015-11-20&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">Software Testing im Entwicklungsprozess (CI, CD)&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-04-testing">Testing&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-11-26&lt;/td>
 &lt;td style="text-align: left">DWW&lt;/td>
 &lt;td style="text-align: left">Legacy Code&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2015-11-27&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">Source Code Management, Software Development Tools&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-04-testing">Testing&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-12-03&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">Refactoring&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2015-12-04&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">SOLID&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-05-legacy">Legacy Code - Refactoring to Patterns&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-12-10&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">Ruby Intro&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2015-12-11&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">Rails I&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-05-legacy">Legacy Code - Refactoring to Patterns&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-12-17&lt;/td>
 &lt;td style="text-align: left">DWW&lt;/td>
 &lt;td style="text-align: left">Project Management&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2015-12-18&lt;/td>
 &lt;td style="text-align: left">DWW&lt;/td>
 &lt;td style="text-align: left">Measurement and Metrics&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-06-rails-1">Rails First Steps&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-01-07&lt;/td>
 &lt;td style="text-align: left">DWW&lt;/td>
 &lt;td style="text-align: left">Software Cost Estimation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2016-01-08&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">Rails II (Models, Internationalization and Localization)&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-06-rails-1">Rails First Steps&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-01-14&lt;/td>
 &lt;td style="text-align: left">DWW&lt;/td>
 &lt;td style="text-align: left">Quality Management&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2016-01-15&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">Clean Code - Preparation&lt;/td>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-07-rails-2">Rails Associations and Internationalization&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-01-21&lt;/td>
 &lt;td style="text-align: left">DWW&lt;/td>
 &lt;td style="text-align: left">Clean Code - Presentation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2016-01-22&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">Object Orientation In Depth, Duck Typing&lt;/td>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-07-rails-2">Rails Associations and Internationalization&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-01-28&lt;/td>
 &lt;td style="text-align: left">DWW&lt;/td>
 &lt;td style="text-align: left">Software as a Service&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2016-01-29&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">Dependency Management and Working with APIs&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">No Lab, 11:30 Trial Exam&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-02-04&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/bkleinen/bkleinen.github.io/wiki/Info3">Klausurvorbereitung&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2016-02-05&lt;/td>
 &lt;td style="text-align: left">DWW+BK&lt;/td>
 &lt;td style="text-align: left">EXAM&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-02-11&lt;/td>
 &lt;td style="text-align: left">DWW+BK&lt;/td>
 &lt;td style="text-align: left">Klausureinsicht&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2016-02-12&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Showtime&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Info3 Schedule (tentative)</title><link>https://bkleinen.github.io/classes/ws2017/info3/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/info3/schedule/</guid><description>&lt;!-- raw HTML omitted -->
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">Lecture Topic&lt;/th>
 &lt;th style="text-align: left">Lab&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-10-10&lt;/td>
 &lt;td style="text-align: left">Intro&lt;/td>
 &lt;td style="text-align: left">Ruby Intro&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-01-startup">1 - Installation, Git and Ruby&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-10-11&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Source Code Management&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-10-17&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Intro to Info3&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-01-startup">1 - Installation, Git and Ruby&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-10-18&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">More Ruby, Pair Programming and Code Review (and some more practical git)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-10-24&lt;/td>
 &lt;td style="text-align: left">Process&lt;/td>
 &lt;td style="text-align: left">System Modelling and Architectural Design I&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-02-usecases-class">2 - Use Cases and Class Diagrams&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-10-25&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">System Modelling and Architectural Design II&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-10-31&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;em>&lt;strong>Reformationstag&lt;/strong>&lt;/em>&lt;/td>
 &lt;td style="text-align: left">(no lab)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-11-01&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Requirements Engineering&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-11-07&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">no lecture&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-11-08&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">no lecture&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-11-14&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Software Engineering and Software Development Processes&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-03-sequence-state">3 - Sequence Diagrams and State Machine Diagrams&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-11-15&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Software Design Patterns&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-11-22&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Software Testing&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-03-sequence-state">3 - Sequence Diagrams and State Machine Diagrams&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;!-- raw HTML omitted --> Fri, 2017-11-24&lt;!-- raw HTML omitted -->&lt;/td>
 &lt;td style="text-align: left">Architecture&lt;/td>
 &lt;td style="text-align: left">Agile Development, Agile Manifesto, Scrum&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-11-28&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Application Architectures&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-04-testing">4 - Testing&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-11-29&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Rails I&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-12-05&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Patterns of Enterprise Application Architecture (POEAA)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-04-testing">4 - Testing&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-12-06&lt;/td>
 &lt;td style="text-align: left">Practices&lt;/td>
 &lt;td style="text-align: left">Refactoring, Working with Legacy Code&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-12-13&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">SOLID Principles, Refactoring to Patterns&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-05-legacy">5 - Legacy Code - Refactoring to Patterns&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;!-- raw HTML omitted --> Fri, 2017-12-15&lt;!-- raw HTML omitted -->&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Software Processes&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Tue, 2017-12-19&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Clean Code (Doppelstunde)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-05-legacy">5 - Legacy Code - Refactoring to Patterns&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-12-20&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Rails II, Models and Preparation for the Rails Project&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-01-02&lt;/td>
 &lt;td style="text-align: left">Practical&lt;/td>
 &lt;td style="text-align: left">Rails III, POEAA Revisited, Model View Controller&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-06-rails-1">6 - Rails First Steps&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-01-03&lt;/td>
 &lt;td style="text-align: left">Application&lt;/td>
 &lt;td style="text-align: left">ORM and Associations in Rails&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-01-09&lt;/td>
 &lt;td style="text-align: left">in Rails&lt;/td>
 &lt;td style="text-align: left">Internationalization and Localization&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-06-rails-1">6 - Rails First Steps&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-01-10&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">OO In Depth 1: Composition and Inheritance&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-01-16&lt;/td>
 &lt;td style="text-align: left">OO in Depth&lt;/td>
 &lt;td style="text-align: left">OO In Depth 2: Ruby Dynamic Typing, Duck Typing&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-07-rails-2">7 - Rails Associations and Internationalization&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-01-17&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Dependency Management, Build Management, Continuous Integration &amp;amp; Deployment&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-01-23&lt;/td>
 &lt;td style="text-align: left">Managing Delivery&lt;/td>
 &lt;td style="text-align: left">Software Engineering and Software Development Processes revisited&lt;/td>
 &lt;td style="text-align: left">Trial Exam and Extra Quizz for those who missed one&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-01-24&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Exam Preparation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-01-30&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Exam&lt;/td>
 &lt;td style="text-align: left">Exam&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-01-31&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">No Lecture (Prüfungszeit)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-02-02&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Showtime !&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Info3 Tentative Schedule</title><link>https://bkleinen.github.io/classes/ws2020/info3/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/info3/schedule/</guid><description>&lt;p>On the dates marked with &amp;ldquo;Präsenz&amp;rdquo; the lecture will be held in WH-C 349 as a hybrid lecture. It will be possible to attend via Zoom as well.&lt;/p>
&lt;p>System Modelling and Architectural Design II&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">Lecture Topic&lt;/th>
 &lt;th style="text-align: left">Lab (Thursdays)&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">0&lt;/td>
 &lt;td style="text-align: left">40&lt;/td>
 &lt;td style="text-align: left">Fri 02/10/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Introduction to JavaScript (Linda Fernsel)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Wed 07/10/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Introduction to JavaScript (Linda Fernsel)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-01-startup">1 - Installation, Git and Javascript&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 09/10/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Intro to Info3&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Wed 14/10/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Software Engineering and Software Development Processes, Agile Development&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-01-startup">1 - Installation, Git and Javascript&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 16/10/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">UML &amp;amp; System Modeling: Requirements, Use Cases and User Stories&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Wed 21/10/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">UML &amp;amp; System Modeling&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-02-usecases-class">2 - Use Cases and Class Diagrams&lt;/a> (Barne Kleinen)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 23/10/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">UML &amp;amp; System Modeling&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Wed 28/10/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Requirement Engineering&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-02-usecases-class">2 - Use Cases and Class Diagrams&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 30/10/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Product Owner Game&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Wed 04/11/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Software Processes&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-03-sequence-state">3 - Sequence Diagrams and State Machine Diagrams&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 06/11/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Software Testing&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Wed 11/11/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Software Design Patterns (GOF)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-03-sequence-state">3 - Sequence Diagrams and State Machine Diagrams&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 13/11/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Agile Development, Scrum&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Wed 18/11/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Software Design Patterns (GOF)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-04-testing">4 - Testing&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 20/11/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Software Design Patterns (GOF)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Wed 25/11/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">no lecture, postponed: Clean Code Poster preparation&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-04-testing">4 - Testing&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 27/11/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Legacy Code &amp;amp; Refactoring&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Wed 02/12/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Clean Code Intro, Application Architectures &amp;amp; System Models (Ch. 5 ISSE)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-05-legacy">5 - Legacy Code - Refactoring to Patterns&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 04/12/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Continuous Assessment, Patterns of Enterprise Application Architecture (POEAA)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Wed 09/12/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Code Reading, Web Applications&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-05-legacy">5 - Legacy Code - Refactoring to Patterns&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 11/12/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Web Applications, Internationalization and Localization&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Wed 16/12/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Clean Code Poster Session&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-06-express-1">6 - Web Apps with Node and Express I&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 18/12/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Dependency Management, Build Management, Continuous Integration &amp;amp; Deployment&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">52&lt;/td>
 &lt;td style="text-align: left">Wed 23/12/2020&lt;/td>
 &lt;td style="text-align: left">Vorlesungsfrei&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 25/12/2020&lt;/td>
 &lt;td style="text-align: left">Vorlesungsfrei&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">53&lt;/td>
 &lt;td style="text-align: left">Wed 30/12/2020&lt;/td>
 &lt;td style="text-align: left">Vorlesungsfrei&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 01/01/2021&lt;/td>
 &lt;td style="text-align: left">Vorlesungsfrei&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Wed 06/01/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">OO In Depth 1: Composition and Inheritance&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-06-express-1">6 - Web Apps with Node and Express I&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 08/01/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">OO In Depth 2: Dynamic Typing, Duck Typing&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Wed 13/01/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">SOLID Principles, Refactoring to Patterns&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-07-express-2">7 - Web Apps with Node and Express II&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 15/01/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">SOLID Principles, Refactoring to Patterns&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Wed 20/01/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">OO In Depth continued&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-07-express-2">7 - Web Apps with Node and Express II&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 22/01/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">OO In Depth continued&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Wed 27/01/2021&lt;/td>
 &lt;td style="text-align: left">Anfang PZ1&lt;/td>
 &lt;td style="text-align: left">Review &amp;amp; Exam Preparation&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-07-express-2">7 - Web Apps with Node and Express II&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 29/01/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Review &amp;amp; Exam Preparation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Wed 03/02/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Consultations (individual)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-07-express-2">7 - Web Apps with Node and Express II&lt;/a> (Oral Tests)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 05/02/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Consultations (individual)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">Wed 10/02/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Consultations (individual)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 12/02/2021&lt;/td>
 &lt;td style="text-align: left">Showtime&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://showtime.f4.htw-berlin.de/">Showtime&lt;/a> !&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Java Collection Library e-learning WS 2018/19</title><link>https://bkleinen.github.io/classes/ss2020/info2/misc/collections/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/info2/misc/collections/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Your task is to get yourself more aquaintaned with the java collection library.
It&amp;rsquo;s a powerful, stable and reliable library providing collections for many
use cases.&lt;/p>
&lt;p>We already have looked at the main interfaces, List, Set and Map, in Info1 as
well as the most common implementations, ArrayList, HashSet and HashMap.&lt;/p>
&lt;p>In Info2, you&amp;rsquo;ll learn more about alternative implementations and how to
assess which one to use regarding their properties in terms of time and space
consumption as well as their behaviour within concurrent applications.&lt;/p></description></item><item><title>Java Collection Library e-learning WS 2018/19</title><link>https://bkleinen.github.io/classes/ss2024/info2/misc/collections/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/misc/collections/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Your task is to get yourself more aquaintaned with the java collection library.
It&amp;rsquo;s a powerful, stable and reliable library providing collections for many
use cases.&lt;/p>
&lt;p>We already have looked at the main interfaces, List, Set and Map, in Info1 as
well as the most common implementations, ArrayList, HashSet and HashMap.&lt;/p>
&lt;p>In Info2, you&amp;rsquo;ll learn more about alternative implementations and how to
assess which one to use regarding their properties in terms of time and space
consumption as well as their behaviour within concurrent applications.&lt;/p></description></item><item><title>Java Collection Library e-learning WS 2018/19</title><link>https://bkleinen.github.io/classes/ws2018/info2/misc/collections/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/info2/misc/collections/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Your task is to get yourself more aquaintaned with the java collection library.
It&amp;rsquo;s a powerful, stable and reliable library providing collections for many
use cases.&lt;/p>
&lt;p>We already have looked at the main interfaces, List, Set and Map, in Info1 as
well as the most common implementations, ArrayList, HashSet and HashMap.&lt;/p>
&lt;p>In Info2, you&amp;rsquo;ll learn more about alternative implementations and how to
assess which one to use regarding their properties in terms of time and space
consumption as well as their behaviour within concurrent applications.&lt;/p></description></item><item><title>Java Collection Library e-learning WS 2018/19</title><link>https://bkleinen.github.io/classes/ws2021/info2/misc/collections/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/info2/misc/collections/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Your task is to get yourself more aquaintaned with the java collection library.
It&amp;rsquo;s a powerful, stable and reliable library providing collections for many
use cases.&lt;/p>
&lt;p>We already have looked at the main interfaces, List, Set and Map, in Info1 as
well as the most common implementations, ArrayList, HashSet and HashMap.&lt;/p>
&lt;p>In Info2, you&amp;rsquo;ll learn more about alternative implementations and how to
assess which one to use regarding their properties in terms of time and space
consumption as well as their behaviour within concurrent applications.&lt;/p></description></item><item><title>JUnit in BlueJ</title><link>https://bkleinen.github.io/material/info1/junit_in_bluej/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/info1/junit_in_bluej/</guid><description>&lt;h2 id="monday-04december-2023">Monday, 04.December 2023&lt;/h2>
&lt;p>JUnit is not part of the Java API, it is a third-party software.
You find all information about JUnit, including a &lt;a href="https://junit.org/junit5/docs/current/user-guide/">user guide&lt;/a> and information about and download of the latest version on &lt;a href="https://junit.org">https://junit.org&lt;/a>.&lt;/p>
&lt;p>As of this writing, the current version is 5.10.1, but the version included in BlueJ 5.2.1 is JUnit 5.5.2, as you can check within the installation of BlueJ:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">BlueJ.app/Contents/Java&amp;gt;ls junit*
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">junit-4.12.jar				junit-jupiter-params-5.5.2.jar		junit-platform-suite-api-1.5.2.jar
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">junit-jupiter-5.5.2.jar			junit-platform-commons-1.5.2.jar	junit-vintage-engine-5.5.2.jar
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">junit-jupiter-api-5.5.2.jar		junit-platform-engine-1.5.2.jar
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">junit-jupiter-engine-5.5.2.jar		junit-platform-launcher-1.5.2.jar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>As we only use a &lt;em>very&lt;/em> small portion of JUnit this should not matter - but if you look something up
in the BlueJ documentation, keep this in mind. (you could also try updating JUnit in the above directory, of course. I haven&amp;rsquo;t tried it.)&lt;/p></description></item><item><title>KaraClock Complete</title><link>https://bkleinen.github.io/classes/ws2024/info1/labs/karaclock-complete/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2024/info1/labs/karaclock-complete/</guid><description>&lt;p>This is a complete overview of the KaraClock Exercises that lead to the implementation of the KaraClockDisplay-Example. The exercises are distributed through three Labs, as shown by the headlines here.&lt;/p>
&lt;p>The material section contains an article about why I made this addition to the ClockDisplay example: &lt;a href="https://bkleinen.github.io/material/info1/clock_display_refactoring/">ClockDisplay Example: Reflections and Improvements&lt;/a>.&lt;/p>
&lt;p>Open the Greenfoot-Kara project &lt;a href="https://github.com/htw-imi-info1/kara-clock-lab">&lt;code>https://github.com/htw-imi-info1/kara-clock-lab&lt;/code>&lt;/a>.
It contains several test worlds. Make sure you&amp;rsquo;ve instantiated the correct test world!&lt;/p>
&lt;p>If you haven&amp;rsquo;t already done so, you need to install &lt;a href="https://www.greenfoot.org/download">Greenfoot&lt;/a> to open the scenarios. The main file is &lt;code>project.greenfoot&lt;/code>.&lt;/p></description></item><item><title>KaraClock Complete</title><link>https://bkleinen.github.io/classes/ws2023/info1/labs/karaclock-complete/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2023/info1/labs/karaclock-complete/</guid><description>&lt;p>This is a complete overview of the KaraClock Exercises that lead to the implementation of the KaraClockDisplay-Example. The exercises are distributed through three Labs, as shown by the headlines here.&lt;/p>
&lt;p>The material section contains an article about why I made this addition to the ClockDisplay example: &lt;a href="https://bkleinen.github.io/material/info1/clock_display_refactoring/">ClockDisplay Example: Reflections and Improvements&lt;/a>.&lt;/p>
&lt;p>Open the Greenfoot-Kara project &lt;a href="https://github.com/htw-imi-info1/kara-clock-lab">&lt;code>https://github.com/htw-imi-info1/kara-clock-lab&lt;/code>&lt;/a>.
It contains several test worlds. Make sure you&amp;rsquo;ve instantiated the correct test world!&lt;/p>
&lt;p>If you haven&amp;rsquo;t already done so, you need to install &lt;a href="https://www.greenfoot.org/download">Greenfoot&lt;/a> to open the scenarios. The main file is &lt;code>project.greenfoot&lt;/code>.&lt;/p></description></item><item><title>Lab 00 - Intro</title><link>https://bkleinen.github.io/classes/ss2022/networks/labs/lab00/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/networks/labs/lab00/</guid><description>&lt;h2 id="part-1-playing-with-web-servers">Part 1: Playing with Web Servers&lt;/h2>
&lt;p>As the Web and Web applications are a central part of networked applications,
we will use the time before really getting started to play around with basic
web servers.&lt;/p>
&lt;p>You should be able to do most or all of this with your own computers.
We will build Teams during the first lab, but feel free to start working
on the exercises&lt;/p>
&lt;h3 id="1a-simple-web-server-in-java-nanowebserver">1.a Simple Web Server in Java: NanoWebServer&lt;/h3>
&lt;p>Have a look at these examples of very simple webservers implemented
in Java:
&lt;a href="https://github.com/htw-imi-networks/lab00-nanoHttpServer">https://github.com/htw-imi-networks/lab00-nanoHttpServer&lt;/a>&lt;/p></description></item><item><title>Lab 00 - Intro</title><link>https://bkleinen.github.io/classes/ws2021/networks/labs/lab00_intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/networks/labs/lab00_intro/</guid><description>&lt;p>** update 21.10.2021: nur bis 1c bearbeiten, so weit wie Sie im lab gekommen sind.**&lt;/p>
&lt;h2 id="part-1-playing-with-web-servers">Part 1: Playing with Web Servers&lt;/h2>
&lt;p>As the Web and Web applications are a central part of networked applications,
we will use the time before really getting started to play around with basic
web servers.&lt;/p>
&lt;p>You should be able to do most or all of this with your own computers.
We will build Teams during the first lab, but feel free to start working
on the exercises&lt;/p></description></item><item><title>Lab 01 - Nginx &amp; HTTP</title><link>https://bkleinen.github.io/classes/ws2021/networks/labs/lab01_ch01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/networks/labs/lab01_ch01/</guid><description>&lt;h2 id="part-1-set-up-a-real-web-server-on-a-virtual-machine">Part 1: Set up a Real Web Server on a Virtual Machine&lt;/h2>
&lt;p>We will do this part together in lab, where I will provide each group with
a virtual server hosted at the HTW - you will install and configure nginx
on port 80 on these machines.&lt;/p>
&lt;h3 id="linux--shell-resources">Linux / Shell Resources&lt;/h3>
&lt;ul>
&lt;li>Here&amp;rsquo;s the link to the very brief intro I wrote:
&lt;a href="https://bkleinen.github.io/material/ops/debian-server/">Setting up a Debian Webserver&lt;/a>&lt;/li>
&lt;li>This is my recommendation for an introductionary book:
&lt;a href="https://linuxcommand.org/lc3_learning_the_shell.php#contents">LinuxCommand.org: Learning the shell.&lt;/a>&lt;/li>
&lt;li>If you prefer videos, this
&lt;a href="https://www.youtube.com/watch?v=1hvVcEhcbLM">Linux Essentials for Ethical Hackers - Full InfoSec Course - YouTube&lt;/a>
and this &lt;a href="https://www.youtube.com/watch?v=lZAoFs75_cs">Linux for Ethical Hackers (Kali Linux Tutorial) - YouTube&lt;/a>
seem reasonable.&lt;/li>
&lt;li>Note that you are on Debian 11, commands may differ - check the &lt;a href="https://www.debian.org/doc/manuals/debian-reference/">Debian Reference&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h2 id="part-2-set-up-homepages">Part 2: Set up Homepages&lt;/h2>
&lt;p>For each one in your group, set up a homepage that is accessible via
&lt;code>http://&amp;lt;servername&amp;gt;/~&amp;lt;username&amp;gt;&lt;/code> for each of your team members. The
server roots should be under &lt;code>~/.public_html&lt;/code> or ``~/public_html`&lt;/p></description></item><item><title>Lab 02 - Application Layer</title><link>https://bkleinen.github.io/classes/ws2021/networks/labs/lab02_ch02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/networks/labs/lab02_ch02/</guid><description>&lt;p>This lab summarizes all assignments related to chapter 2 - we will be working on
Part 1 + 2 during the lectures, work on your own on Part 3.
The Labs - every Wednesday at 17:30 - are open to both Groups, for all questions.&lt;/p>
&lt;p>You need to include all parts in your lab report for this assignment.&lt;/p>
&lt;h2 id="part-1-email-and-http">Part 1: email and http&lt;/h2>
&lt;h3 id="receiving-http-p12">Receiving HTTP (P12)&lt;/h3>
&lt;p>Write or find a simple TCP program for a server that accepts lines of input
from a client and prints the lines onto the server&amp;rsquo;s standard output.&lt;/p></description></item><item><title>Lab 03 - TCP and UDP</title><link>https://bkleinen.github.io/classes/ws2021/networks/labs/lab03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/networks/labs/lab03/</guid><description>&lt;p>This lab summarizes lecture and lab assignments around chapter 03 (as well as
some more aspects of chapter 02)&lt;/p>
&lt;p>The Labs - every Wednesday at 17:30 - are open to both Groups, for all questions.&lt;/p>
&lt;p>You need to include all parts in your lab report for this assignment.&lt;/p>
&lt;h2 id="part-1-udp-pinger">Part 1: UDP Pinger&lt;/h2>
&lt;p>The assignment is to create the UDP Pinger client part as described on page 205f.
in the Textbook. The assignment is also availabe in Moodle,
&amp;ldquo;Assignment 2: UDP Pinger (Part of our Lab 3)&amp;rdquo;
The sceleton code and the server can be found here:
&lt;a href="https://github.com/htw-imi-networks/python-programming-assignments">htw-imi-networks/python-programming-assignments&lt;/a>&lt;/p></description></item><item><title>Lab 04 - Legacy Code - Refactoring to Patterns</title><link>https://bkleinen.github.io/classes/ss2014/info3/labs/lab-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info3/labs/lab-04/</guid><description>&lt;p>&lt;img src="../../images/The_Gilded_Rose.jpg" alt="The Gilded Rose">
&lt;!-- raw HTML omitted -->The Gilded Rose, Trade District, &lt;a href="https://wowwiki-archive.fandom.com/wiki/Gilded_Rose">World of Warcraft.&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="assignment-gilded-rose-kata">Assignment: Gilded Rose Kata&lt;/h2>
&lt;p>Source Code: There are three versions. Choose one. Have brief look at the
readme and the GuildedRose class.&lt;/p>
&lt;ul>
&lt;li>Ruby Version: &lt;a href="https://github.com/htw-imi-info3-archive/gilded-rose-kata">https://github.com/htw-imi-info3-archive/gilded-rose-kata&lt;/a>&lt;/li>
&lt;li>Java/Eclipse Version with Test Stub: &lt;a href="https://github.com/htw-imi-info3-archive/lab-05-JavaMavenGildedRoseJavaEclipse">https://github.com/htw-imi-info3-archive/lab-05-JavaMavenGildedRoseJavaEclipse&lt;/a>&lt;/li>
&lt;li>Original Version using Maven: &lt;a href="https://github.com/htw-imi-info3-archive/lab-05-JavaMavenGildedRose">https://github.com/htw-imi-info3-archive/lab-05-JavaMavenGildedRose&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="write-characterization-tests">Write Characterization Tests&lt;/h3>
&lt;p>To be able to add the new functionality as requested you should write
Characterization tests first.
You will not yet refactor or add the required new functionality!&lt;/p></description></item><item><title>Lab 04 - Network Layer - Data Plane</title><link>https://bkleinen.github.io/classes/ws2021/networks/labs/lab04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/networks/labs/lab04/</guid><description>&lt;p>This lab summarizes lecture and lab assignments around chapter 04 of the textbook.&lt;/p>
&lt;p>The Labs - every Wednesday at 17:30 - are open to both Groups, for all questions.&lt;/p>
&lt;p>You need to include all parts in your lab report for this assignment.&lt;/p>
&lt;h2 id="chapter-04">Chapter 04&lt;/h2>
&lt;p>This will be a short lab &amp;amp; report briefly before christmas.&lt;/p>
&lt;h2 id="part-1-ip-adresses">Part 1: IP Adresses&lt;/h2>
&lt;h3 id="a-determine-address-blocks-and-locations">A. determine Address Blocks and Locations&lt;/h3>
&lt;p>(similar to P16 in the book)
Use the whois service at the American Registry for Internet Numbers -
&lt;a href="https://search.arin.net/rdap/">ARIN Whois/RDAP - American Registry for Internet Numbers&lt;/a> - to determine the IP address blocks for the three universities in Berlin as
well as the HTW and BHT. Hint: you may need to find out the/one ip addresses first.
Caan the whois services be used to determine with certainty the geographical location of a specific IP address?
Use &lt;a href="https://www.maxmind.com">www.maxmind.com&lt;/a> to determine the locations of the Web servers at each of these universities.&lt;/p></description></item><item><title>Lab 13: Scrabble Cheater - Deluxe</title><link>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-14/</guid><description>&lt;h2 id="pre-lab">Pre-Lab&lt;/h2>
&lt;p>&lt;img src="../../images/scrabble_331161309_a8e6c6c3fd_o.jpg" alt="Scrabble" title="scrabble 1">
Foto by &lt;a href="https://www.flickr.com/photos/derbeth/331161309/">Piotr&lt;/a>&lt;/p>
&lt;ol>
&lt;li>What would the exact data structure be for a hash table that stores Strings and chains the collisions?&lt;/li>
&lt;li>Review the construction of a hash function. Note that you will need prime numbers. Does your isPrime method work? If not, fix it now.&lt;/li>
&lt;/ol>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;p>This week we will improve the Scrabble Cheater by finding matches for shorter
Words that can be build with your tile rack (method &lt;code>allValidWords()&lt;/code>).&lt;/p></description></item><item><title>Lab Startup</title><link>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-00/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/labs/exercise-00/</guid><description>&lt;p>Welcome to the laboratory - that&amp;rsquo;s what we call these rooms filled with computer equipment. Each computer in WH C 576 and WH C 579 is a so-called dual-boot computer that can boot to Windows or Ubuntu Linux, or Mac OS in WH C 537. As computer science students we expect you to be able to deal with Windows, Unix, and Mac OS operating systems.&lt;/p>
&lt;p>We have lots of rules for the labs, as they are used by many different people during the week. Usually we&amp;rsquo;re in one of three available labs, you find an overview of them including a link to the rules (&amp;ldquo;Laborordnung&amp;rdquo;) &lt;a href="https://imi-bachelor.htw-berlin.de/studium/labore/">here&lt;/a>.&lt;/p></description></item><item><title>Lab Startup</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-00/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-00/</guid><description>&lt;p>Welcome to the laboratory - that&amp;rsquo;s what we call these rooms filled with computer equipment. We have lots of rules for the labs, as they are used by many different people during the week. You find a link to the rules (&amp;ldquo;Laborordnung&amp;rdquo;) &lt;a href="https://imi-bachelor.htw-berlin.de/studium/labore/">here&lt;/a>.&lt;/p>
&lt;p>Two really important rules are:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>No food.&lt;/strong> We don&amp;rsquo;t like crumbs in the keyboards. Drinks are okay if they are in a container with a screw-on lid and the lid is screwed on. No coffee cups! They get knocked over and we have to get new machines.&lt;/li>
&lt;li>&lt;strong>Don&amp;rsquo;t change the configuration.&lt;/strong> We don&amp;rsquo;t care if you have spent half your life &amp;ldquo;optimizing&amp;rdquo; computers. We have them set up this way because that is the way we do it. It&amp;rsquo;s ok to use your own laptop in the lab, we&amp;rsquo;ve provided extra VGA cables and Power Plugs to connect them.&lt;/li>
&lt;/ul>
&lt;p>If something goes wrong, don&amp;rsquo;t panic. Speak with the lab leader or the lab engineer.&lt;/p></description></item><item><title>Lab Startup: Set up your development environment</title><link>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-00/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info3/labs/lab-00/</guid><description>&lt;p>&amp;mdash; To be done as e-Learning on Friday 11-Oct-2013 until Thursday 17-Oct-2013 latest! &amp;mdash;&lt;/p>
&lt;h2 id="which-computer-to-use">Which Computer to use?&lt;/h2>
&lt;p>As most of your colleagues in the former semesters completely ignored the new &lt;a href="https://imi-bachelor.htw-berlin.de/studium/labore/web-technology/">iMacs in our Web Technology lab&lt;/a> and rather unfolded their old, dirty little subnotebooks in front of the 27&amp;rsquo;&amp;rsquo; screens (which even cannot be used as an external monitor), I expect that you will also mainly use your personal computers for working on the exercises. If doing so, you need to make sure to have a set of software available.&lt;/p></description></item><item><title>Learn Python with Tests</title><link>https://bkleinen.github.io/material/languages/python/learn-with-tests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/languages/python/learn-with-tests/</guid><description>&lt;p>I often recommend to write a suite of (automatic) tests to explore a programming language
and compile your own &amp;ldquo;cheat sheet&amp;rdquo; for the language.&lt;/p>
&lt;p>By keeping the test suite &amp;ldquo;green&amp;rdquo;, you can be sure that everything you see in the
source code is actually working.&lt;/p>
&lt;p>I drew this idea from two sources: &lt;a href="https://www.rubykoans.com/">Jim Weirich&amp;rsquo;s Ruby Koans&lt;/a> and the
recommendation of API Testing by Michael Feathers.&lt;/p>
&lt;p>&lt;a href="https://www.rubykoans.com/">Jim Weirich&amp;rsquo;s Ruby Koans&lt;/a>, are a big
suite of prepared test cases where you have to fill out the test expectations to learn ruby
with a strong emphasis on edge cases - where ruby works in a special way that may not be
totally clear or deductible from other programming languages. This idea has been transferred to
many other programming languages, e.g. &lt;a href="https://github.com/gregmalcolm/python_koans">Greg Malcoms Python Koans&lt;/a>.&lt;/p></description></item><item><title>M1 Assignments</title><link>https://bkleinen.github.io/classes/ss2018/media-programming-rails/assignments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/media-programming-rails/assignments/</guid><description>&lt;h1 id="web-frameworks">Web frameworks&lt;/h1>
&lt;p>While developing the test application with your chosen framework, consider the following aspects of your chosen framework:&lt;/p>
&lt;ol>
&lt;li>Routing and Architectural Patterns&lt;/li>
&lt;li>How is HTML generated&lt;/li>
&lt;li>Authentication&lt;/li>
&lt;li>Persistency and Connectivity to Databases&lt;/li>
&lt;li>Security&lt;/li>
&lt;/ol>
&lt;h1 id="github-repository">Github repository&lt;/h1>
&lt;p>&lt;a href="https://github.com/htw-imi-m1/rails-todo-list-ss2018">https://github.com/htw-imi-m1/rails-todo-list-ss2018&lt;/a>&lt;/p>
&lt;h1 id="thema-todo-liste">Thema: Todo-Liste&lt;/h1>
&lt;h2 id="backlog">Backlog&lt;/h2>
&lt;ol>
&lt;li>As a user, I can create an Entry in the Todo List&lt;/li>
&lt;li>As a user, I can delete an Entry&lt;/li>
&lt;li>As a user, I can edit an Entry&lt;/li>
&lt;li>As a user, I can mark an Entry as done&lt;/li>
&lt;li>As a user, I can see a list of all Todo Entries.&lt;/li>
&lt;li>As a user, I can filter all todo entries by 1. Category/Topic&lt;/li>
&lt;li>As a user, I can mark an entry as important.&lt;/li>
&lt;li>As a user, I can add a Category/Topic to an Todo 1. Entry&lt;/li>
&lt;li>As a user, I can create a Category/Topic for Todo 1. Entries.&lt;/li>
&lt;li>As a user, I can see Todos sorted by due date.&lt;/li>
&lt;li>As a user, I can add a due date to a todo entry.&lt;/li>
&lt;/ol></description></item><item><title>M1 Assignments</title><link>https://bkleinen.github.io/classes/ss2020/m1-web/assignments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/m1-web/assignments/</guid><description>&lt;p>You will do quite a lot of web development in the lecture part of this class.
Thus, this lab is not about web technology or development, but rather introduces
you to three other topics related to web development: Usability, publishing on the web
and devops and agile.
As we start off with the web part this term I&amp;rsquo;ve decided to try a new approach:
Rather than working on toy-assignments within a week, I ask you to learn about the
theory now, and apply them to any project later during the term.&lt;/p></description></item><item><title>M1 Assignments</title><link>https://bkleinen.github.io/classes/ws2017/media-programming-rails/assignments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/media-programming-rails/assignments/</guid><description>&lt;h1 id="week-1">Week 1&lt;/h1>
&lt;h2 id="project-start-the-rails-world">Project Start, The Rails World&lt;/h2>
&lt;h3 id="working-on-your-project">Working on your project&lt;/h3>
&lt;ol>
&lt;li>Write down your project vision.&lt;/li>
&lt;li>Write down your product backlog.&lt;/li>
&lt;li>Roughly prioritize it for business value. Don&amp;rsquo;t hesitate to write down as many stories as you want, you don&amp;rsquo;t have to implement them all.&lt;/li>
&lt;li>Pick a user story that you can implement with simple CRUD operations.&lt;/li>
&lt;li>Draw a scribble for the screens involved.&lt;/li>
&lt;li>Draw a first sketch of the data model that is suffient for this story.&lt;/li>
&lt;li>Install Ruby and Ruby on Rails on your computer. See &lt;a href="https://guides.rubyonrails.org/getting_started.html#installing-rails">the rails guides&lt;/a> and the &lt;a href="https://www.ruby-lang.org/en/documentation/installation/">Ruby Homepage&lt;/a> for instructions.&lt;/li>
&lt;/ol>
&lt;h3 id="reading-and-preparation">Reading and preparation&lt;/h3>
&lt;p>Starting next week, You will work on your project within the lab.
I will publish the next assignment by monday, enabling you to
start working on it and have your questions ready in the lab.
For preparation, please read through&lt;/p></description></item><item><title>M1 Assignments</title><link>https://bkleinen.github.io/classes/ws2019/m1-web/assignments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/m1-web/assignments/</guid><description>&lt;h2 id="week-1">Week 1&lt;/h2>
&lt;p>Web Technology and Architectures - Framework Bento Game&lt;/p>
&lt;h2 id="week-2">Week 2&lt;/h2>
&lt;p>Authentication and Security&lt;/p>
&lt;h2 id="week-3">Week 3&lt;/h2>
&lt;p>Continuous Deployment&lt;/p>
&lt;h2 id="week-4-5">Week 4-5&lt;/h2>
&lt;p>Usability and User Experience&lt;/p></description></item><item><title>M1 Media Programming: Web Technology</title><link>https://bkleinen.github.io/classes/ss2018/media-programming-rails/web/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/media-programming-rails/web/</guid><description>&lt;h2 id="welcome">Welcome!&lt;/h2>
&lt;p>This pages introduce you to the web application part of the &amp;ldquo;Epochenunterricht&amp;rdquo; in M1 Mediaprogramming.
The Epochenunterricht consists of 3 x 5 laboratory sessions for the three study focuses Web Technology,
Visual Computing and Game Technology respectively. Have a look at the &lt;a href="../overall-schedule">tentative overall schedule&lt;/a> to
see how this breaks down.&lt;/p>
&lt;h2 id="what-we-will-do">What we will do&lt;/h2>
&lt;p>Within the five weeks of Web Technology, you will work on your own Web Application Project in a more or less
agile manner. Less agile, because you will work on the user stories not in the order of business value, but
in a technology driven order.&lt;/p></description></item><item><title>M1 Overall Schedule</title><link>https://bkleinen.github.io/classes/ss2018/media-programming-rails/overall-schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/media-programming-rails/overall-schedule/</guid><description>&lt;!-- raw HTML omitted -->
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">JF&lt;/th>
 &lt;th style="text-align: left">Topic Area&lt;/th>
 &lt;th style="text-align: left">Lecturer&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-04-11&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://home.htw-berlin.de/~jungk/mp_ss18/">Visual Computing&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Klaus Jung&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-04-18&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://home.htw-berlin.de/~jungk/mp_ss18/">Visual Computing&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-04-25&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://home.htw-berlin.de/~jungk/mp_ss18/">Visual Computing&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Kai Barthel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-05-02&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://home.htw-berlin.de/~jungk/mp_ss18/">Visual Computing&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-05-09&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://home.htw-berlin.de/~jungk/mp_ss18/">Visual Computing&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-05-16&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Tobias Lenz&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-05-23&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Tobias Lenz&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-05-30&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Tobias Lenz&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-06-06&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Tobias Lenz&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-06-13&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">Tobias Lenz&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-06-20&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-06-27&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-07-04&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-07-11&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-07-18&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-07-25&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">TBD&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>M1 Overall Schedule</title><link>https://bkleinen.github.io/classes/ws2017/media-programming-rails/overall-schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/media-programming-rails/overall-schedule/</guid><description>&lt;!-- raw HTML omitted -->
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic Area&lt;/th>
 &lt;th style="text-align: left">Lecturer&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-10-11&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung &amp;amp; Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-10-18&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung &amp;amp; Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-10-25&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung &amp;amp; Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-11-01&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung &amp;amp; Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-11-08&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung &amp;amp; Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-11-15&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-11-22&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-11-29&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-12-06&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-12-13&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-12-20&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-01-03&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-01-10&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-01-17&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-01-24&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-01-31&lt;/td>
 &lt;td style="text-align: left">TBD&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>M1 Web Technology Schedule</title><link>https://bkleinen.github.io/classes/ss2018/media-programming-rails/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/media-programming-rails/schedule/</guid><description>&lt;!-- raw HTML omitted -->
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic&lt;/th>
 &lt;th style="text-align: left">Assignment&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-06-20&lt;/td>
 &lt;td style="text-align: left">Project Start, Topics&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-07-04&lt;/td>
 &lt;td style="text-align: left">Which application to build? Features of Web Frameworks&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/#web-frameworks">Web Frameworks&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-07-11&lt;/td>
 &lt;td style="text-align: left">Security&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-07-18&lt;/td>
 &lt;td style="text-align: left">The Web Specialisation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Wed, 2018-07-25&lt;/td>
 &lt;td style="text-align: left">Presentations&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>M1 Web Technology Schedule</title><link>https://bkleinen.github.io/classes/ss2020/m1-web/schedule-web/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/m1-web/schedule-web/</guid><description>&lt;p>tentative.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">Topic&lt;/th>
 &lt;th style="text-align: left">Assignment&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Wed 08/04/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Web Dev &amp;amp; Usability: Intro&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Wed 15/04/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Discount Usability&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Wed 22/04/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Static Web Site Publishing&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Wed 29/04/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Continuous Deployment and Agile Development&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">Wed 06/05/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Individual Consultations&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>M1 Web Technology Schedule</title><link>https://bkleinen.github.io/classes/ws2017/media-programming-rails/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/media-programming-rails/schedule/</guid><description>&lt;!-- raw HTML omitted -->
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic&lt;/th>
 &lt;th style="text-align: left">Assignment&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-11-15&lt;/td>
 &lt;td style="text-align: left">Project Start, The Rails World&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/#week-1">Week1&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-11-22&lt;/td>
 &lt;td style="text-align: left">Rails Dash, Active Record and Migrations&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/#week-2">Week2&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-11-29&lt;/td>
 &lt;td style="text-align: left">Acceptance Testing and Ruby&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/#week-3">Week3&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-12-06&lt;/td>
 &lt;td style="text-align: left">Continuous Integration and Deployment&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/#week-4">Week4&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-12-13&lt;/td>
 &lt;td style="text-align: left">3rd Party APIs &lt;em>or&lt;/em> Javascript&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/#week-5">Week5&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>M1 Web Technology Schedule</title><link>https://bkleinen.github.io/classes/ws2019/m1-web/schedule-web/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/m1-web/schedule-web/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">Topic&lt;/th>
 &lt;th style="text-align: left">Assignment&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Wed, 2020-01-08&lt;/td>
 &lt;td style="text-align: left">verschoben&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Wed, 2020-01-15&lt;/td>
 &lt;td style="text-align: left">08:30-11:30 WH-C 579&lt;/td>
 &lt;td style="text-align: left">2 x Usability and User Experience&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Wed, 2020-01-22&lt;/td>
 &lt;td style="text-align: left">08:30-09:45 WH-C 579&lt;/td>
 &lt;td style="text-align: left">Web Technology and Architectures - Framework Bento Game&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Wed, 2020-01-29&lt;/td>
 &lt;td style="text-align: left">08:30-11:30 WH-C 579&lt;/td>
 &lt;td style="text-align: left">Authentication and Security, Continuous Deployment&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>M1 Web Technology Topics</title><link>https://bkleinen.github.io/classes/ss2020/m1-web/topics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/m1-web/topics/</guid><description>&lt;h1 id="discount-usability">Discount Usability&lt;/h1>
&lt;p>The Nielsen Norman Group maintains a great web site with a wealth of information and material about Usability, User Centered Design and User Experience. Starting with &lt;a href="https://www.nngroup.com/videos/discount-usability-30-years/">Discount Usability 30 Years&lt;/a> read about either - or all - the three mentioned methods: simplified user testing with 5 users, early test of paper prototypes, and heuristic evaluation. Your goal is to learn enough about either one of this three methods to apply it within a project.&lt;/p></description></item><item><title>Media Programming Schedule</title><link>https://bkleinen.github.io/classes/ss2017/media-programming-rails/overall-schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/media-programming-rails/overall-schedule/</guid><description>&lt;p>Tentative. Aka subject to possible change.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic Area&lt;/th>
 &lt;th style="text-align: left">Lecturer&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-04-12&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-04-19&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-04-26&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Kai Barthel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-05-03&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-05-10&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-05-17&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-05-24&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-05-31&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-06-07&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-06-14&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-06-21&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-06-28&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-07-05&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-07-12&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-07-19&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">30&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-07-26&lt;/td>
 &lt;td style="text-align: left">TBD&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Media Programming Schedule</title><link>https://bkleinen.github.io/classes/ws2016/media-programming-rails/overall-schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/media-programming-rails/overall-schedule/</guid><description>&lt;p>Tentative. Aka subject to possible change.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic Area&lt;/th>
 &lt;th style="text-align: left">Lecturer&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-10-12&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-10-19&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-10-26&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-11-02&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-11-09&lt;/td>
 &lt;td style="text-align: left">Web Technology&lt;/td>
 &lt;td style="text-align: left">Barne Kleinen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-11-16&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung &amp;amp; Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-11-23&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung &amp;amp; Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-11-30&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung &amp;amp; Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-12-07&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung &amp;amp; Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-12-14&lt;/td>
 &lt;td style="text-align: left">Visual Computing&lt;/td>
 &lt;td style="text-align: left">Klaus Jung &amp;amp; Nico Hezel&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-12-21&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">53&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-01-04&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">54&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-01-11&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">55&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-01-18&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">56&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-01-25&lt;/td>
 &lt;td style="text-align: left">Game Technology and Interactive Systems&lt;/td>
 &lt;td style="text-align: left">David Strippgen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">57&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-02-01&lt;/td>
 &lt;td style="text-align: left">TBD&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">58&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-02-08&lt;/td>
 &lt;td style="text-align: left">TBD&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>News and Announcements</title><link>https://bkleinen.github.io/news/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/news/</guid><description>&lt;h2 id="archive-rather-old-posts">Archive (rather old posts)&lt;/h2></description></item><item><title>Praxisprojekt “IMI-Map”</title><link>https://bkleinen.github.io/classes/ss2013/praxisprojekt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2013/praxisprojekt/</guid><description>&lt;p>Erste Ausgabe der IMI-Map.
-&amp;gt; &lt;a href="https://imi-bachelor.htw-berlin.de/studium/projekte/showtime-im-sommersemester-2013/#c11131">SG-Webseite&lt;/a>&lt;/p></description></item><item><title>Praxisprojekt SS2014-WS2014</title><link>https://bkleinen.github.io/classes/ss2014/project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/project/</guid><description>&lt;h2 id="preisvergleich-fuumlr-digitale-medien">Preisvergleich für digitale Medien&lt;/h2>
&lt;p>&amp;mdash; Themenvorschlag einer Gruppe von Studenten &amp;mdash;&lt;/p>
&lt;p>Suchmaschinen die den aktuell günstigsten Preis für ein bestimmtes Produkt ermitteln gibt es bereits sehr viele. Ein derartiger Service für rein digitale Medien existiert in diesem Umfang jedoch noch nicht. Ziel dieses Projektes ist es ein modernes und benutzerfreundliches Such-System zu entwickeln, welches das Angebot von unterschiedlichen Anbietern digitaler Medien übersichtlich auf einer einzigen Plattform vereint. Neben einer Webseite sollen später auch native Anwendungen für gängige mobile Betriebssysteme bereitgestellt werden. Dabei kann das Handy als ein Barcode-Scanner dienen, um Inhalte physischer Datenträger sofort als digitales Medium wiederzufinden. Desweiteren können Werke durch entsprechende Meta-Informationen und zusätzliche Kriterien gesucht werden. Weitere Features, wie beispielsweise die Erkennung von Musik durch die Eingabe von bekannten Anhaltspunkten, sind mögliche Erweiterungen.&lt;/p></description></item><item><title>Praxisprojekt SS2015&amp;#58; Treasure Map</title><link>https://bkleinen.github.io/classes/ss2015/project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2015/project/</guid><description>&lt;p>&lt;img src="./austin-map-5539886849_8ea012c5e7_z.jpg" alt="Austin Map with Locations">
&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Foto by &lt;a href="https://www.flickr.com/photos/rachelc/5539886849">RachelC&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->Projekt Goal:&lt;!-- raw HTML omitted --> Develop a Web &amp;amp; Mobile App to plan little explorations either
by foot, bike or car including pre-selected locations or locations suggested by peers.&lt;/p>
&lt;p>Offered as a (Praxisprojekt for IMI Bachelors)[https://imi-bachelor.htw-berlin.de/studium/projekte/projekte-im-sommersemester-2015//]. See the scenarios and
user stories below for a rough idea what the apps should support.&lt;/p></description></item><item><title>Praxisprojekt WS 2013</title><link>https://bkleinen.github.io/classes/ws2013/project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/project/</guid><description>&lt;h2 id="workshop-management-application-for-rails-girls">Workshop Management Application for Rails Girls&lt;/h2>
&lt;p>&lt;a href="https://railsgirls.com/">Rails Girls&lt;/a> is a series of successful events worldwide that aim at getting more women involved in computing and increase the diversity in the IT field.&lt;/p>
&lt;p>Strangely enough, they haven&amp;rsquo;t yet programmed a rails web application themselves for managing and organizing their workshops!&lt;/p>
&lt;p>This makes a wonderful opportunity for a group of HTW Students to act as a web development agency offering a solution to this great international community as a customer.&lt;/p></description></item><item><title>Preparation for Week 3</title><link>https://bkleinen.github.io/classes/ss2013/info3/assignments/preparation-for-week-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2013/info3/assignments/preparation-for-week-3/</guid><description>&lt;p>This week and in Exercise 2, we will start working on the web applications. Please use the time till Friday to gather some ideas about which web application you might want to develop! We will have a topic collection, discussion and decision in class on friday. Here are my current ideas, just for inspiration:&lt;/p>
&lt;ul>
&lt;li>DailyTasks: An application where a user can make a list of daily tasks (e.g. study English, cleaning kitchen, exercise) and check them off every day. Next step would be making the app &amp;ldquo;social&amp;rdquo; with friends, an activity feed and some means to help motivate each other keeping on track.&lt;/li>
&lt;li>Learn Student Names: An application that helps me a professor learn student names based on pictures in some index-card-learning style, e.g. with a certain number of repetitions that decreases as names are memorized etc.&lt;/li>
&lt;li>Classroom Ballot: a tool for anonymous ballots during class.&lt;/li>
&lt;/ul>
&lt;p>It is rather easy to create a website that shows and stores some information backed by a database in Rails. Your apps should be based on simple information storage and retrieval via the web (e.g. don&amp;rsquo;t plan on creating a video editing application or a 3D Game, Rails is not good at that) and think of something that has some extra complexity, e.g. does some calculation based on the data, tracks user progress as in the Student Name Learning Application, gathers and visualizes data as in the Ballot idea, etc. Don&amp;rsquo;t worry too much about limitations, though, as you&amp;rsquo;ll be able to switch your topic later if you encounter a dead end. It will just serve as an example for discussing and practicing various topics and techniques around Enterprise Applications, Software Engineering and Patterns.&lt;/p></description></item><item><title>Project "IMI Map goes MEVN"</title><link>https://bkleinen.github.io/classes/ss2021/project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/project/</guid><description>&lt;p>Praxisprojekt im Master&lt;/p>
&lt;h3 id="m6-imi-map-goes-mevn---migrate-the-imi-map-from-rails-to-mevn">M6. IMI Map goes MEVN - Migrate the IMI-Map from Rails to MEVN&lt;/h3>
&lt;p>Barne Kleinen&lt;/p>
&lt;p>Die IMI-Map ist eine Web-App, die Studierende beim Finden von Praktikumsplätzen und die Praktikumsbeauftragten bei der Verwaltung der Praktika unterstützt. Sie wurde in zwei früheren Praxisprojekten und einigen Bachelorarbeiten entwickelt und wird seit 2013 im Studiengang aktiv verwendet und weiterentwickelt.
Sie wurde im Sommersemester 2013 als Ruby on Rails Anwendung entwickelt. Obwohl Ruby on Rails ein stabiles und immer noch aktuelles Web-Framework ist, setzen wir inzwischen in der Lehre modernere, JavaScript-basierte Frameworks ein. Deshalb soll die IMI-Map in diesem Projekt auf den MEVN-Stack (Mongo, Express, Vue und Node) migriert werden, um in Zukunft leichter durch studentische Projekte weiterentwickelt werden zu können.
Damit ist dieses Projekt sowohl ein Webtechnology- als auch ein softwaretechnisches Projekt, das sich vor allem mit der Frage beschäftigen wird, wie diese Migration sicher, d.h. ohne Regressionen oder Datenverlust durchgeführt werden kann. Ziel ist die tatsächliche Ablösung der IMI-Map durch die neue Version zum Ende des Semesters.&lt;/p></description></item><item><title>Project "Who's there?"</title><link>https://bkleinen.github.io/classes/ss2020/project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/project/</guid><description>&lt;p>Praxisprojekt im Bachelor&lt;/p>
&lt;h3 id="b5-whos-there-how-are-yall---light-weight-telepresence-with-html5">B5. Who&amp;rsquo;s there? How are y&amp;rsquo;all? - Light-Weight Telepresence with HTML5&lt;/h3>
&lt;p>Barne Kleinen&lt;/p>
&lt;p>The question of how to provide an awareness of coworkers, colleagues, fellow students and friends in a spatially remote working team has been the subject of research for over 25 years. Namely, there has been a wide array of elaborate setups to provide a sense or even awareness of the remote ones: videoconferencing rooms extending visually to the remote site, telepresence robots or even remote sports and games.
Yet, the reality of telepresence in most tools we use now in our everyday practice of remote work and distance learning is a list of names. Maybe enhanced with a still photo, an icon whether or not their camera or microphone is on, but still a list of names. There are quite some questions that may arise:
How large is my audience? What’s their mood? How many more are listening to this … not so interesting lecture? I wonder how I could find out with whom I want to talk to in this class. Distance Learning is all right, but I miss hanging out with the others. How on earth should I find people to team up with?
In this project I present you with 2 challenges:&lt;/p></description></item><item><title>Project IN_VISIBLE (Master)</title><link>https://bkleinen.github.io/classes/ws2019/m6-project/notes/target-groups/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/m6-project/notes/target-groups/</guid><description>&lt;h1 id="potential-usersuser-groups">Potential Users/User Groups&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>Equality Officers (Frauenbeauftragte)&lt;/p>
&lt;ul>
&lt;li>biased: present the institution as inclusive&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Head of Administration/Student Service&lt;/p>
&lt;/li>
&lt;li>
&lt;p>TIN People who are members of the institution&lt;/p>
&lt;ul>
&lt;li>who maybe experienced pain and want to share it&lt;/li>
&lt;li>or maybe a positive experience as well&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Local TIN People who want to provide information&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Alumnis&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Activists Maintaining the Platform/Administrator&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Hochschul-Akteur*innen in Marketing und Gleichstellung&lt;/p>
&lt;ul>
&lt;li>goal: good places in rankings, make the institution attractive for potential students&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>we need to make sure that a variety of people are interviewed (class, sexual orientation, gender identity,
perspectives of intersex people, people of color)&lt;/p></description></item><item><title>Project IN_VISIBLE (Master)</title><link>https://bkleinen.github.io/classes/ws2019/m6-project/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/m6-project/schedule/</guid><description>&lt;p>The &lt;strong>Tentative&lt;/strong> Schedule.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">W&lt;/th>
 &lt;th style="text-align: left">CW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Wed 16/10/2019&lt;/td>
 &lt;td style="text-align: left">Contextual Interviews&lt;/td>
 &lt;td style="text-align: left">Technology Brainstorming&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Wed 23/10/2019&lt;/td>
 &lt;td style="text-align: left">Affinity&lt;/td>
 &lt;td style="text-align: left">Tech. Proof of Concept&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Wed 30/10/2019&lt;/td>
 &lt;td style="text-align: left">Visions&lt;/td>
 &lt;td style="text-align: left">Tech. Proof of Concept&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Wed 06/11/2019&lt;/td>
 &lt;td style="text-align: left">Product Concepts&lt;/td>
 &lt;td style="text-align: left">Tech. Proof of Concept&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Wed 13/11/2019&lt;/td>
 &lt;td style="text-align: left">Prototype&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Wed 20/11/2019&lt;/td>
 &lt;td style="text-align: left">Prototype&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Wed 27/11/2019&lt;/td>
 &lt;td style="text-align: left">Prototype&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Wed 04/12/2019&lt;/td>
 &lt;td style="text-align: left">Prototype&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Wed 11/12/2019&lt;/td>
 &lt;td style="text-align: left">1. Evaluation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Wed 18/12/2019&lt;/td>
 &lt;td style="text-align: left">Prototype&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Wed 08/01/2020&lt;/td>
 &lt;td style="text-align: left">Prototype&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Wed 15/01/2020&lt;/td>
 &lt;td style="text-align: left">Prototype&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Wed 22/01/2020&lt;/td>
 &lt;td style="text-align: left">2. Evaluation/Presentation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Wed 29/01/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Projekt</title><link>https://bkleinen.github.io/classes/ws2017/project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/project/</guid><description>&lt;h2 id="topic-driven-backlog">Topic Driven Backlog&lt;/h2>
&lt;p>no description yet.&lt;/p></description></item><item><title>Python Resources</title><link>https://bkleinen.github.io/material/languages/python/python-resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/languages/python/python-resources/</guid><description>&lt;p>This is a collection of Python Resources. See &lt;a href="../python/">Python Notes&lt;/a>&lt;/p>
&lt;h2 id="the-official-python-documentation">The Official Python Documentation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.python.org/3/">3 Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.python.org/3/library/index.html">The Python Standard Library — Python 3 documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.python.org/3/reference/index.html">The Python Language Reference — Python 3 documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.python.org/3/using/index.html">Python Setup and Usage — Python 3 documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.python.org/3/tutorial/index.html">The Python Tutorial — Python 3 documentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="books">Books&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://introcs.cs.princeton.edu/python/home/">Robert Sedgewick, Kevin Wayne, Robert Dondero: Introduction to Programming in Python: An Interdisciplinary Approach. Pearson, 2015&lt;/a>
The linked companion website contains excerpts and lots of examples:&lt;/p></description></item><item><title>Refactoring e-learning</title><link>https://bkleinen.github.io/classes/ws2014/info3/material/refactoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info3/material/refactoring/</guid><description>&lt;p>You already know refactoring since Info1 - we spent quite some time refactoring the Zuul project!&lt;/p>
&lt;p>This e-learning is about exploring and understanding refactoring in more depth.&lt;/p>
&lt;p>The resource on refactoring:&lt;/p>
&lt;p>&lt;a href="https://martinfowler.com/books/refactoring.html">Fowler, Martin: Refactoring: Improving the Design of Existing Code, Addison Wesley Object Technology Series, 1999.&lt;/a>&lt;/p>
&lt;p>Ruby edition:&lt;/p>
&lt;p>&lt;a href="https://martinfowler.com/books/refactoringRubyEd.html">Jay Fields, Shane Harvie, and Martin Fowler: Refactoring Ruby Edition. Addison Wesley, 2009.&lt;/a>&lt;/p>
&lt;p>The latter is discussed in the &lt;a href="https://devchat.tv/ruby-rogues/178-rr-book-club-refactoring-ruby-with-martin-fowler">Ruby Rouges Podcast #178&lt;/a>.&lt;/p></description></item><item><title>Refactoring e-learning</title><link>https://bkleinen.github.io/classes/ws2015/info3/material/refactoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info3/material/refactoring/</guid><description>&lt;p>You already know refactoring since Info1 - we spent quite some time refactoring the Zuul project!&lt;/p>
&lt;p>This e-learning is about exploring and understanding refactoring in more depth.&lt;/p>
&lt;p>The resource on refactoring:&lt;/p>
&lt;p>&lt;a href="https://martinfowler.com/books/refactoring.html">Fowler, Martin: Refactoring: Improving the Design of Existing Code, Addison Wesley Object Technology Series, 1999.&lt;/a>&lt;/p>
&lt;p>Ruby edition:&lt;/p>
&lt;p>&lt;a href="https://martinfowler.com/books/refactoringRubyEd.html">Jay Fields, Shane Harvie, and Martin Fowler: Refactoring Ruby Edition. Addison Wesley, 2009.&lt;/a>&lt;/p>
&lt;p>The latter is discussed in the &lt;a href="https://devchat.tv/ruby-rogues/178-rr-book-club-refactoring-ruby-with-martin-fowler">Ruby Rouges Podcast #178&lt;/a>.&lt;/p></description></item><item><title>Refactoring e-learning</title><link>https://bkleinen.github.io/classes/ws2017/info3/material/refactoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/info3/material/refactoring/</guid><description>&lt;p>You already know refactoring since Info1 - we spent quite some time refactoring the Zuul project!&lt;/p>
&lt;p>This e-learning is about exploring and understanding refactoring in more depth.&lt;/p>
&lt;p>The resource on refactoring:&lt;/p>
&lt;p>&lt;a href="https://martinfowler.com/books/refactoring.html">Fowler, Martin: Refactoring: Improving the Design of Existing Code, Addison Wesley Object Technology Series, 1999.&lt;/a>&lt;/p>
&lt;p>Ruby edition:&lt;/p>
&lt;p>&lt;a href="https://martinfowler.com/books/refactoringRubyEd.html">Jay Fields, Shane Harvie, and Martin Fowler: Refactoring Ruby Edition. Addison Wesley, 2009.&lt;/a>&lt;/p>
&lt;p>The latter is discussed in the &lt;a href="https://devchat.tv/ruby-rogues/178-rr-book-club-refactoring-ruby-with-martin-fowler">Ruby Rouges Podcast #178&lt;/a>.&lt;/p></description></item><item><title>Refactoring e-learning</title><link>https://bkleinen.github.io/classes/ws2020/info3/material/refactoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/info3/material/refactoring/</guid><description>&lt;p>You already know refactoring since Info1 - we spent quite some time refactoring the Zuul project!&lt;/p>
&lt;p>This e-learning is about exploring and understanding refactoring in more depth.&lt;/p>
&lt;p>The resource on refactoring:&lt;/p>
&lt;p>&lt;a href="https://martinfowler.com/books/refactoring.html">Fowler, Martin: Refactoring: Improving the Design of Existing Code, Addison Wesley Object Technology Series, 1999.&lt;/a>&lt;/p>
&lt;p>Ruby edition:&lt;/p>
&lt;p>&lt;a href="https://martinfowler.com/books/refactoringRubyEd.html">Jay Fields, Shane Harvie, and Martin Fowler: Refactoring Ruby Edition. Addison Wesley, 2009.&lt;/a>&lt;/p>
&lt;p>The latter is discussed in the &lt;a href="https://devchat.tv/ruby-rogues/178-rr-book-club-refactoring-ruby-with-martin-fowler">Ruby Rouges Podcast #178&lt;/a>.&lt;/p></description></item><item><title>Schedule</title><link>https://bkleinen.github.io/classes/ws2013/info1/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info1/schedule/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Lecture&lt;/th>
 &lt;th style="text-align: left">Date (Tue)&lt;/th>
 &lt;th style="text-align: left">Lecture (2 on Tue)&lt;/th>
 &lt;th style="text-align: left">Chapter (Barnes/Kölling)&lt;/th>
 &lt;th style="text-align: left">Lab (Tue/Thu)&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">15-Oct-2013&lt;/td>
 &lt;td style="text-align: left">Introduction to Class + to Kara&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-00">Lab Startup&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Instructions, Methods&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">22-Oct-2013&lt;/td>
 &lt;td style="text-align: left">Kara Programming, Variables, Loops, Conditionals&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-01">Exercise 01&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Arrays, Kara Roundup&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">29-Oct-2013&lt;/td>
 &lt;td style="text-align: left">Objects, Classes, Methods, BlueJ, Parameters, Compiler&lt;/td>
 &lt;td style="text-align: left">Chapter 1&lt;/td>
 &lt;td style="text-align: left">Gruppe 1: &lt;a href="../labs/exercise-02">Exercise 02&lt;/a> Gruppe 2: &lt;a href="../labs/exercise-01">Exercise 01&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Class Definitions, Fields, Constructors, Methods, Parameters, Assignment, Accessor methods, Mutator Methods&lt;/td>
 &lt;td style="text-align: left">Chapter 2&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">5-Nov-2013&lt;/td>
 &lt;td style="text-align: left">Printing with BlueJ, Conditional, Local Variables&lt;/td>
 &lt;td style="text-align: left">Chapter 2&lt;/td>
 &lt;td style="text-align: left">Gruppe 1: &lt;a href="../labs/exercise-03">Exercise 03&lt;/a> Gruppe 2: &lt;a href="../labs/exercise-02">Exercise 02&lt;/a> &lt;strong>and &lt;a href="../labs/exercise-03">Exercise 03&lt;/a>&lt;/strong>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Expressions, Abstraction, Modularization, Object Interaction&lt;/td>
 &lt;td style="text-align: left">Chapter 3&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">12-Nov-2013&lt;/td>
 &lt;td style="text-align: left">Object Creation, Object and Class Diagrams, Primitive Types, Object Types, Multiple Constructors, Debugger&lt;/td>
 &lt;td style="text-align: left">Chapter 3&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-04">Exercise 04&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Collections, Generics, for-each, While Loops&lt;/td>
 &lt;td style="text-align: left">Chapter 4&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">19-Nov-2013&lt;/td>
 &lt;td style="text-align: left">More Loops, Iterators, Arrays&lt;/td>
 &lt;td style="text-align: left">Chapter 4&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-05">Exercise 05&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">For Loops, Library Classes, Reading Class Documentation&lt;/td>
 &lt;td style="text-align: left">Chapter 5&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">26-Nov-2013&lt;/td>
 &lt;td style="text-align: left">Random, Packages, Maps&lt;/td>
 &lt;td style="text-align: left">Chapter 5&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-06">Exercise 06&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Public vs. Private, Interfaces, Class Variables&lt;/td>
 &lt;td style="text-align: left">Chapter 5+6&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">3-Dec-2013&lt;/td>
 &lt;td style="text-align: left">Writing Class Documentation, Unit Testing, Test Automation&lt;/td>
 &lt;td style="text-align: left">Chapter 6&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Modularization, Interfaces, Debugging, Walkthroughs&lt;/td>
 &lt;td style="text-align: left">Chapter 6&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">10-Dec-2013&lt;/td>
 &lt;td style="text-align: left">Designing Classes, Coupling, Cohesion, Refactoring&lt;/td>
 &lt;td style="text-align: left">Chapter 7&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-07">Exercise 07&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Refactoring&lt;/td>
 &lt;td style="text-align: left">Chapter 7&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">17-Dec-2013&lt;/td>
 &lt;td style="text-align: left">Refactoring&lt;/td>
 &lt;td style="text-align: left">Chapter 7&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-08">Exercise 08&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Using the main, Inheritance, Subtyping, Polymorphism, Protected&lt;/td>
 &lt;td style="text-align: left">Chapter 8&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">7-Jan-2014&lt;/td>
 &lt;td style="text-align: left">Welcome to the new year: Repetition&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-09">Exercise 09&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Casting, Polymorphism, Static vs. dynamic typing, Overriding, Object equality&lt;/td>
 &lt;td style="text-align: left">Chapter 9&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">14-Jan-2014&lt;/td>
 &lt;td style="text-align: left">Abstract Classes, Abstract Methods&lt;/td>
 &lt;td style="text-align: left">Chapter 10&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-10">Exercise 10&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">A word about the Exam&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">21-Jan-2014&lt;/td>
 &lt;td style="text-align: left">Multiple Inheritance vs. Java Interfaces, GUIs, AWT and Swing, Event handler&lt;/td>
 &lt;td style="text-align: left">Chapter 11&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-11">Exercise 11&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">An Example: The Image Viewer&lt;/td>
 &lt;td style="text-align: left">Chapter 11&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">28-Jan-2014&lt;/td>
 &lt;td style="text-align: left">Errors, Exceptions, Assertions&lt;/td>
 &lt;td style="text-align: left">Chapter 12&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-12">Exercise 12&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">File-based IO, Files&lt;/td>
 &lt;td style="text-align: left">Chapter 12&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">4-Feb-2014&lt;/td>
 &lt;td style="text-align: left">File, Switch, Exceptions Again&lt;/td>
 &lt;td style="text-align: left">Chapter 12&lt;/td>
 &lt;td style="text-align: left">Exam Preparation&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">30&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Application Design&lt;/td>
 &lt;td style="text-align: left">Chapter 13&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">31&lt;/td>
 &lt;td style="text-align: left">11-Feb-2014&lt;/td>
 &lt;td style="text-align: left">Exam&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">32&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thursday: Klausureinsicht&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Schedule</title><link>https://bkleinen.github.io/classes/ws2013/info3/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2013/info3/schedule/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">No.&lt;/th>
 &lt;th style="text-align: left">Day&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic&lt;/th>
 &lt;th style="text-align: left">Lecture&lt;/th>
 &lt;th style="text-align: left">Ass.&lt;/th>
 &lt;th style="text-align: left">Lab (Friday)&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Thu&lt;/td>
 &lt;td style="text-align: left">10-Oct-13&lt;/td>
 &lt;td style="text-align: left">SE&lt;/td>
 &lt;td style="text-align: left">Introduction to Info 3 and Software Engineering&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Fri&lt;/td>
 &lt;td style="text-align: left">11-Oct-13&lt;/td>
 &lt;td style="text-align: left">SE&lt;/td>
 &lt;td style="text-align: left">No Lecture/Lab: &lt;a href="../labs/lab-00">E-Learning&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-00">Setup your Development Environment&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Thu&lt;/td>
 &lt;td style="text-align: left">17-Oct-13&lt;/td>
 &lt;td style="text-align: left">SE&lt;/td>
 &lt;td style="text-align: left">Software Configuration Management&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Fri&lt;/td>
 &lt;td style="text-align: left">18-Oct-13&lt;/td>
 &lt;td style="text-align: left">SE&lt;/td>
 &lt;td style="text-align: left">Software Configuration Management&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-01">Development Environment &amp;amp; GIT, Markdown&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Thu&lt;/td>
 &lt;td style="text-align: left">24-Oct-13&lt;/td>
 &lt;td style="text-align: left">SE&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">Fri&lt;/td>
 &lt;td style="text-align: left">25-Oct-13&lt;/td>
 &lt;td style="text-align: left">SE&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">Thu&lt;/td>
 &lt;td style="text-align: left">31-Oct-13&lt;/td>
 &lt;td style="text-align: left">SE&lt;/td>
 &lt;td style="text-align: left">Software Development Processes, Rest of Intro to SE&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">Fri&lt;/td>
 &lt;td style="text-align: left">1-Nov-13&lt;/td>
 &lt;td style="text-align: left">SE&lt;/td>
 &lt;td style="text-align: left">Software Development Processes,Requirements Engineering&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-02">UML Part I: Use Cases&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">Thu&lt;/td>
 &lt;td style="text-align: left">7-Nov-13&lt;/td>
 &lt;td style="text-align: left">SE&lt;/td>
 &lt;td style="text-align: left">Probelehrveranstaltung im Rahmen eines Berufungsverfahrens&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">Fri&lt;/td>
 &lt;td style="text-align: left">8-Nov-13&lt;/td>
 &lt;td style="text-align: left">SE&lt;/td>
 &lt;td style="text-align: left">System Modeling and Architectural Design&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-03">UML Part II: Class Diagrams&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">Thu&lt;/td>
 &lt;td style="text-align: left">14-Nov-13&lt;/td>
 &lt;td style="text-align: left">SE&lt;/td>
 &lt;td style="text-align: left">Agile Manifesto, Scrum (Scrum Ceremonies and Sprints)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">Fri&lt;/td>
 &lt;td style="text-align: left">15-Nov-13&lt;/td>
 &lt;td style="text-align: left">Clean Code&lt;/td>
 &lt;td style="text-align: left">Clean Code&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-04">UML Part III: State Machine Diagrams&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">Thu&lt;/td>
 &lt;td style="text-align: left">21-Nov-13&lt;/td>
 &lt;td style="text-align: left">Clean Code&lt;/td>
 &lt;td style="text-align: left">SOLID Principles&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">Fri&lt;/td>
 &lt;td style="text-align: left">22-Nov-13&lt;/td>
 &lt;td style="text-align: left">Clean Code&lt;/td>
 &lt;td style="text-align: left">SOLID Principles II&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-05">UML Part IV: Sequence Diagrams&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Thu&lt;/td>
 &lt;td style="text-align: left">28-Nov-13&lt;/td>
 &lt;td style="text-align: left">Best Practices&lt;/td>
 &lt;td style="text-align: left">Ruby Intro&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Fri&lt;/td>
 &lt;td style="text-align: left">29-Nov-13&lt;/td>
 &lt;td style="text-align: left">Clean Code&lt;/td>
 &lt;td style="text-align: left">Pair Programming and Code Review&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-06">Ruby Exercise&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Thu&lt;/td>
 &lt;td style="text-align: left">5-Dec-13&lt;/td>
 &lt;td style="text-align: left">Best Practices&lt;/td>
 &lt;td style="text-align: left">Software Testing&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Fri&lt;/td>
 &lt;td style="text-align: left">6-Dec-13&lt;/td>
 &lt;td style="text-align: left">Clean Code&lt;/td>
 &lt;td style="text-align: left">Working with Legacy Code&lt;/td>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-07">Testing 1: Test Driven Design&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Thu&lt;/td>
 &lt;td style="text-align: left">12-Dec-13&lt;/td>
 &lt;td style="text-align: left">Adv. OOD&lt;/td>
 &lt;td style="text-align: left">Object Relations: Composition and Inheritance&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Fri&lt;/td>
 &lt;td style="text-align: left">13-Dec-13&lt;/td>
 &lt;td style="text-align: left">Adv. OOD&lt;/td>
 &lt;td style="text-align: left">Dependency Management and Working with APIs&lt;/td>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-08">Testing 2: Black-/Whiteboxtests&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Thu&lt;/td>
 &lt;td style="text-align: left">19-Dec-13&lt;/td>
 &lt;td style="text-align: left">Adv. OOD&lt;/td>
 &lt;td style="text-align: left">Introduction to Ruby Dynamic Typing, Duck Typing&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Fri&lt;/td>
 &lt;td style="text-align: left">20-Dec-13&lt;/td>
 &lt;td style="text-align: left">Patterns&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Thu&lt;/td>
 &lt;td style="text-align: left">9-Jan-14&lt;/td>
 &lt;td style="text-align: left">Patterns&lt;/td>
 &lt;td style="text-align: left">Working with Legacy Code&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Fri&lt;/td>
 &lt;td style="text-align: left">10-Jan-14&lt;/td>
 &lt;td style="text-align: left">Patterns&lt;/td>
 &lt;td style="text-align: left">Software Design Patterns&lt;/td>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-09">Legacy Code Kata&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Thu&lt;/td>
 &lt;td style="text-align: left">16-Jan-14&lt;/td>
 &lt;td style="text-align: left">Patterns&lt;/td>
 &lt;td style="text-align: left">Patterns of Enterprise Application Architecture(POEAA)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Fri&lt;/td>
 &lt;td style="text-align: left">17-Jan-14&lt;/td>
 &lt;td style="text-align: left">Patterns&lt;/td>
 &lt;td style="text-align: left">Introduction to Rails, POEAA Revisited, Model View Controller&lt;/td>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-10">Rails Start&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Thu&lt;/td>
 &lt;td style="text-align: left">23-Jan-14&lt;/td>
 &lt;td style="text-align: left">Best Practices&lt;/td>
 &lt;td style="text-align: left">Associations in Rails, Internationalisierung und Lokalisierung von Software&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Fri&lt;/td>
 &lt;td style="text-align: left">24-Jan-14&lt;/td>
 &lt;td style="text-align: left">Best Practices&lt;/td>
 &lt;td style="text-align: left">SCM, Build Management, Continuous Deployment&lt;/td>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-11">Rails Associations and Internationalization (2weeks)&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">Thu&lt;/td>
 &lt;td style="text-align: left">30-Jan-14&lt;/td>
 &lt;td style="text-align: left">Architecture&lt;/td>
 &lt;td style="text-align: left">Distributed Systems and SOA&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">30&lt;/td>
 &lt;td style="text-align: left">Fri&lt;/td>
 &lt;td style="text-align: left">31-Jan-14&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Klausurvorbereitung&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Probeklausur&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">31&lt;/td>
 &lt;td style="text-align: left">Thu&lt;/td>
 &lt;td style="text-align: left">6-Feb-14&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Retrospektive&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">32&lt;/td>
 &lt;td style="text-align: left">Fri&lt;/td>
 &lt;td style="text-align: left">7-Feb-14&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Klausur&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Klausur&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">33&lt;/td>
 &lt;td style="text-align: left">Thu&lt;/td>
 &lt;td style="text-align: left">13-Feb-14&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Klausureinsicht&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">34&lt;/td>
 &lt;td style="text-align: left">Fri&lt;/td>
 &lt;td style="text-align: left">14-Feb-14&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Probably Showtime&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>Application Architectures&lt;/p></description></item><item><title>Schedule</title><link>https://bkleinen.github.io/classes/ws2014/info1/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info1/schedule/</guid><description>&lt;p>Please note that there will be no Info1 classes in the first week due to introductionary things. In the second week, there will be no lecture and lab on Tuesday due to a conference - I found no sensible time slot to move our first lab to, so we&amp;rsquo;ll be starting off in the third week.&lt;/p>
&lt;p>This schedule is tentative and subject to change!&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">Lecture&lt;/th>
 &lt;th style="text-align: left">Date (Tue)&lt;/th>
 &lt;th style="text-align: left">Lecture&lt;/th>
 &lt;th style="text-align: left">Book&lt;/th>
 &lt;th style="text-align: left">Lab (Tue)&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">14-Oct-2014&lt;/td>
 &lt;td style="text-align: left">no lecture&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">no lab&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Introduction to Class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">20-Oct-2014&lt;/td>
 &lt;td style="text-align: left">Kara Programming: Instructions, Methods, Variables, Loops, Conditionals&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-00">Lab Startup&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Kara Programming: Instructions, Methods, Variables, Loops, Conditionals&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">28-Oct-2014&lt;/td>
 &lt;td style="text-align: left">Kara Roundup, Kara and its World as Objects&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-01">Exercise 01&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Objects, Classes, Methods, BlueJ, Parameters, Compiler (Chapter 1)&lt;/td>
 &lt;td style="text-align: left">Ch. 1&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">04-Nov-2014&lt;/td>
 &lt;td style="text-align: left">Class Definitions, Fields, Constructors, Methods, Parameters, Assignment, Getters and Setters (Chapter 2)&lt;/td>
 &lt;td style="text-align: left">Ch. 2&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-02">Exercise 02&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Printing to the command line, Conditional, Local Variables, Expressions, (Chapter 2)&lt;/td>
 &lt;td style="text-align: left">Ch. 2&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">11-Nov-2014&lt;/td>
 &lt;td style="text-align: left">Abstraction, Modularization, Object Interaction&lt;/td>
 &lt;td style="text-align: left">Ch. 3&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-03">Exercise 03&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Object Creation, Object and Class Diagrams, Primitive Types,&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">18-Nov-2014&lt;/td>
 &lt;td style="text-align: left">Object Types, Multiple Constructors, Debugger&lt;/td>
 &lt;td style="text-align: left">Ch. 4&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-04">Exercise 04&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Collections, Generics, for-each, While Loops&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">25-Nov-2014&lt;/td>
 &lt;td style="text-align: left">More Loops, Iterators, Arrays, For Loops,&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-05">Exercise 05&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Library Classes, Reading Class Documentation, Random, Packages, Maps&lt;/td>
 &lt;td style="text-align: left">Ch. 5&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">02-Dec-2014&lt;/td>
 &lt;td style="text-align: left">Public vs. Private, Interfaces, Class Variables&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-06">Exercise 06&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Writing Class Documentation, Unit Testing, Test Automation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">09-Dec-2014&lt;/td>
 &lt;td style="text-align: left">Modularization, Interfaces, Debugging, Walkthroughs&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-07">Exercise 07&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Designing Classes, Coupling, Cohesion, Refactoring&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">16-Dec-2014&lt;/td>
 &lt;td style="text-align: left">Refactoring&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-08">Exercise 08&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">(ausgefallen)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">06-Jan-2015&lt;/td>
 &lt;td style="text-align: left">Welcome to the new year: Repetition&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-09">Exercise 09&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Refactoring&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">13-Jan-2015&lt;/td>
 &lt;td style="text-align: left">Refactoring&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-10">Exercise 10&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Using the main, Inheritance, Subtyping, Polymorphism, Protected&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">20-Jan-2015&lt;/td>
 &lt;td style="text-align: left">Casting, Polymorphism, Static vs. dynamic typing, Overriding, Object equality&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-11">Exercise 11&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Abstract Classes, Abstract Methods, A word about the Exam&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">27-Jan-2015&lt;/td>
 &lt;td style="text-align: left">Multiple Inheritance vs. Java Interfaces, GUIs, AWT and Swing, Event handler&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-12">Exercise 12&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">An Example: The Image Viewer&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">03-Feb-2015&lt;/td>
 &lt;td style="text-align: left">Errors, Exceptions, Assertions&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Reflexion Ex. 12, Trial Exam&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">30&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Exam Preparation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">31&lt;/td>
 &lt;td style="text-align: left">10-Feb-2015&lt;/td>
 &lt;td style="text-align: left">Exam&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Exam&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">32&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Klausureinsicht&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Schedule</title><link>https://bkleinen.github.io/classes/ws2015/info1/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/info1/schedule/</guid><description>&lt;p>Please note that there will be no Info1 classes in the first week due to introductionary things.
In the second week, there will also be no lectures and due to a conference -
I found no sensible time slot to move our first lab to, so we&amp;rsquo;ll be starting off in the third week.&lt;/p>
&lt;p>This schedule is tentative and subject to change!&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Lecture&lt;/th>
 &lt;th style="text-align: left">Lab&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Tue, 2015-10-13&lt;/td>
 &lt;td style="text-align: left">no class&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-00">Lab Startup&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-10-15&lt;/td>
 &lt;td style="text-align: left">no class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Tue, 2015-10-20&lt;/td>
 &lt;td style="text-align: left">Introduction to Class &amp;amp; Kara Programming&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-01-a">Exercise 01 a&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-10-22&lt;/td>
 &lt;td style="text-align: left">Kara Programming: Instructions, Methods, Variables, Loops, Conditionals&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Tue, 2015-10-27&lt;/td>
 &lt;td style="text-align: left">Kara Roundup, Kara and its World as Objects&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-01-b">Exercise 01 b&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-10-29&lt;/td>
 &lt;td style="text-align: left">Objects, Classes, Methods, BlueJ, Parameters, Compiler&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Tue, 2015-11-03&lt;/td>
 &lt;td style="text-align: left">Class Definitions, Fields, Constructors, Methods, Parameters, Assignment, Getters and Setter&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-02">Exercise 02&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-11-05&lt;/td>
 &lt;td style="text-align: left">Printing to the command line, Conditional, Local Variables, Expressions&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Tue, 2015-11-10&lt;/td>
 &lt;td style="text-align: left">Abstraction, Modularization, Object Interaction&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-03">Exercise 03&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-11-12&lt;/td>
 &lt;td style="text-align: left">Object Creation, Object and Class Diagrams, Primitive Types,&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Tue, 2015-11-17&lt;/td>
 &lt;td style="text-align: left">Object Types, Multiple Constructors, Debugger&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-04">Exercise 04&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-11-19&lt;/td>
 &lt;td style="text-align: left">Collections, Generics, for-each, While Loops&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Tue, 2015-11-24&lt;/td>
 &lt;td style="text-align: left">More Loops, Iterators, Arrays, For Loops,&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-05">Exercise 05&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-11-26&lt;/td>
 &lt;td style="text-align: left">Library Classes, Reading Class Documentation, Random, Packages, Maps&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Tue, 2015-12-01&lt;/td>
 &lt;td style="text-align: left">Public vs. Private, Interfaces, Class Variables&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-06">Exercise 06&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-12-03&lt;/td>
 &lt;td style="text-align: left">Writing Class Documentation, Unit Testing, Test Automation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Tue, 2015-12-08&lt;/td>
 &lt;td style="text-align: left">Modularization, Interfaces, Debugging, Walkthroughs&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-07">Exercise 07&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-12-10&lt;/td>
 &lt;td style="text-align: left">Testing and Interfaces&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Tue, 2015-12-15&lt;/td>
 &lt;td style="text-align: left">Designing Classes, Coupling, Cohesion, Refactoring&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-08">Exercise 08&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-12-17&lt;/td>
 &lt;td style="text-align: left">Refactoring&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Tue, 2015-12-22&lt;/td>
 &lt;td style="text-align: left">Refactoring&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-09">Exercise 09&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&amp;mdash;&lt;/td>
 &lt;td style="text-align: left">&amp;ndash;&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-12-24&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; CHRISTMAS! &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Tue, 2016-01-05&lt;/td>
 &lt;td style="text-align: left">Welcome to the new year: Repetition&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-10">Exercise 10&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-01-07&lt;/td>
 &lt;td style="text-align: left">Using the main, Inheritance, Subtyping, Polymorphism, Protected&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Tue, 2016-01-12&lt;/td>
 &lt;td style="text-align: left">Casting, Polymorphism, Static vs. dynamic typing, Overriding, Object equality&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-11">Exercise 11&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-01-14&lt;/td>
 &lt;td style="text-align: left">- no lecture -&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Tue, 2016-01-19&lt;/td>
 &lt;td style="text-align: left">Abstract Classes, Abstract Methods, A word about the Exam&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-12">Exercise 12&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-01-21&lt;/td>
 &lt;td style="text-align: left">Multiple Inheritance vs. Java Interfaces,&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Tue, 2016-01-26&lt;/td>
 &lt;td style="text-align: left">Application Design: A case Study&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-13">Exercise 13&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-01-28&lt;/td>
 &lt;td style="text-align: left">Errors, Exceptions, Assertions, File-based IO, Files, Command Line&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Tue, 2016-02-02&lt;/td>
 &lt;td style="text-align: left">GUIs, AWT and Swing, Event handler, The Image Viewer&lt;/td>
 &lt;td style="text-align: left">Trial Exam&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-02-04&lt;/td>
 &lt;td style="text-align: left">Exam Preparation - &lt;a href="https://github.com/bkleinen/bkleinen.github.io/wiki/Info1">Terms&lt;/a> (also in Moodle)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">Tue, 2016-02-09&lt;/td>
 &lt;td style="text-align: left">No Lecture&lt;/td>
 &lt;td style="text-align: left">TBD&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-02-11&lt;/td>
 &lt;td style="text-align: left">No Lecture&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">Tue, 2016-02-16&lt;/td>
 &lt;td style="text-align: left">Exam&lt;/td>
 &lt;td style="text-align: left">Exam&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Schedule</title><link>https://bkleinen.github.io/classes/ws2016/info1/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/info1/schedule/</guid><description>&lt;p>This schedule is tentative and subject to change.&lt;/p>
&lt;p>&lt;strong>All exercises are linked from this page. Feel free to peek, but be aware
that the ones released for this class are only those linked from the &lt;a href="../labs">lab overview page&lt;/a>&lt;/strong>&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Lecture&lt;/th>
 &lt;th style="text-align: left">Lab&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">40&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-10-05&lt;/td>
 &lt;td style="text-align: left">no class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-10-06&lt;/td>
 &lt;td style="text-align: left">Introduction to Class &amp;amp; Kara Programming&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-10-12&lt;/td>
 &lt;td style="text-align: left">Kara Programming: Instructions, Methods, Variables, Loops, Conditionals&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-00">Lab Startup&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-10-13&lt;/td>
 &lt;td style="text-align: left">Kara Roundup, Kara and its World as Objects&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-10-19&lt;/td>
 &lt;td style="text-align: left">Kara Worksheet 2 continued&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-01">Exercise 01&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-10-20&lt;/td>
 &lt;td style="text-align: left">Objects, Classes, Methods, BlueJ, Parameters, Compiler (Chapter 1)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-10-26&lt;/td>
 &lt;td style="text-align: left">Class Definitions, Fields, Constructors, Methods, Parameters, Assignment, Getters and Setter (Chapter 2)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-02">Exercise 02&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-10-27&lt;/td>
 &lt;td style="text-align: left">Printing to the command line, Conditional, Local Variables, Expressions (Chapter 2)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-11-02&lt;/td>
 &lt;td style="text-align: left">Abstraction, Modularization, Object Interaction (Chapter 3)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-03">Exercise 03&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-11-03&lt;/td>
 &lt;td style="text-align: left">Object Creation, Object and Class Diagrams, Primitive Types,&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-11-09&lt;/td>
 &lt;td style="text-align: left">Object Types, Multiple Constructors, Debugger&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-04">Exercise 04&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-11-10&lt;/td>
 &lt;td style="text-align: left">Collections, Generics, for-each, While Loops (Chapter 4)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-11-16&lt;/td>
 &lt;td style="text-align: left">More Loops, Iterators, Arrays, For Loops,&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-05">Exercise 05&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-11-17&lt;/td>
 &lt;td style="text-align: left">Library Classes, Reading Class Documentation, Random, Packages, Maps (Chapter 5)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-11-23&lt;/td>
 &lt;td style="text-align: left">Public vs. Private, Interfaces, Class Variables&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-06">Exercise 06&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-11-24&lt;/td>
 &lt;td style="text-align: left">- ausgefallen -&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-11-30&lt;/td>
 &lt;td style="text-align: left">Writing Class Documentation, Unit Testing, Test Automation (Chapter 7)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-07">Exercise 07&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-12-01&lt;/td>
 &lt;td style="text-align: left">Modularization, Interfaces, Debugging, Walkthroughs, Testing and Interfaces&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-12-07&lt;/td>
 &lt;td style="text-align: left">Designing Classes, Coupling, Cohesion, Refactoring (Chapter 6)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-08">Exercise 08&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-12-08&lt;/td>
 &lt;td style="text-align: left">Refactoring&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-12-14&lt;/td>
 &lt;td style="text-align: left">Refactoring, Using the main method&lt;/td>
 &lt;td style="text-align: left">- none -&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-12-15&lt;/td>
 &lt;td style="text-align: left">Inheritance, Subtyping, Polymorphism, Protected, Casting (Chapter 8)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-12-21&lt;/td>
 &lt;td style="text-align: left">Polymorphism, Static vs. dynamic typing (Chapter 9)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-09">Exercise 09&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-12-22&lt;/td>
 &lt;td style="text-align: left">Overriding, Object equality&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">52&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-12-28&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; CHRISTMAS! &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-12-29&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; CHRISTMAS! &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-01-04&lt;/td>
 &lt;td style="text-align: left">Welcome to the new year: Repetition&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-10-a">Exercise 10 a&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2017-01-05&lt;/td>
 &lt;td style="text-align: left">Application Design: A case Study (Chapter 14)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-01-11&lt;/td>
 &lt;td style="text-align: left">Abstract Classes, Abstract Methods (Chapter 10) A word about the Exam&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-10-b">Exercise 10 b&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2017-01-12&lt;/td>
 &lt;td style="text-align: left">Multiple Inheritance vs. Java Interfaces,&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-01-18&lt;/td>
 &lt;td style="text-align: left">Graphical User Interfaces (Chapter 11)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-11">Exercise 11&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2017-01-19&lt;/td>
 &lt;td style="text-align: left">Graphical User Interfaces&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-01-25&lt;/td>
 &lt;td style="text-align: left">Handling Errors, Exceptions, Assertions, File-based IO, Files, Command Line (Chapter 12)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/exercise-12">Exercise 12&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2017-01-26&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-02-01&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; Start of the exam period &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2017-02-02&lt;/td>
 &lt;td style="text-align: left">EXAM&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-02-08&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2017-02-09&lt;/td>
 &lt;td style="text-align: left">Exam Review? (TBD)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>Exam Preparation - &lt;a href="https://github.com/bkleinen/bkleinen.github.io/wiki/Info1">Terms&lt;/a> (also in Moodle)&lt;/p></description></item><item><title>Some Work in Progress</title><link>https://bkleinen.github.io/misc/ak-wip/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/misc/ak-wip/</guid><description>&lt;p>Ein paar links zu Arbeiterkind/HTW
(in Vorbereitung)&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=J-56iRih88E">Anne Stalfort, Mitabeiterin bei ArbeiterKind.de, für www.ersteanderuni.de&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.arbeiterkind.de/hessen">ArbeiterKind.de in Hessen&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.htw-berlin.de/einrichtungen/zentrale-referate/studienberatung-career-service/allgemeine-studienberatung/">Allgemeine Studienberatung&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://events.htw-berlin.de/index.php?id=10079&amp;amp;no_cache=1">Match deinen Master - online Q&amp;amp;A session&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=ACp40J34imo">Frag Özgün! | FAQ für Studieninteressierte | HTW Berlin&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.linkedin.com/posts/htwberlin_studienberatung-activity-6934412768733237248-KSMk/?trk=public_profile_like_view&amp;amp;originalSubdomain=de">Hochschule für Technik und Wirtschaft Berlin auf LinkedIn: #studienberatung&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.htw-berlin.de/einrichtungen/zentrale-referate/gleichstellung-antidiskriminierung/antidiskriminierung/">Antidiskriminierung | HTW Berlin&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Sorting Algorithms</title><link>https://bkleinen.github.io/material/algorithms/sorting-algorithms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/algorithms/sorting-algorithms/</guid><description>&lt;p>..&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Algorithm&lt;/th>
 &lt;th style="text-align: left">Description&lt;/th>
 &lt;th style="text-align: left">Invariant&lt;/th>
 &lt;th style="text-align: left">Plus&lt;/th>
 &lt;th style="text-align: left">O(n)&lt;/th>
 &lt;th style="text-align: left">Comparisions&lt;/th>
 &lt;th style="text-align: left">Swaps&lt;/th>
 &lt;th style="text-align: left">Stable&lt;/th>
 &lt;th style="text-align: left">adaptive&lt;/th>
 &lt;th style="text-align: left">space&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">Selection Sort&lt;/td>
 &lt;td style="text-align: left">select smallest from rest, append to already sorted on left&lt;/td>
 &lt;td style="text-align: left">a[1..i] in place&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">n^2&lt;/td>
 &lt;td style="text-align: left">n^2&lt;/td>
 &lt;td style="text-align: left">n&lt;/td>
 &lt;td style="text-align: left">not stable&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Insertion Sort&lt;/td>
 &lt;td style="text-align: left">take card from unsorted pile (right), insert it into sorted pile&lt;/td>
 &lt;td style="text-align: left">a[1..i] sorted&lt;/td>
 &lt;td style="text-align: left">adaptable, simple -&amp;gt; ok for small n&lt;/td>
 &lt;td style="text-align: left">n^2&lt;/td>
 &lt;td style="text-align: left">n^2&lt;/td>
 &lt;td style="text-align: left">n^2&lt;/td>
 &lt;td style="text-align: left">stable&lt;/td>
 &lt;td style="text-align: left">yes&lt;/td>
 &lt;td style="text-align: left">O(1) extra&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Shell Sort&lt;/td>
 &lt;td style="text-align: left">Insertion sort on every h-th element decreasing h down to 1&lt;/td>
 &lt;td style="text-align: left">each h-array is sorted&lt;/td>
 &lt;td style="text-align: left">adaptable, still simple&lt;/td>
 &lt;td style="text-align: left">n^(3/2)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">stable&lt;/td>
 &lt;td style="text-align: left">yes&lt;/td>
 &lt;td style="text-align: left">O(1) extra&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Bubble Sort&lt;/td>
 &lt;td style="text-align: left">go up through array, compare two and swap if not in right order (up to 1..n)&lt;/td>
 &lt;td style="text-align: left">a[1..i] in place&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">n^2&lt;/td>
 &lt;td style="text-align: left">n^2&lt;/td>
 &lt;td style="text-align: left">n^2&lt;/td>
 &lt;td style="text-align: left">stable&lt;/td>
 &lt;td style="text-align: left">yes&lt;/td>
 &lt;td style="text-align: left">O(1) extra&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Merge Sort&lt;/td>
 &lt;td style="text-align: left">split in two, sort rec, merge two parts.&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">predictable, works on linked lists&lt;/td>
 &lt;td style="text-align: left">n log n&lt;/td>
 &lt;td style="text-align: left">(0,5 to 1 )log n&lt;/td>
 &lt;td style="text-align: left">(1 to 1,5)log n&lt;/td>
 &lt;td style="text-align: left">stable&lt;/td>
 &lt;td style="text-align: left">no&lt;/td>
 &lt;td style="text-align: left">O(n) extra&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Quick Sort&lt;/td>
 &lt;td style="text-align: left">go up through array, compare two and swap if not in right order (up to 1..n)&lt;/td>
 &lt;td style="text-align: left">a[1..k-1] &amp;lt; a[k] &amp;lt;= a[k+1..n]&lt;/td>
 &lt;td style="text-align: left">general purpose sort, but not stable&lt;/td>
 &lt;td style="text-align: left">n log n (n^2 worst)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">no&lt;/td>
 &lt;td style="text-align: left">no&lt;/td>
 &lt;td style="text-align: left">O(n·lg(n)) for some optimizatiosn&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Bogo Sort&lt;/td>
 &lt;td style="text-align: left">randomly arrange array. If sorted, done.&lt;/td>
 &lt;td style="text-align: left">-&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">n!&lt;/td>
 &lt;td style="text-align: left">n * n!&lt;/td>
 &lt;td style="text-align: left">n*n!&lt;/td>
 &lt;td style="text-align: left">not stable&lt;/td>
 &lt;td style="text-align: left">no&lt;/td>
 &lt;td style="text-align: left">O(1)&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Sprint 01 - Building a Static Web Application</title><link>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-01-static-node-app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-01-static-node-app/</guid><description>&lt;h4 id="agile-topic-project-ideas">Agile Topic: Project Ideas&lt;/h4>
&lt;p>You will be working on one project throughout the term in a small, 3-5 person team.
Collect and discuss your project ideas with other students. You can pitch your idea next week in class.&lt;/p>
&lt;p>Write up a short project proposal for discussion in the next lab meeting, possibly together with other
students. Develop some user stories for the product backlog. After this discussion we will decide on the
different projects and the associated teams for the remainder of this class.&lt;/p></description></item><item><title>Sprint 01 - Building a Static Web Application</title><link>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-01-static-node-app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-01-static-node-app/</guid><description>&lt;h4 id="agile-topic-project-ideas">Agile Topic: Project Ideas&lt;/h4>
&lt;p>You will be working on one project throughout the term in a small, 3-5 person team.
Collect and discuss your project ideas with other students. You can pitch your idea next week in class.&lt;/p>
&lt;p>Write up a short project proposal for discussion in the next lab meeting, possibly together with other
students. Develop some user stories for the product backlog. After this discussion we will decide on the
different projects and the associated teams for the remainder of this class.&lt;/p></description></item><item><title>Sprint 02 - Building a First Express App</title><link>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-02-first-express-app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-02-first-express-app/</guid><description>&lt;h4 id="agile-topic-product-owner">Agile Topic: Product Owner&lt;/h4>
&lt;p>Name a product owner in your Scrum team. Set up your project and create a formal backlog as a plain text file (in the team but
with the product owner leading). Note: we will not use a dedicated tool for managing backlogs in this class. Their use is too
involved and therefore not in scope&lt;/p>
&lt;h4 id="development-topic-installing-and-understanding-expressjs">Development Topic: Installing and Understanding Express.js&lt;/h4>
&lt;p>Setup Express and understand the basic structure of the framework as described in Unit 2 of the book (lessons 8 and 9).&lt;/p></description></item><item><title>Sprint 02 - Building a First Express App</title><link>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-02-first-express-app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-02-first-express-app/</guid><description>&lt;h4 id="agile-topic-product-owner">Agile Topic: Product Owner&lt;/h4>
&lt;p>Name a product owner in your Scrum team. Set up your project and create a formal backlog as a plain text file (in the team but
with the product owner leading). Note: we will not use a dedicated tool for managing backlogs in this class. Their use is too
involved and therefore not in scope&lt;/p>
&lt;h4 id="development-topic-installing-and-understanding-expressjs">Development Topic: Installing and Understanding Express.js&lt;/h4>
&lt;p>Setup Express and understand the basic structure of the framework as described in Unit 2 of the book (lessons 8 and 9).&lt;/p></description></item><item><title>Sprint 02 - Persistence with Mongo</title><link>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-02-mongo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-02-mongo/</guid><description>&lt;h2 id="sprint-02-persistence-with-mongo">Sprint 02: Persistence with Mongo&lt;/h2>
&lt;p>Based on Unit 3, &amp;ldquo;Connecting to a Database&amp;rdquo;, you&amp;rsquo;ll implement persistence with Mongo DB and Mongoose.
The functionality implemented will be showing listings and single items of one resource, as well as creating new records (no editing yet).&lt;/p>
&lt;p>As usual, select a story or two you will implement using the new technological features.
You will create a full CRUD (Create/read/update/delete) in later Sprints.&lt;/p>
&lt;h3 id="example-application">Example Application&lt;/h3>
&lt;p>With this sprint, you can pretty much follow the book. See my doc in the readme for the example app:&lt;/p></description></item><item><title>Sprint 03 - Adding Views to the Express App</title><link>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-03-express-views/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-03-express-views/</guid><description>&lt;h4 id="agile-topic-scrum-master">Agile Topic: Scrum Master&lt;/h4>
&lt;p>Name a Scrum Master from your team and have this person coordinate team meetings, such as the daily scrum.&lt;/p>
&lt;h4 id="development-topic-adding-views-to-the-express-app">Development Topic: Adding Views to the Express App&lt;/h4>
&lt;p>Add views and error handling to your application using Express.js (lessons 10, 11 and 12 of unit 2). If you&amp;rsquo;ve already
created views in Sprint 01, you can migrate them to the Express app. Chose one or more stories where you can make use of
the two new technological topics you&amp;rsquo;ve learned in Unit 2: View Templates and Dynamic Content.&lt;/p></description></item><item><title>Sprint 03 - Adding Views to the Express App</title><link>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-03-express-views/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-03-express-views/</guid><description>&lt;h4 id="agile-topic-scrum-master">Agile Topic: Scrum Master&lt;/h4>
&lt;p>Name a Scrum Master from your team and have this person coordinate team meetings, such as the daily scrum.&lt;/p>
&lt;h4 id="development-topic-adding-views-to-the-express-app">Development Topic: Adding Views to the Express App&lt;/h4>
&lt;p>Add views and error handling to your application using Express.js (lessons 10, 11 and 12 of unit 2). If you&amp;rsquo;ve already
created views in Sprint 01, you can migrate them to the Express app. Chose one or more stories where you can make use of
the two new technological topics you&amp;rsquo;ve learned in Unit 2: View Templates and Dynamic Content.&lt;/p></description></item><item><title>Sprint 03 - Deployment</title><link>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-03-deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-03-deployment/</guid><description>&lt;p>As this Sprint is about creating tests and setting up an CI/CD pipeline.
you will not implement any new functionality in this sprint.&lt;/p>
&lt;p>It&amp;rsquo;s arguable if this weeks work should be called a sprint, as you will not implement any new
features that are of interest to users or customers.&lt;/p>
&lt;p>Nonetheless, automatic testing and continuously deploying your app such that the users
and customers will be able to see and test the deliverables is a crucial part of agile development.&lt;/p></description></item><item><title>Sprint 03 - Persistence with Mongo</title><link>https://bkleinen.github.io/classes/ss2020/wtat1/topics/topic-05-mongo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/wtat1/topics/topic-05-mongo/</guid><description>&lt;h2 id="sprint-03-persistence-with-mongo">Sprint 03: Persistence with Mongo&lt;/h2>
&lt;p>Based on Unit 3, &amp;ldquo;Connecting to a Database&amp;rdquo;, you&amp;rsquo;ll implement persistence with Mongo DB and Mongoose.
The functionality implemented will be showing listings and single items of one resource, as well as creating new records (no editing yet).&lt;/p>
&lt;p>As usual, select a story or two you will implement using the new technological features.
You will create a full CRUD (Create/read/update/delete) in later Sprints.&lt;/p>
&lt;h3 id="example-application">Example Application&lt;/h3>
&lt;p>With this sprint, you can pretty much follow the book. See my doc in the readme for the example app:&lt;/p></description></item><item><title>Sprint 04 - Adding Mongo Support</title><link>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-04-mongo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-04-mongo/</guid><description>&lt;h4 id="agile-topic-daily-scrum">Agile Topic: Daily Scrum&lt;/h4>
&lt;p>As one of the most frequent meetings, get into the habit of holding a daily stand up meeting to exchange with other team members.&lt;/p>
&lt;h4 id="development-topic-adding-mongo-support">Development Topic: Adding Mongo Support&lt;/h4>
&lt;p>Based on Unit 3, &amp;ldquo;Connecting to a Database&amp;rdquo;, you&amp;rsquo;ll implement persistence with Mongo DB and Mongoose (lessons 13-14). The functionality
implemented will be showing listings and single items of one resource, as well as creating new records (no editing yet).&lt;/p></description></item><item><title>Sprint 04 - Adding Mongo Support</title><link>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-04-mongo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-04-mongo/</guid><description>&lt;h4 id="agile-topic-daily-scrum">Agile Topic: Daily Scrum&lt;/h4>
&lt;p>As one of the most frequent meetings, get into the habit of holding a daily stand up meeting to exchange with other team members.&lt;/p>
&lt;h4 id="development-topic-adding-mongo-support">Development Topic: Adding Mongo Support&lt;/h4>
&lt;p>Based on Unit 3, &amp;ldquo;Connecting to a Database&amp;rdquo;, you&amp;rsquo;ll implement persistence with Mongo DB and Mongoose (lessons 13-14). The functionality
implemented will be showing listings and single items of one resource, as well as creating new records (no editing yet).&lt;/p></description></item><item><title>Sprint 04 - Deployment</title><link>https://bkleinen.github.io/classes/ss2020/wtat1/topics/topic-06-deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/wtat1/topics/topic-06-deployment/</guid><description>&lt;p>As this Sprint is about preparing your app for deployment and deploying it on Heroku,
you will not implement any new functionality in this sprint.&lt;/p>
&lt;p>It&amp;rsquo;s arguable if this weeks work should be called a sprint, as you will not implement any new
features that are of interest to users or customers.&lt;/p>
&lt;p>Nonetheless, automatic testing and continuously deploying your app such that the users
and customers will be able to see and test the deliverables is a crucial part of agile development.&lt;/p></description></item><item><title>Sprint 04 &amp; 05 - CRUD Part 1 and 2</title><link>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-04-05-crud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-04-05-crud/</guid><description>&lt;p>Unit 4 - Building a User Model - is a rather long unit, thus we will take two
sprints to work through it. The technical topics are:&lt;/p>
&lt;ul>
&lt;li>CRUD - Create, Read, Update, Delete actions on Models in the Rest architectural style&lt;/li>
&lt;li>Validations&lt;/li>
&lt;li>Model Associations&lt;/li>
&lt;/ul>
&lt;p>It discusses CRUD by creating CRUD functionality via model, views, controller and routes for
the User model.&lt;/p>
&lt;p>You will need a user model for authentication in addition to your individual models.
You can just copy and adapt the model from the example application,
and adapt it such that it fits to your application domain.&lt;/p></description></item><item><title>Sprint 05 - CRUD Part 1 and 2 (2 weeks)</title><link>https://bkleinen.github.io/classes/ss2020/wtat1/topics/topic-07-crud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/wtat1/topics/topic-07-crud/</guid><description>&lt;p>Unit 4 - Building a User Model - is a rather long unit, thus we will take two
weeks to work through it. The technical topics are:&lt;/p>
&lt;ul>
&lt;li>CRUD - Create, Read, Update, Delete actions on Models in the Rest architectural style&lt;/li>
&lt;li>Validations&lt;/li>
&lt;li>Model Associations&lt;/li>
&lt;/ul>
&lt;p>It discusses CRUD by creating CRUD functionality via model, views, controller and routes for
the User model.&lt;/p>
&lt;p>You will need a user model for authentication in addition to your individual models.
You can just copy and adapt the model from the example application,
and adapt it such that it fits to your application domain.&lt;/p></description></item><item><title>Sprint 05 - Understanding Promises</title><link>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-05-promises/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-05-promises/</guid><description>&lt;h4 id="agile-topic-sprint-backlog">Agile Topic: Sprint Backlog&lt;/h4>
&lt;p>Select items from the product backlog for the sprint backlog. Define a sprint goal by focussing on &amp;ldquo;what&amp;rdquo; should be delivered.&lt;/p>
&lt;h4 id="development-topic-understanding-promises">Development Topic: Understanding Promises&lt;/h4>
&lt;p>Based on lessons 15-16 of Unit 3, add controllers and promises to coordinate your interaction with the database.&lt;/p>
&lt;h5 id="topic-of-the-week">Topic of the Week&lt;/h5>
&lt;p>Promises&lt;/p>
&lt;ul>
&lt;li>Add controllers and promises to your application to coordinate your interaction with the database.&lt;/li>
&lt;li>Work with git. Create a branch for each story and merge it into master with a merge commit like &amp;ldquo;Story_001 Overview of Study Program&amp;rdquo;
&lt;ul>
&lt;li>You may also clean your git history to just have one commit per story.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Tag the version where the sprint was completed with &amp;ldquo;Sprint_05&amp;rdquo;&lt;/li>
&lt;li>Include the repo url in your status report (you can use any service, e.g. &lt;a href="https://gitlab.rz.htw-berlin.de/">https://gitlab.rz.htw-berlin.de/&lt;/a>)
&lt;ul>
&lt;li>Please use a public repository or grant read access to the lecturer&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="status-report">Status Report&lt;/h4>
&lt;p>Write up a brief status report containing:&lt;/p></description></item><item><title>Sprint 05 - Understanding Promises</title><link>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-05-promises/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-05-promises/</guid><description>&lt;h4 id="agile-topic-sprint-backlog">Agile Topic: Sprint Backlog&lt;/h4>
&lt;p>Select items from the product backlog for the sprint backlog. Define a sprint goal by focussing on &amp;ldquo;what&amp;rdquo; should be delivered.&lt;/p>
&lt;h4 id="development-topic-understanding-promises">Development Topic: Understanding Promises&lt;/h4>
&lt;p>Based on lessons 15-16 of Unit 3, add controllers and promises to coordinate your interaction with the database.&lt;/p>
&lt;h5 id="topic-of-the-week">Topic of the Week&lt;/h5>
&lt;p>Promises&lt;/p>
&lt;ul>
&lt;li>Add controllers and promises to your application to coordinate your interaction with the database.&lt;/li>
&lt;li>Work with git. Create a branch for each story and merge it into master with a merge commit like &amp;ldquo;Story_001 Overview of Study Program&amp;rdquo;
&lt;ul>
&lt;li>You may also clean your git history to just have one commit per story.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Tag the version where the sprint was completed with &amp;ldquo;Sprint_05&amp;rdquo;&lt;/li>
&lt;li>Include the repo url in your status report (you can use any service, e.g. &lt;a href="https://gitlab.rz.htw-berlin.de/">https://gitlab.rz.htw-berlin.de/&lt;/a>)
&lt;ul>
&lt;li>Please use a public repository or grant read access to the lecturer&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="status-report">Status Report&lt;/h4>
&lt;p>Write up a brief status report containing:&lt;/p></description></item><item><title>Sprint 06 - Supporting Complex Models</title><link>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-06-complex-models/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-06-complex-models/</guid><description>&lt;h4 id="agile-topic-sprint-planning">Agile Topic: Sprint Planning&lt;/h4>
&lt;p>Focus your sprint planning meeting on &amp;ldquo;how&amp;rdquo; to deliver the sprint backlog items, possibly adjusting a previously selected
sprint goal as necessary.&lt;/p>
&lt;h4 id="development-topic-supporting-complex-models">Development Topic: Supporting Complex Models&lt;/h4>
&lt;p>Lessons 17 and 18 of Unit 4 cover model associations and validations using the example of a user model.&lt;/p>
&lt;p>You will need such a model for authentication in addition to your domain models (i.e. models relevant for
implemeting your business logic). You can just copy and adapt the user model from the example application,
to ensure that it fits to your application domain.&lt;/p></description></item><item><title>Sprint 06 - Supporting Complex Models</title><link>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-06-complex-models/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-06-complex-models/</guid><description>&lt;h4 id="agile-topic-sprint-planning">Agile Topic: Sprint Planning&lt;/h4>
&lt;p>Focus your sprint planning meeting on &amp;ldquo;how&amp;rdquo; to deliver the sprint backlog items, possibly adjusting a previously selected
sprint goal as necessary.&lt;/p>
&lt;h4 id="development-topic-supporting-complex-models">Development Topic: Supporting Complex Models&lt;/h4>
&lt;p>Lessons 17 and 18 of Unit 4 cover model associations and validations using the example of a user model.&lt;/p>
&lt;p>You will need such a model for authentication in addition to your domain models (i.e. models relevant for
implemeting your business logic). You can just copy and adapt the user model from the example application,
to ensure that it fits to your application domain.&lt;/p></description></item><item><title>Sprint 06 User Authentication</title><link>https://bkleinen.github.io/classes/ss2020/wtat1/topics/topic-08-authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/wtat1/topics/topic-08-authentication/</guid><description>&lt;h1 id="sprint-06-user-authentication">Sprint 06 User Authentication&lt;/h1>
&lt;p>Build in a User Authentication and some extras according to&lt;br>
Unit 5 - &amp;ldquo;User Authentication&amp;rdquo;.&lt;/p>
&lt;p>Sprint 06 in the Module-Handbook example application:&lt;br>
&lt;a href="https://github.com/htw-imi-wtat1/module-handbook/releases/tag/Sprint_06">https://github.com/htw-imi-wtat1/module-handbook/releases/tag/Sprint_06&lt;/a>&lt;/p>
&lt;p>Note that this unit only covers authentication - establishing the identity of
the user - but no authorisation. Restricting access to parts of the application
will be handled during the next sprint.&lt;/p>
&lt;h1 id="sprint-06-extras">Sprint 06 Extras&lt;/h1>
&lt;p>To add some more protection against attacs, add helmet.js.&lt;/p></description></item><item><title>Sprint 06 User Authentication</title><link>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-06-authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-06-authentication/</guid><description>&lt;h1 id="sprint-06-user-authentication">Sprint 06 User Authentication&lt;/h1>
&lt;p>Build in a User Authentication and some extras according to&lt;br>
Unit 5 - &amp;ldquo;User Authentication&amp;rdquo;.&lt;/p>
&lt;p>Sprint 06 in the Module-Handbook example application:&lt;br>
&lt;a href="https://github.com/htw-imi-wtat1/module-handbook/releases/tag/Sprint_06">https://github.com/htw-imi-wtat1/module-handbook/releases/tag/Sprint_06&lt;/a>&lt;/p>
&lt;p>Note that this unit only covers authentication - establishing the identity of
the user - but no authorisation. Restricting access to parts of the application
will be handled during the next sprint.&lt;/p>
&lt;h1 id="sprint-06-extras">Sprint 06 Extras&lt;/h1>
&lt;p>To add some more protection against attacs, add helmet.js.&lt;/p></description></item><item><title>Sprint 07 - Adding CRUD Support</title><link>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-07-crud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-07-crud/</guid><description>&lt;h4 id="agile-topic-estimation">Agile Topic: Estimation&lt;/h4>
&lt;p>Estimate the effort for individal backlog items by means of Planning Poker. Use the Fibonacci numbers
0, 1, 2, 3, 5, 8, 13, and 21 for scoring.&lt;/p>
&lt;h4 id="development-topic-adding-crud-support">Development Topic: Adding CRUD Support&lt;/h4>
&lt;p>Lessons 19-21 of Unit 4 describe the necessary steps for adding CRUD (Create - Read - Update - Delete) support to a model.
It describes how to implement CRUD functionality across models, views, controllers as well as by defining the appropriate routes.&lt;/p></description></item><item><title>Sprint 07 - Adding CRUD Support</title><link>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-07-crud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-07-crud/</guid><description>&lt;h4 id="agile-topic-estimation">Agile Topic: Estimation&lt;/h4>
&lt;p>Estimate the effort for individal backlog items by means of Planning Poker. Use the Fibonacci numbers
0, 1, 2, 3, 5, 8, 13, and 21 for scoring.&lt;/p>
&lt;h4 id="development-topic-adding-crud-support">Development Topic: Adding CRUD Support&lt;/h4>
&lt;p>Lessons 19-21 of Unit 4 describe the necessary steps for adding CRUD (Create - Read - Update - Delete) support to a model.
It describes how to implement CRUD functionality across models, views, controllers as well as by defining the appropriate routes.&lt;/p></description></item><item><title>Sprint 07 API and JWT</title><link>https://bkleinen.github.io/classes/ss2020/wtat1/topics/topic-09-api-jwt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/wtat1/topics/topic-09-api-jwt/</guid><description>&lt;h1 id="sprint-07-api-and-jwt">Sprint 07 API and JWT&lt;/h1>
&lt;p>Pick or create user stories that make use of an api delivering JSON data.
Build in one form of api authentication/authorisation (API Token or JWT)
Unit 6 - &amp;ldquo;Building an API&amp;rdquo;.&lt;/p>
&lt;p>Sprint 07 in the Module-Handbook example application:&lt;br>
&lt;a href="https://github.com/htw-imi-wtat1/module-handbook/releases/tag/Sprint_07">https://github.com/htw-imi-wtat1/module-handbook/releases/tag/Sprint_07&lt;/a>&lt;/p>
&lt;h1 id="sprint-07---testing">Sprint 07 - Testing&lt;/h1>
&lt;ul>
&lt;li>Testing APIs with Jest and Superagent is straightforward.&lt;/li>
&lt;li>Testing Routes that need authentication&lt;/li>
&lt;li>See the documentation in the Example app: &lt;a href="https://github.com/htw-imi-wtat1/module-handbook/blob/master/doc/authentication_authorization.md">https://github.com/htw-imi-wtat1/module-handbook/blob/master/doc/authentication_authorization.md&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Sprint 07 API and JWT</title><link>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-07-api-jwt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-07-api-jwt/</guid><description>&lt;h1 id="sprint-07-api-and-jwt">Sprint 07 API and JWT&lt;/h1>
&lt;p>Pick or create user stories that make use of an api delivering JSON data.
Build in one form of api authentication/authorisation (API Token or JWT)
Unit 6 - &amp;ldquo;Building an API&amp;rdquo;.&lt;/p>
&lt;p>Sprint 07 in the Module-Handbook example application:&lt;br>
&lt;a href="https://github.com/htw-imi-wtat1/module-handbook/releases/tag/Sprint_07">https://github.com/htw-imi-wtat1/module-handbook/releases/tag/Sprint_07&lt;/a>&lt;/p>
&lt;h1 id="sprint-07---testing">Sprint 07 - Testing&lt;/h1>
&lt;ul>
&lt;li>Testing APIs with Jest and Superagent is straightforward.&lt;/li>
&lt;li>Testing Routes that need authentication&lt;/li>
&lt;li>See the documentation in the Example app: &lt;a href="https://github.com/htw-imi-wtat1/module-handbook-2021/blob/master/doc/authentication_authorization.md">https://github.com/htw-imi-wtat1/module-handbook/blob/master/doc/authentication_authorization.md&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="backlog-and-report">Backlog and Report&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>make sure to define your stories and connect them to the appropriate technical
topic in the &lt;a href="https://backlog.f4.htw-berlin.de/#/courses/4-web-technology-aktuelle-themen-agile-web-development">Backlog&lt;/a> -&lt;/p></description></item><item><title>Sprint 08 - Adding Login Support</title><link>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-08-login/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-08-login/</guid><description>&lt;h4 id="agile-topic-definition-of-done">Agile Topic: Definition of Done&lt;/h4>
&lt;p>Discuss the &amp;ldquo;Definition of Done&amp;rdquo; for the items in your sprint backlog.&lt;/p>
&lt;h4 id="development-topic-adding-login-support">Development Topic: Adding Login Support&lt;/h4>
&lt;p>Add support for user login, following lessons 22-23 of unit 5 of the book. Note that this unit only covers authentication
but no authorisation. Restricting access to parts of the application will be handled during the next sprint.&lt;/p>
&lt;h5 id="topic-of-the-week">Topic of the Week&lt;/h5>
&lt;p>User login, password hashing:&lt;/p>
&lt;ul>
&lt;li>Add support for user login based on user id and password.&lt;/li>
&lt;li>Work with git. Create a branch for each story and merge it into master with a merge commit like &amp;ldquo;Story_001 Overview of Study Program&amp;rdquo;
&lt;ul>
&lt;li>You may also clean your git history to just have one commit per story.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Tag the version where the sprint was completed with &amp;ldquo;Sprint_08&amp;rdquo;&lt;/li>
&lt;li>Include the repo url in your status report (you can use any service, e.g. &lt;a href="https://gitlab.rz.htw-berlin.de/">https://gitlab.rz.htw-berlin.de/&lt;/a>)
&lt;ul>
&lt;li>Please use a public repository or grant read access to the lecturer&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="status-report">Status Report&lt;/h4>
&lt;p>Write up a brief status report containing:&lt;/p></description></item><item><title>Sprint 08 - Adding Login Support</title><link>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-08-login/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-08-login/</guid><description>&lt;h4 id="agile-topic-definition-of-done">Agile Topic: Definition of Done&lt;/h4>
&lt;p>Discuss the &amp;ldquo;Definition of Done&amp;rdquo; for the items in your sprint backlog.&lt;/p>
&lt;h4 id="development-topic-adding-login-support">Development Topic: Adding Login Support&lt;/h4>
&lt;p>Add support for user login, following lessons 22-23 of unit 5 of the book. Note that this unit only covers authentication
but no authorisation. Restricting access to parts of the application will be handled during the next sprint.&lt;/p>
&lt;h5 id="topic-of-the-week">Topic of the Week&lt;/h5>
&lt;p>User login, password hashing:&lt;/p>
&lt;ul>
&lt;li>Add support for user login based on user id and password.&lt;/li>
&lt;li>Work with git. Create a branch for each story and merge it into master with a merge commit like &amp;ldquo;Story_001 Overview of Study Program&amp;rdquo;
&lt;ul>
&lt;li>You may also clean your git history to just have one commit per story.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Tag the version where the sprint was completed with &amp;ldquo;Sprint_08&amp;rdquo;&lt;/li>
&lt;li>Include the repo url in your status report (you can use any service, e.g. &lt;a href="https://gitlab.rz.htw-berlin.de/">https://gitlab.rz.htw-berlin.de/&lt;/a>)
&lt;ul>
&lt;li>Please use a public repository or grant read access to the lecturer&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="status-report">Status Report&lt;/h4>
&lt;p>Write up a brief status report containing:&lt;/p></description></item><item><title>Sprint 08 - Vue 1 - Tutorial</title><link>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-08-vue1-tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-08-vue1-tutorial/</guid><description>&lt;h2 id="sprint-08-work-through-the-vue-tutorial">Sprint 08: Work through the Vue Tutorial&lt;/h2>
&lt;p>Work through the Vue Tutorial, at least the Introduction and Components In-Depth: &lt;a href="https://v3.vuejs.org/guide/introduction.html">https://v3.vuejs.org/guide/introduction.html&lt;/a> (make sure you hit vue 3!)&lt;/p>
&lt;p>Play around with component that might be useful/used within your app - this is
just a preparation sprint, you won&amp;rsquo;t be implementing any new functionality for your app.&lt;/p>
&lt;h2 id="backlog-and-report">Backlog and Report&lt;/h2>
&lt;ul>
&lt;li>write a summary of what worked, what didn&amp;rsquo;t work and what you&amp;rsquo;ve learned as your report and upload it in the moodle area.&lt;/li>
&lt;li>include a personal reflection about the sprint and what you&amp;rsquo;ve learned from each team member in the report.&lt;/li>
&lt;/ul></description></item><item><title>Sprint 08 - Vue 3 - Implementation</title><link>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-10-vue3-implementation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-10-vue3-implementation/</guid><description>&lt;h2 id="finally-implement-something-with-vue">Finally: Implement something with Vue.&lt;/h2>
&lt;p>Implement your (possibly revised) concept you&amp;rsquo;ve created during the last sprint.&lt;/p>
&lt;h2 id="backlog-and-report">Backlog and Report&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>make sure to define your stories and connect them to the appropriate technical
topic in the &lt;a href="https://backlog.f4.htw-berlin.de/#/courses/4-web-technology-aktuelle-themen-agile-web-development">Backlog&lt;/a> -&lt;/p>
&lt;/li>
&lt;li>
&lt;p>write a summary of what worked, what didn&amp;rsquo;t work and what you&amp;rsquo;ve learned as your report and upload it in the moodle area.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>include a personal reflection about the sprint and what you&amp;rsquo;ve learned from each team member in the report.&lt;/p></description></item><item><title>Sprint 09 - Adding Support for Passport.js</title><link>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-09-passport/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-09-passport/</guid><description>&lt;h4 id="agile-topic-sprint-review">Agile Topic: Sprint Review&lt;/h4>
&lt;p>Hold a sprint review meeting for the current sprint. What were the biggest technical obstacles that prevented you to reach the sprint goal?
What would need to be adjusted to avoid these technical problems in the future?&lt;/p>
&lt;h4 id="development-topic-adding-support-for-passportjs">Development Topic: Adding Support for Passport.js&lt;/h4>
&lt;p>Lessons 24 and 25 describe the use of the Node module Passport.js. Follow along by implementing a user story from your backlog that relies
on user authentication, either by means of the &amp;ldquo;local&amp;rdquo; strategy or by means of an external authentication provider (not covered in the book).&lt;/p></description></item><item><title>Sprint 09 - Adding Support for Passport.js</title><link>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-09-passport/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-09-passport/</guid><description>&lt;h4 id="agile-topic-sprint-review">Agile Topic: Sprint Review&lt;/h4>
&lt;p>Hold a sprint review meeting for the current sprint. What were the biggest technical obstacles that prevented you to reach the sprint goal?
What would need to be adjusted to avoid these technical problems in the future?&lt;/p>
&lt;h4 id="development-topic-adding-support-for-passportjs">Development Topic: Adding Support for Passport.js&lt;/h4>
&lt;p>Lessons 24 and 25 describe the use of the Node module Passport.js. Follow along by implementing a user story from your backlog that relies
on user authentication, either by means of the &amp;ldquo;local&amp;rdquo; strategy or by means of an external authentication provider (not covered in the book).&lt;/p></description></item><item><title>Sprint 09 - Vue 2 - Concept</title><link>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-09-vue2-concept/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-09-vue2-concept/</guid><description>&lt;h2 id="sprint-09-more-vue-and-concept-for-using-it-in-your-app">Sprint 09: More Vue and Concept for using it in your app&lt;/h2>
&lt;p>Continue learning Vue by working through the tutorial. You won&amp;rsquo;t need
everything, skim through parts, but make sure to &lt;a href="https://v3.vuejs.org/guide/testing.html">set up some tests&lt;/a>.&lt;/p>
&lt;p>Think about how Vue can be used within your app and write down a concept
for the components you will develop. You&amp;rsquo;ll add real time communication
during the last sprint - maybe there&amp;rsquo;s an useful application for that within your app.&lt;/p></description></item><item><title>Sprint 09-12 - Real Time Communication and React</title><link>https://bkleinen.github.io/classes/ss2020/wtat1/topics/sprint-09-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/wtat1/topics/sprint-09-12/</guid><description>&lt;h2 id="sprint-09-12-real-time-communication-and-react">Sprint 09-12: Real Time Communication and React&lt;/h2>
&lt;p>You should plan the remaining 4 sprints together, as you may want to
postpone Sprint 09 to combine it with a React frontend.&lt;/p>
&lt;p>Thus, the following order is tentative:&lt;/p>
&lt;ul>
&lt;li>Sprint 09: Real-Time-Communication (Unit 7, &amp;ldquo;Adding Chat Functionality&amp;rdquo;)&lt;/li>
&lt;li>Sprint 10: React Tutorial (&lt;a href="https://reactjs.org/docs/hello-world.html">Main Concepts in the React Doc&lt;/a>)&lt;/li>
&lt;li>Sprint 11-12: Implement Stories with React&lt;/li>
&lt;/ul>
&lt;p>Please plan the following sprints using the backlog planning tool at:&lt;/p></description></item><item><title>Sprint 09-12 - Real Time Communication and React</title><link>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-09-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-09-12/</guid><description>&lt;h2 id="sprint-09-12-real-time-communication-and-react">Sprint 09-12: Real Time Communication and React&lt;/h2>
&lt;p>You should plan the remaining 4 sprints together, as you may want to
postpone Sprint 09 to combine it with a React frontend.&lt;/p>
&lt;p>Thus, the following order is tentative:&lt;/p>
&lt;ul>
&lt;li>Sprint 09: Real-Time-Communication (Unit 7, &amp;ldquo;Adding Chat Functionality&amp;rdquo;)&lt;/li>
&lt;li>Sprint 10: React Tutorial (&lt;a href="https://reactjs.org/docs/hello-world.html">Main Concepts in the React Doc&lt;/a>)&lt;/li>
&lt;li>Sprint 11-12: Implement Stories with React&lt;/li>
&lt;/ul>
&lt;p>Please plan the following sprints using the backlog planning tool at:&lt;/p></description></item><item><title>Sprint 10 - Building a REST API</title><link>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-10-rest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-10-rest/</guid><description>&lt;h4 id="agile-topic-sprint-retrospective">Agile Topic: Sprint Retrospective&lt;/h4>
&lt;p>Hold a sprint retrospective meeting for the current sprint. Discuss process and external issues that prevented you from working towards the sprint goal,
e.g. capacity limitations. Agree on steps to improve the situation for upcoming sprints.&lt;/p>
&lt;h4 id="development-topic-building-a-rest-api">Development Topic: Building a REST API&lt;/h4>
&lt;p>Lessons 26 and 27 introduce RESTful APIs and describe the steps to add support for such APIs to your application. Choose a user story that benefits
from a headless REST API and implement it in your application context.&lt;/p></description></item><item><title>Sprint 10 - Building a REST API</title><link>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-10-rest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-10-rest/</guid><description>&lt;h4 id="agile-topic-sprint-retrospective">Agile Topic: Sprint Retrospective&lt;/h4>
&lt;p>Hold a sprint retrospective meeting for the current sprint. Discuss process and external issues that prevented you from working towards the sprint goal,
e.g. capacity limitations. Agree on steps to improve the situation for upcoming sprints.&lt;/p>
&lt;h4 id="development-topic-building-a-rest-api">Development Topic: Building a REST API&lt;/h4>
&lt;p>Lessons 26 and 27 introduce RESTful APIs and describe the steps to add support for such APIs to your application. Choose a user story that benefits
from a headless REST API and implement it in your application context.&lt;/p></description></item><item><title>Sprint 11 - Real Time Communication</title><link>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-11-realtime/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-11-realtime/</guid><description>&lt;h2 id="sprint-11-real-time-communication--with-socketio">Sprint 11: Real-Time-Communication with socket.io&lt;/h2>
&lt;p>Find something in your app that may benefit from real-time communication,
as described in Unit 7 - Real-Time Communication
possibly combined with vue, and implement it.&lt;/p>
&lt;p>Alternatively, you may decide on another JavaScript Library that would be
useful within your app and implement some functionality using that library.&lt;/p>
&lt;h2 id="backlog-and-report">Backlog and Report&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>make sure to define your stories and connect them to the appropriate technical
topic in the &lt;a href="https://backlog.f4.htw-berlin.de/#/courses/4-web-technology-aktuelle-themen-agile-web-development">Backlog&lt;/a> -&lt;/p></description></item><item><title>Sprint 11 - Securing a REST API</title><link>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-11-securing-rest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-11-securing-rest/</guid><description>&lt;h4 id="agile-topic">Agile Topic&lt;/h4>
&lt;p>No specific agile topic to be covered in this sprint. Continue to follow the Scrum methodology in your development work, correcting any issues that
you may encounter.&lt;/p>
&lt;h4 id="development-topic-securing-a-rest-api">Development Topic: Securing a REST API&lt;/h4>
&lt;p>Lessons 28 and 29 describe mechanisms to secure a RESTful API. Choose a user story that benefits from exposing a secure REST API and implement
it in your application context.&lt;/p>
&lt;h5 id="topic-of-the-week">Topic of the Week&lt;/h5>
&lt;p>JWT:&lt;/p></description></item><item><title>Sprint 11 - Securing a REST API</title><link>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-11-securing-rest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-11-securing-rest/</guid><description>&lt;h4 id="agile-topic">Agile Topic&lt;/h4>
&lt;p>No specific agile topic to be covered in this sprint. Continue to follow the Scrum methodology in your development work, correcting any issues that
you may encounter.&lt;/p>
&lt;h4 id="development-topic-securing-a-rest-api">Development Topic: Securing a REST API&lt;/h4>
&lt;p>Lessons 28 and 29 describe mechanisms to secure a RESTful API. Choose a user story that benefits from exposing a secure REST API and implement
it in your application context.&lt;/p>
&lt;h5 id="topic-of-the-week">Topic of the Week&lt;/h5>
&lt;p>JWT:&lt;/p></description></item><item><title>Sprint 12 - Adding Support for Socket.io</title><link>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-12-socket/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-12-socket/</guid><description>&lt;h4 id="agile-topic">Agile Topic&lt;/h4>
&lt;p>No specific agile topic to be covered in this sprint. Continue to follow the Scrum methodology in your development work, correcting any issues that
you may encounter during the regular Scrum events.&lt;/p>
&lt;h4 id="development-topic-adding-support-for-socketio">Development Topic: Adding Support for Socket.io&lt;/h4>
&lt;p>Find something in your app that may benefit from real-time communication. Add support for this fuctionality following the instructions given in
lessons 30 - 33 of unit 7.&lt;/p>
&lt;h5 id="topic-of-the-week">Topic of the Week&lt;/h5>
&lt;p>Socket.io:&lt;/p></description></item><item><title>Sprint 12 - Adding Support for Socket.io</title><link>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-12-socket/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/wtat1/topics/sprint-12-socket/</guid><description>&lt;h4 id="agile-topic">Agile Topic&lt;/h4>
&lt;p>No specific agile topic to be covered in this sprint. Continue to follow the Scrum methodology in your development work, correcting any issues that
you may encounter during the regular Scrum events.&lt;/p>
&lt;h4 id="development-topic-adding-support-for-socketio">Development Topic: Adding Support for Socket.io&lt;/h4>
&lt;p>Find something in your app that may benefit from real-time communication. Add support for this fuctionality following the instructions given in
lessons 30 - 33 of unit 7.&lt;/p>
&lt;h5 id="topic-of-the-week">Topic of the Week&lt;/h5>
&lt;p>Socket.io:&lt;/p></description></item><item><title>Sprint 13 - Deployment to Heroku</title><link>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-13-heroku/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/wtat1/topics/sprint-13-heroku/</guid><description>&lt;h4 id="agile-topic">Agile Topic&lt;/h4>
&lt;p>No specific agile topic to be covered in this sprint. Continue to follow the Scrum methodology in your development work, correcting any issues that
you may encounter during the regular Scrum events.&lt;/p>
&lt;h4 id="development-topic-deployment-to-heroku">Development Topic: Deployment to Heroku&lt;/h4>
&lt;p>Deploy your app to Heroku along the lines of the process described in unit 8 (lessons 34 - 37). A user story should be used to guide deployment decisions.
It&amp;rsquo;s arguable if this week&amp;rsquo;s work should be called a sprint, as you will not implement any new features that are of interest to users or customers.
Nonetheless, automatic testing and continuously deploying your app such that the users and customers will be able to see and test the deliverables is
a crucial part of agile development.&lt;/p></description></item><item><title>Startup - Project Idea</title><link>https://bkleinen.github.io/classes/ss2020/wtat1/topics/topic-00-project-ideas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/wtat1/topics/topic-00-project-ideas/</guid><description>&lt;h2 id="project-ideas">Project Ideas&lt;/h2>
&lt;p>Collect and Discuss your project ideas in the Forum &amp;ldquo;Project Ideas&amp;rdquo; in Moodle.&lt;/p>
&lt;p>You will be working on one project throughout the term in a small, 3 person team.&lt;/p>
&lt;p>You can submit and discuss any ideas for now.&lt;/p>
&lt;p>You will write Project Proposals as Assignment for Week 02,
and the teams will be formed during class in week 02.&lt;/p></description></item><item><title>Startup - Project Idea</title><link>https://bkleinen.github.io/classes/ss2021/wtat1/topics/topic-00-project-ideas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/wtat1/topics/topic-00-project-ideas/</guid><description>&lt;h2 id="project-ideas">Project Ideas&lt;/h2>
&lt;p>Collect and Discuss your project ideas in the Forum &amp;ldquo;Project Ideas&amp;rdquo; in Moodle.&lt;/p>
&lt;p>You will be working on one project throughout the term in a small, 3 person team.&lt;/p>
&lt;p>You can submit and discuss any ideas for now.&lt;/p>
&lt;p>You will write Project Proposals as Assignment for week 02,
and the teams will be formed during class in week 02.&lt;/p></description></item><item><title>Tentative Schedule</title><link>https://bkleinen.github.io/classes/ss2014/info3/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2014/info3/schedule/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Tuesday&lt;/th>
 &lt;th style="text-align: left">Friday&lt;/th>
 &lt;th style="text-align: left">Lecture Topic&lt;/th>
 &lt;th style="text-align: left">Lab&lt;/th>
 &lt;th style="text-align: left">Group&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">01/04/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">No Lecture (Hochschultag)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">04/04/2014&lt;/td>
 &lt;td style="text-align: left">Intro to Info3&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">04/08/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Software Testing&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">1. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">04/11/2014&lt;/td>
 &lt;td style="text-align: left">Software Testing &amp;amp; Software Configuration Management&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">04/15/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Software Configuration Management&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">2. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">04/18/2014&lt;/td>
 &lt;td style="text-align: left">No Lecture (Karfreitag)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">04/22/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Software Engineering and Software Development Processes&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">1. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">04/25/2014&lt;/td>
 &lt;td style="text-align: left">Software Development Processes,Requirements Engineering&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">29/04/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Requirements Engineering, System Modeling and Architectural Design&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">2. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">05/02/2014&lt;/td>
 &lt;td style="text-align: left">Agile Manifesto, Scrum (Scrum Ceremonies and Sprints)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">05/06/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Software Design Patterns&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">1. GruppeSoftware Design Patterns&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">05/09/2014&lt;/td>
 &lt;td style="text-align: left">Software Design Patterns&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">05/13/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Working with Legacy Code&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">2. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">05/16/2014&lt;/td>
 &lt;td style="text-align: left">Clean Code&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">05/20/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Ruby Intro&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">1. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">05/23/2014&lt;/td>
 &lt;td style="text-align: left">Pair Programming and Code Review&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">05/27/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Object Relations: Composition and Inheritance&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">2. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">05/30/2014&lt;/td>
 &lt;td style="text-align: left">Dependency Management and Working with APIs&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">06/03/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Introduction to Ruby Dynamic Typing, Duck Typing&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">1. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">06/06/2014&lt;/td>
 &lt;td style="text-align: left">Patterns of Enterprise Application Architecture(POEAA)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">06/10/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Introduction to Rails, POEAA Revisited, Model View Controller&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">2. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">06/13/2014&lt;/td>
 &lt;td style="text-align: left">Associations in Rails,&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">06/17/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">SCM, Build Management, Continuous Deployment&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">1. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">06/20/2014&lt;/td>
 &lt;td style="text-align: left">Distributed Systems and SOA&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">06/24/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">fällt aus&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">2. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">06/27/2014&lt;/td>
 &lt;td style="text-align: left">Maven e-learning&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">07/01/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Internationalisierung und Lokalisierung von Software&lt;/td>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">1. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">07/04/2014&lt;/td>
 &lt;td style="text-align: left">Fällt wegen Bombenentschärfung aus - SOLID e-learning&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">07/08/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Probeklausur &amp;amp; Klausurvorbereitung&lt;/td>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">2. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">07/11/2014&lt;/td>
 &lt;td style="text-align: left">SOLID (e-learning!)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">07/15/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Klausur&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">07/18/2014&lt;/td>
 &lt;td style="text-align: left">No Lecture (Prüfungszeit)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">30&lt;/td>
 &lt;td style="text-align: left">07/22/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Klausureinsicht&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">07/25/2014&lt;/td>
 &lt;td style="text-align: left">Showtime&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Tentative Schedule</title><link>https://bkleinen.github.io/classes/ws2014/info3/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/info3/schedule/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Tuesday&lt;/th>
 &lt;th style="text-align: left">Friday&lt;/th>
 &lt;th style="text-align: left">Lecture Topic&lt;/th>
 &lt;th style="text-align: left">Lab&lt;/th>
 &lt;th style="text-align: left">Group&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">-&lt;/td>
 &lt;td style="text-align: left">&amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&amp;mdash;&amp;mdash;-&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&amp;mdash;&amp;mdash;-&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Part 1: Intro, Tools &amp;amp; Ruby&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">09/10/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Intro to Info3&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">10/10/2014&lt;/td>
 &lt;td style="text-align: left">Ruby Intro&lt;/td>
 &lt;td style="text-align: left">Installation Party 14:00-15:30 WH-C 537 for both groups!&lt;/td>
 &lt;td style="text-align: left">both&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">16/10/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Source Code Management and Continuous Integration&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">17/10/2014&lt;/td>
 &lt;td style="text-align: left">More Ruby, Pair Programming and Code Review&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-01-startup">1 - Lab Startup and Ruby Finger Exercises&lt;/a>&lt;/td>
 &lt;td style="text-align: left">1. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">-&lt;/td>
 &lt;td style="text-align: left">&amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&amp;mdash;&amp;mdash;-&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&amp;mdash;&amp;mdash;-&lt;/td>
 &lt;td style="text-align: left">&lt;strong>Part 2: Software Engineering, Processes and Software Design&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">23/10/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Practical Git&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">24/10/2014&lt;/td>
 &lt;td style="text-align: left">Software Engineering and Software Development Processes&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-01-startup">1 - Lab Startup and Ruby Finger Exercises&lt;/a>&lt;/td>
 &lt;td style="text-align: left">2. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">30/10/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Agile Manifesto, Scrum (Scrum Ceremonies and Sprints)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">31/10/2014&lt;/td>
 &lt;td style="text-align: left">The Rational Unified Process, Requirements Engineering&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-02-usecases-class">2 - Use Cases and Class Diagrams&lt;/a>&lt;/td>
 &lt;td style="text-align: left">1. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">06/11/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">System Modelling and Architectural Design&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">07/11/2014&lt;/td>
 &lt;td style="text-align: left">Software Design Patterns&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-02-usecases-class">2 - Use Cases and Class Diagrams&lt;/a>&lt;/td>
 &lt;td style="text-align: left">2. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">13/11/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">e-learning: &lt;a href="../material/refactoring">Refactoring&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">14/11/2014&lt;/td>
 &lt;td style="text-align: left">Application Architectures&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-03-sequence-state">3 - Sequence Diagrams and State Machine Diagrams&lt;/a>&lt;/td>
 &lt;td style="text-align: left">1. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">20/11/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Patterns of Enterprise Application Architecture(POEAA)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">21/11/2014&lt;/td>
 &lt;td style="text-align: left">Distributed Systems and SOA&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-03-sequence-state">3 - Sequence Diagrams and State Machine Diagrams&lt;/a>&lt;/td>
 &lt;td style="text-align: left">2. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">27/11/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Software Testing&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">28/11/2014&lt;/td>
 &lt;td style="text-align: left">Working with Legacy Code&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-04-testing">4 - Testing&lt;/a>&lt;/td>
 &lt;td style="text-align: left">1. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">04/12/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Clean Code&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">05/12/2014&lt;/td>
 &lt;td style="text-align: left">Clean Code&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-04-testing">4 - Testing&lt;/a>&lt;/td>
 &lt;td style="text-align: left">2. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">11/12/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">SOLID Principles, Refactoring to Patterns&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">12/12/2014&lt;/td>
 &lt;td style="text-align: left">OO In Depth 1: Composition and Inheritance&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-05-legacy">5 - Legacy Code - Refactoring to Patterns&lt;/a>&lt;/td>
 &lt;td style="text-align: left">1. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">18/12/2015&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">fällt aus&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">19/12/2014&lt;/td>
 &lt;td style="text-align: left">fällt aus&lt;/td>
 &lt;td style="text-align: left">fällt aus - bitte am 12.12. oder 9.1. in die Übung kommen &lt;a href="../labs/lab-05-legacy">5 - Legacy Code - Refactoring to Patterns&lt;/a>&lt;/td>
 &lt;td style="text-align: left">2. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">08/01/2015&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">OO In Depth 2: Ruby Dynamic Typing, Duck Typing&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">09/01/2015&lt;/td>
 &lt;td style="text-align: left">Rails Dash and Preparation for the Rails Project&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-06-rails-1">6 - Rails First Steps&lt;/a>&lt;/td>
 &lt;td style="text-align: left">1. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">15/01/2015&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Introduction to Rails, POEAA Revisited, Model View Controller&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">16/01/2015&lt;/td>
 &lt;td style="text-align: left">ORM and Associations in Rails&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-06-rails-1">6 - Rails First Steps&lt;/a>&lt;/td>
 &lt;td style="text-align: left">2. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">22/01/2015&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Internationalization and Localization&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">23/01/2015&lt;/td>
 &lt;td style="text-align: left">Dependency Management and Working with APIs&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-07-rails-2">7 - Rails Associations and Internationalization&lt;/a>&lt;/td>
 &lt;td style="text-align: left">1. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">29/01/2015&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Build Management, Continuous Deployment&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">30/01/2015&lt;/td>
 &lt;td style="text-align: left">Klausurvorbereitung&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../labs/lab-07-rails-2">7 - Rails Associations and Internationalization&lt;/a>&lt;/td>
 &lt;td style="text-align: left">2. Gruppe&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">05/02/2015&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">No Lecture (Prüfungszeit)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">06/02/2015&lt;/td>
 &lt;td style="text-align: left">Klausur 14:00 - 17:15 (vor. 2 Gruppen; genaue Zeit wird kurzfristig festgelegt)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">07&lt;/td>
 &lt;td style="text-align: left">12/02/2015&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Klausureinsicht&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">13/02/2015&lt;/td>
 &lt;td style="text-align: left">Showtime ?&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Topic 01 - Project Proposal</title><link>https://bkleinen.github.io/classes/ss2020/wtat1/topics/topic-01-proposal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/wtat1/topics/topic-01-proposal/</guid><description>&lt;h2 id="proposal">Proposal&lt;/h2>
&lt;p>Write down your project Idea as a short proposal. (1-2 Pages). You can use any
kind of format. You can also include sketches how the user interface might look
like.&lt;/p>
&lt;h2 id="scope">Scope&lt;/h2>
&lt;p>Working through different topics of web development with node and react, you
will develop a web application that has&lt;/p>
&lt;ul>
&lt;li>at least one model class that can be created, read, updated and deleted&lt;/li>
&lt;li>a user model&lt;/li>
&lt;li>user authentication&lt;/li>
&lt;li>something with real-time communication (e.g. a chat or notification service)&lt;/li>
&lt;li>and some interactive elements created with Rest&lt;/li>
&lt;/ul>
&lt;p>Thus, try to sketch something that has these elements in it. It&amp;rsquo;s ok if your idea
is more complex - you will not need to implement all aspects that you describe now.&lt;/p></description></item><item><title>Topic 01 - Project Proposal</title><link>https://bkleinen.github.io/classes/ss2021/wtat1/topics/topic-01-proposal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/wtat1/topics/topic-01-proposal/</guid><description>&lt;h2 id="proposal">Proposal&lt;/h2>
&lt;p>Write down your project Idea as a short proposal. (1-2 Pages). You can use any
kind of format. You can also include sketches how the user interface might look
like.&lt;/p>
&lt;h2 id="scope">Scope&lt;/h2>
&lt;p>Working through different topics of web development with node and react, you
will develop a web application that has&lt;/p>
&lt;ul>
&lt;li>at least one model class that can be created, read, updated and deleted&lt;/li>
&lt;li>a user model&lt;/li>
&lt;li>user authentication&lt;/li>
&lt;li>something with real-time communication (e.g. a chat or notification service)&lt;/li>
&lt;li>and some interactive elements created with Rest&lt;/li>
&lt;/ul>
&lt;p>Thus, try to sketch something that has these elements in it. It&amp;rsquo;s ok if your idea
is more complex - you will not need to implement all aspects that you describe now.&lt;/p></description></item><item><title>Topic 02 - Product Backlog</title><link>https://bkleinen.github.io/classes/ss2020/wtat1/topics/topic-02-backlog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/wtat1/topics/topic-02-backlog/</guid><description>&lt;h2 id="backlog">Backlog&lt;/h2>
&lt;p>Write a simple Product Backlog for Your Project.&lt;/p>
&lt;p>Don&amp;rsquo;t worry about writing too many stories, or too complex ones. You don&amp;rsquo;t need
to implement all of them - and it will be easier if you have several to choose from for the
sprints. You order your backlog by business value now; but you will pick stories
that can be implemented with the technologies we learn(ed) during the week
for each sprint. I copy the scope of the projects again such that you get an
idea of what will be implemented:&lt;/p></description></item><item><title>Topic 02 - Product Backlog</title><link>https://bkleinen.github.io/classes/ss2021/wtat1/topics/topic-02-backlog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/wtat1/topics/topic-02-backlog/</guid><description>&lt;h2 id="backlog">Backlog&lt;/h2>
&lt;p>Write a simple Product Backlog for Your Project.&lt;/p>
&lt;p>Don&amp;rsquo;t worry about writing too many stories, or too complex ones. You don&amp;rsquo;t need
to implement all of them - and it will be easier if you have several to choose from for the
sprints. You order your backlog by business value now; but you will pick stories
that can be implemented with the technologies we learn(ed) during the week
for each sprint. I copy the scope of the projects again such that you get an
idea of what will be implemented:&lt;/p></description></item><item><title>Topic 03 - Sprint 01 - First Node App</title><link>https://bkleinen.github.io/classes/ss2021/wtat1/topics/topic-01-first-node-app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/wtat1/topics/topic-01-first-node-app/</guid><description>&lt;h2 id="sprint-01-project-ideas--first-node-app">Sprint 01: Project Ideas &amp;amp; First Node App&lt;/h2>
&lt;p>During the first week, you will work individually. Install Node and create
a first (pure) node app that serves at least one static html file.&lt;/p>
&lt;p>Use the week to think about an app idea that you would like to use during the
term. You can pitch your idea next week in class.&lt;/p>
&lt;p>If you want to, you could use your static html site to show your idea
what the app might look like.&lt;/p></description></item><item><title>Topic 03 - Sprint 01 - Two Static Sites</title><link>https://bkleinen.github.io/classes/ss2020/wtat1/topics/topic-03-first-node-app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/wtat1/topics/topic-03-first-node-app/</guid><description>&lt;h2 id="sprint-01-first-node-app-with-two-static-sites">Sprint 01: First Node App with two static sites&lt;/h2>
&lt;ul>
&lt;li>number the stories in your backlog (see the example below)&lt;/li>
&lt;li>create a static prototype for the most important story or stories in your backlog.&lt;/li>
&lt;li>it should contain at least two different static sites and routes.&lt;/li>
&lt;li>follow the tutorial in unit 01 in the book - create a simple node app without any other framework.&lt;/li>
&lt;li>work with git. create a branch for each story and merge it into master with a merge commit like &amp;ldquo;Story_001 Overview of Study Program&amp;rdquo;&lt;/li>
&lt;li>you may also clean your git history to just have one commit per story.&lt;/li>
&lt;li>tag the version where the sprint was completed with &amp;ldquo;Sprint_01&amp;rdquo;&lt;/li>
&lt;li>include the repo url in your status report (you can use any service, e.g. &lt;a href="https://gitlab.rz.htw-berlin.de/">https://gitlab.rz.htw-berlin.de/&lt;/a>)
&lt;ul>
&lt;li>if you have a private repository, make sure to grant me read access&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="example-module-database">Example: Module Database&lt;/h3>
&lt;pre>&lt;code>Story_042 - As a student or lecturer, I see an overview of the whole study program with all modules including Title, Format and ECTS on the site.
Story_023 - As a student, I can quickly get an overview of the my progress within the study program.
&lt;/code>&lt;/pre>
&lt;h3 id="status-report">Status Report&lt;/h3>
&lt;p>Write up a brief status report containing:&lt;/p></description></item><item><title>Topic 04 - Sprint 02 - First Express App with view templates and dynamic content</title><link>https://bkleinen.github.io/classes/ss2020/wtat1/topics/topic-04-first-express-app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/wtat1/topics/topic-04-first-express-app/</guid><description>&lt;h2 id="sprint-02-first-express-app-with-view-templates-and-dynamic-content">Sprint 02: First Express App with view templates and dynamic content&lt;/h2>
&lt;ul>
&lt;li>number the stories in your backlog (see the example below)&lt;/li>
&lt;li>choose and implement stories according to this weeks topic&lt;/li>
&lt;li>work with git. create a branch for each story and merge it into master with a merge commit like &amp;ldquo;Story_001 Overview of Study Program&amp;rdquo;&lt;/li>
&lt;li>you may also clean your git history to just have one commit per story.&lt;/li>
&lt;li>tag the version where the sprint was completed with &amp;ldquo;Sprint_02&amp;rdquo;&lt;/li>
&lt;li>include the repo url in your status report (you can use any service, e.g. &lt;a href="https://gitlab.rz.htw-berlin.de/">https://gitlab.rz.htw-berlin.de/&lt;/a>)
&lt;ul>
&lt;li>if you have a private repository, make sure to grant me read access&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="step-1-using-express">Step 1: Using Express&lt;/h2>
&lt;p>Create a new application using express, and migrate your existing views to the new express app. This may result in a new repository, but does not have to.
Chose one or more stories where you can make use of the two new technological topics you&amp;rsquo;ve learned in Unit 2: View Templates and Dynamic Content.&lt;/p></description></item><item><title>Topic 04 - Sprint 02 - First Express App with view templates and dynamic content</title><link>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/wtat1/topics/sprint-01/</guid><description>&lt;h2 id="sprint-01-first-express-app-with-view-templates-and-dynamic-content">Sprint 01: First Express App with View Templates and Dynamic Content&lt;/h2>
&lt;p>In the first sprint, you will mainly set up your express application and get
set up with your backlog and project.&lt;/p>
&lt;h2 id="set-up-the-project-and-the-backlog">Set up the project and the backlog&lt;/h2>
&lt;ul>
&lt;li>set up your project and backlog in the &lt;a href="https://backlog.f4.htw-berlin.de/#/courses/4-web-technology-aktuelle-themen-agile-web-development">Topic Driven Backlog Tool&lt;/a>.&lt;/li>
&lt;li>choose and implement stories according to this weeks topic&lt;/li>
&lt;li>work with git. create a branch for each story and merge it into master with a merge commit like &amp;ldquo;Story_001 Overview of Study Program&amp;rdquo;&lt;/li>
&lt;li>you may also clean your git history to just have one commit per story.&lt;/li>
&lt;li>tag the version where the sprint was completed with &amp;ldquo;Sprint_01&amp;rdquo;&lt;/li>
&lt;li>include the repo url in your status report (you can use any service, e.g. &lt;a href="https://gitlab.rz.htw-berlin.de/">https://gitlab.rz.htw-berlin.de/&lt;/a>)
&lt;ul>
&lt;li>if you have a private repository, make sure to grant me read access&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="step-1-using-express">Step 1: Using Express&lt;/h2>
&lt;p>Create a new application using express as described in the book.
If you&amp;rsquo;ve already created views in Sprint 0, you can migrate them to the express app.&lt;/p></description></item><item><title>Troubleshooting</title><link>https://bkleinen.github.io/material/web-technology/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/material/web-technology/troubleshooting/</guid><description>&lt;h2 id="troubleshooting-steps-for-rails">Troubleshooting Steps for Rails&lt;/h2>
&lt;p>The Rails Framework consists of a complex combination of various tools.
There is no compilation step, everything is started from the command line.&lt;/p>
&lt;p>As a consequence, things break at runtime, providing you with an informative
stack trace and error message that help you find the problem.&lt;/p>
&lt;p>You need to learn how to read those stack traces and error messages.&lt;/p>
&lt;p>Here are some pointers how to do it:&lt;/p></description></item><item><title>User-Centered Web Technology SS2017 Schedule</title><link>https://bkleinen.github.io/classes/ss2017/user-centered-web-technology/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/user-centered-web-technology/schedule/</guid><description>&lt;h2 id="tentative-schedule---lab-topics-are-subject-to-change">Tentative Schedule - Lab Topics are subject to change!&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Lab Assignment&lt;/th>
 &lt;th style="text-align: left">Work during the Week&lt;/th>
 &lt;th style="text-align: left">Milestones&lt;/th>
 &lt;th style="text-align: left">Reading&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-04-05&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Introduction&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-04-12&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Groups, Topics, Planning of the Interviews&lt;/td>
 &lt;td style="text-align: left">Interview Planning&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-04-19&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Interviews: Important Points, Planning of Interpretation Sessions&lt;/td>
 &lt;td style="text-align: left">User Interviews&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-04-26&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Interpretation Sessions&lt;/td>
 &lt;td style="text-align: left">User Interviews&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-05-03&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Interpretation Sessions&lt;/td>
 &lt;td style="text-align: left">Interpretation Sessions&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-05-17&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&amp;mdash; Himmelfahrt &amp;mdash;&amp;mdash;&lt;/td>
 &lt;td style="text-align: left">Write-Up&lt;/td>
 &lt;td style="text-align: left">Report I&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-05-24&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Creating the Affinity Diagram&lt;/td>
 &lt;td style="text-align: left">Affinity Diagram cont'&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-05-31&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">no class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-06-07&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wall Walk&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-06-14&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Visioning, Planning of Paper Prototypes&lt;/td>
 &lt;td style="text-align: left">Create Visions &amp;amp; Product Concepts&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-06-21&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Creating the Paper Prototypes&lt;/td>
 &lt;td style="text-align: left">Paper Prototypes Creation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-06-28&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Creating Paper Prototypes, Evaluation&lt;/td>
 &lt;td style="text-align: left">Developing the Prototype&lt;/td>
 &lt;td style="text-align: left">Report II&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-07-05&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Paper Prototype Evaluation &amp;amp; Retrospective&lt;/td>
 &lt;td style="text-align: left">Further Evaluation &amp;amp; Concept, Presentation Preparation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-07-12&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Final Presentations 8:45-12 Uhr!&lt;/td>
 &lt;td style="text-align: left">Write-Up&lt;/td>
 &lt;td style="text-align: left">Presentation&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-07-19&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Report III&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-07-26&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>Report II - Due Sun July &lt;!-- raw HTML omitted -->2nd&lt;!-- raw HTML omitted --> 9th, 23:00 - Vision and Paper Prototypes (before Evaluation or with Evaluation Steps if already performed)&lt;/p></description></item><item><title>User-Centered Web Technology SS2018</title><link>https://bkleinen.github.io/classes/ss2018/wt4/reports/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/wt4/reports/</guid><description>&lt;h1 id="report-1">Report 1&lt;/h1>
&lt;h2 id="start-a-project-template">Start a Project Template&lt;/h2>
&lt;p>You will have many iterations of the project template! Do not delete anything,
strikeout with date.&lt;/p>
&lt;ol>
&lt;li>Project Details: These include the summary of the Project&lt;/li>
&lt;li>Title: The Title or codename of the project.&lt;/li>
&lt;li>Description: A summary defining the objective of the project.&lt;/li>
&lt;li>Stakeholders: Members who are involved with or have requested the project.&lt;/li>
&lt;li>Impact Assessment: The observed or intended impact of the project deliverable: Who will be affected by this project? How many users? What business processes will be changed as a result of this project?&lt;/li>
&lt;li>User Requirements: The requirements of the project, as specified by the user.&lt;/li>
&lt;li>Specifications Sheet (Functional Requirements): The technical details of the project, or the deliverables that will be developed and/or designed to meet the user requirements.&lt;/li>
&lt;li>Data Models: Data Flow Diagrams and/or Data Structure Diagrams&lt;/li>
&lt;li>Data Processes: These are data processes or scripts that the project depends on. The list includes the process name, a description of where it&amp;rsquo;s located, what it does, etc. and runtime/duration. This table will be updated throughout the life of the product.&lt;/li>
&lt;li>Prototypes: Copies of low- or high fidelity screenshots, mockups, models, etc.&lt;/li>
&lt;li>Maintenance Notes: Additional notes that would be pertinent to the support of this product.&lt;/li>
&lt;/ol>
&lt;h1 id="report-2">Report 2&lt;/h1>
&lt;h2 id="product-design-report">Product Design Report&lt;/h2>
&lt;ul>
&lt;li>Results of Visioning&lt;/li>
&lt;li>Product Concepts&lt;/li>
&lt;li>Paper Prototypes&lt;/li>
&lt;/ul>
&lt;h1 id="report-3">Report 3&lt;/h1>
&lt;h2 id="evaluation-iterations">Evaluation Iterations&lt;/h2>
&lt;ul>
&lt;li>2 Iterations on Evaluating the Paper Prototypes&lt;/li>
&lt;li>High Fidelity Prototypes on two Aspects:
&lt;ul>
&lt;li>1 Usability Test&lt;/li>
&lt;li>1 A/B Test&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Reflection on Experience with Testing Methods&lt;/li>
&lt;li>Continue the Project Template from Report 1!&lt;/li>
&lt;li>Final Presentation of your Product Concept&lt;/li>
&lt;/ul></description></item><item><title>User-Centered Web Technology SS2018 Schedule</title><link>https://bkleinen.github.io/classes/ss2018/wt4/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/wt4/schedule/</guid><description>&lt;h2 id="tentative-schedule">Tentative Schedule&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic&lt;/th>
 &lt;th style="text-align: left">Reading&lt;/th>
 &lt;th style="text-align: left">Reports Due&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-04-12&lt;/td>
 &lt;td style="text-align: left">Introduction to class &amp;amp; Topics&lt;/td>
 &lt;td style="text-align: left">Chapter 2: What is User-Centered Design &amp;amp; 3 Working with Users&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-04-19&lt;/td>
 &lt;td style="text-align: left">Introduction to UCD&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-04-26&lt;/td>
 &lt;td style="text-align: left">User Research&lt;/td>
 &lt;td style="text-align: left">up to 3/5: &lt;a href="#personas">Personas&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-05-03&lt;/td>
 &lt;td style="text-align: left">User Research: Personas&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-05-10&lt;/td>
 &lt;td style="text-align: left">&amp;mdash; no class &amp;mdash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-05-17&lt;/td>
 &lt;td style="text-align: left">Design the Product&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">User Research Report&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-05-24&lt;/td>
 &lt;td style="text-align: left">Design the Product&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Mon, 2018-06-04&lt;/td>
 &lt;td style="text-align: left">Low Fidelity Prototype&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-06-07&lt;/td>
 &lt;td style="text-align: left">Low Fidelity Prototype&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-06-14&lt;/td>
 &lt;td style="text-align: left">User Testing I&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Product Design Report&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-06-21&lt;/td>
 &lt;td style="text-align: left">User Testing I&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-06-28&lt;/td>
 &lt;td style="text-align: left">High Fidelity Prototype&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-07-05&lt;/td>
 &lt;td style="text-align: left">Input on A/B Tests and Prototype Tests / High Fidelity Prototype&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-07-12&lt;/td>
 &lt;td style="text-align: left">Input on Usability Tests / User Testing II&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-07-19&lt;/td>
 &lt;td style="text-align: left">User Testing II&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-07-26&lt;/td>
 &lt;td style="text-align: left">Final Presentations&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Final Report (tbd)&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="resources">Resources&lt;/h2>
&lt;h3 id="personas">Personas&lt;/h3>
&lt;h4 id="required-reading-about-personas">Required Reading about Personas:&lt;/h4>
&lt;ul>
&lt;li>Chapter 4: Personas. In: Mathis, Lukas: Designed for Use, 2nd ed. Pragmatic Programmers, 2016. in Moodle.&lt;/li>
&lt;li>Aurora Harley: &lt;a href="https://www.nngroup.com/articles/persona/">Personas Make Users Memorable for Product Team Members&lt;/a>. Article on the Nielsen Norman Group Site, 2015.&lt;/li>
&lt;li>Laubheimer, Page: &lt;a href="https://www.nngroup.com/articles/personas-jobs-be-done/">Personas vs. Jobs-to-Be-Done&lt;/a>, 2017 - article on the Nielsen Norman Group Site.&lt;/li>
&lt;/ul>
&lt;h4 id="optional-reading-about-personas">Optional Reading about Personas:&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Charles G. Hill, Maren Haag, Alannah Oleson, Chris Mendez, Nicola Marsden, Anita Sarma, and Margaret Burnett. 2017. Gender-Inclusiveness Personas vs. Stereotyping: Can We Have it Both Ways?. In Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems (CHI &amp;lsquo;17). ACM, New York, NY, USA, 6658-6671. DOI: &lt;a href="https://doi.org/10.1145/3025453.3025609">https://doi.org/10.1145/3025453.3025609&lt;/a>
Article in Moodle, &lt;a href="https://www.youtube.com/watch?v=6f1aJhWGfLM">Talk also available as video&lt;/a>.&lt;/p></description></item><item><title>Web Applications WS2014/2015 - Schedule</title><link>https://bkleinen.github.io/classes/ws2014/webapplications/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2014/webapplications/schedule/</guid><description>&lt;p>|||
|a|b|&lt;/p>
&lt;h1 id="topics---general-thoughts">Topics - general Thoughts&lt;/h1>
&lt;ul>
&lt;li>do Web Application Frameworks first: Rails, Angular, Meteor. With an emphasis on Rails and Angular.&lt;/li>
&lt;li>I could do one lecture about Tools: Scrum, POEAA, TDD, SCM/Git, Continuous Integration&lt;/li>
&lt;li>&lt;strong>Security should be part of all topics&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h1 id="general-topics">General Topics&lt;/h1>
&lt;ul>
&lt;li>Security, Security, Security&lt;/li>
&lt;/ul>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Thursday&lt;/th>
 &lt;th style="text-align: left">Orga&lt;/th>
 &lt;th style="text-align: left">Lecture Topic&lt;/th>
 &lt;th style="text-align: left">Group&lt;/th>
 &lt;th style="text-align: left">Source&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">10/10/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Intro to Web Applications&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/htw-imi-webapplications/bentobox">bentobox&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">16/10/2014&lt;/td>
 &lt;td style="text-align: left">Referatsthemen festlegen&lt;/td>
 &lt;td style="text-align: left">Projekt Topics Pitch&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">23/10/2014&lt;/td>
 &lt;td style="text-align: left">Web Projekt Themen festlegen&lt;/td>
 &lt;td style="text-align: left">Ruby on Rails&lt;/td>
 &lt;td style="text-align: left">B. Kleinen&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">30/10/2014&lt;/td>
 &lt;td style="text-align: left">Backlogs&lt;/td>
 &lt;td style="text-align: left">Tools&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">06/11/2014&lt;/td>
 &lt;td style="text-align: left">Sprint Planning&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">13/11/2014&lt;/td>
 &lt;td style="text-align: left">Q&amp;amp;A&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">20/11/2014&lt;/td>
 &lt;td style="text-align: left">Review, Backlog Grooming&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">27/11/2014&lt;/td>
 &lt;td style="text-align: left">Sprint Planning&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">04/12/2014&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">11/12/2014&lt;/td>
 &lt;td style="text-align: left">Review&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">18/12/2015&lt;/td>
 &lt;td style="text-align: left">Sprint Planning&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">02&lt;/td>
 &lt;td style="text-align: left">08/01/2015&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">03&lt;/td>
 &lt;td style="text-align: left">15/01/2015&lt;/td>
 &lt;td style="text-align: left">Review&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">04&lt;/td>
 &lt;td style="text-align: left">22/01/2015&lt;/td>
 &lt;td style="text-align: left">Sprint Planning&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">05&lt;/td>
 &lt;td style="text-align: left">29/01/2015&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">06&lt;/td>
 &lt;td style="text-align: left">06/02/2015&lt;/td>
 &lt;td style="text-align: left">Review&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">07&lt;/td>
 &lt;td style="text-align: left">12/02/2015&lt;/td>
 &lt;td style="text-align: left">Tre&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Web Applications WS2015/2016 - Tentative Schedule</title><link>https://bkleinen.github.io/classes/ws2015/wt1wa/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/wt1wa/schedule/</guid><description>&lt;p>Tentative - this will still be changed and adapted.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic&lt;/th>
 &lt;th style="text-align: left">Groups/Names&lt;/th>
 &lt;th style="text-align: left">Homework&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-10-08&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../#schedule">e-learning: Rails Startup&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&amp;ndash;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-10-15&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../#schedule">e-learning: Rails Startup&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&amp;ndash;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-10-22&lt;/td>
 &lt;td style="text-align: left">Introduction, Ruby, Presentation Topics&lt;/td>
 &lt;td style="text-align: left">&amp;mdash;&lt;/td>
 &lt;td style="text-align: left">Find Topic and Group for Rails Project (Moodle), &lt;a href="https://github.com/htw-imi-wt1wa-ws2015/ruby-learning">Ruby Koans&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-10-29&lt;/td>
 &lt;td style="text-align: left">Settlement of Presentation Topics&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../homework/week1">Homework 1&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Rails: Active Record and Associations&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-11-05&lt;/td>
 &lt;td style="text-align: left">Rails: Routing, Active Records Queries, Deployment, Migrations&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../homework/week2">Homework 2&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-11-12&lt;/td>
 &lt;td style="text-align: left">Rails: Integration Tests and CI Servers&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-11-19&lt;/td>
 &lt;td style="text-align: left">Rails: Routing, Patterns and MVC&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../homework/week3">Homework 3&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-11-26&lt;/td>
 &lt;td style="text-align: left">Rails: Feature Tests, Session Management in Rails&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../homework/week4">Homework 4&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">CSS and Responsive Design&lt;/td>
 &lt;td style="text-align: left">Matthias, Simon&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-12-03&lt;/td>
 &lt;td style="text-align: left">NodeJS&lt;/td>
 &lt;td style="text-align: left">Konrad, Joshua und Stefan&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../homework/week5">Homework 5 - Sprint 1&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">AngularJS&lt;/td>
 &lt;td style="text-align: left">Konstantin, Sebastian, Markus&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-12-10&lt;/td>
 &lt;td style="text-align: left">AngularJS&lt;/td>
 &lt;td style="text-align: left">Katia, Ludwig&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../homework/week6">Homework 6 - Sprint 2&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">JavaScript: Foundations and Manipulating the DOM&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">TBD&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Thu, 2015-12-17&lt;/td>
 &lt;td style="text-align: left">JavaScript, Ecma 6, AJAX&lt;/td>
 &lt;td style="text-align: left">Christina, Nadine, Tu&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../homework/week7">Homework 7 - Sprint 3&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Testing, TDD, BDD, UI-Testing&lt;/td>
 &lt;td style="text-align: left">Lars, Jessica&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-01-07&lt;/td>
 &lt;td style="text-align: left">Build/Release Process: Hosting &amp;amp; Deployment, Continuous Delivery&lt;/td>
 &lt;td style="text-align: left">Tim, Stefan K., Felix&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../homework/week8">Homework 8 - Sprint 4&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Build/Release Process: Gulp, Grunt, Yeoman&lt;/td>
 &lt;td style="text-align: left">Oliver&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-01-14&lt;/td>
 &lt;td style="text-align: left">Session Management, Cookies vs. JWT&lt;/td>
 &lt;td style="text-align: left">Max, Stefan N., Michel&lt;/td>
 &lt;td style="text-align: left">Homework 9 - Sprint 5&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Realtime, WebRTC, Websockets&lt;/td>
 &lt;td style="text-align: left">TBD&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-01-21&lt;/td>
 &lt;td style="text-align: left">Web Security &amp;amp; SSL&lt;/td>
 &lt;td style="text-align: left">Silvio, Maté&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../homework/week10">Homework 10 - Sprint 6&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Web Security &amp;amp; SSL, SSL-Zertifizierung&lt;/td>
 &lt;td style="text-align: left">TBD&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-01-28&lt;/td>
 &lt;td style="text-align: left">Persistence NOSQL&lt;/td>
 &lt;td style="text-align: left">Moritz, Arian&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../homework/week11">Homework 11 - Sprint 7&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Maps &amp;amp; Geographical Applications&lt;/td>
 &lt;td style="text-align: left">Gley , Ramin&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-02-04&lt;/td>
 &lt;td style="text-align: left">Final Project Presentations&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">15:45-19:00&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">Thu, 2016-02-11&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Final Reports Due (Sprint 7 and Presentations)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Web Applications WS2015/2016 - Homework 1</title><link>https://bkleinen.github.io/classes/ws2015/wt1wa/homework/week1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/wt1wa/homework/week1/</guid><description>&lt;h1 id="homework-for-week-1">Homework for Week 1&lt;/h1>
&lt;ol>
&lt;li>Project description: Describe your Project on about half a page in complete sentences.&lt;/li>
&lt;li>Create a github repository and list your project in the wiki: &lt;a href="https://github.com/htw-imi-wt1wa-ws2015/rails-projects/wiki">https://github.com/htw-imi-wt1wa-ws2015/rails-projects/wiki&lt;/a>&lt;/li>
&lt;li>Create Use Case Scenarios accompanied with Screen Scribbles for at least one Use Case per Person.&lt;/li>
&lt;li>Design a Domain Model for your Project. Document it using UML. It should show the associations between the Model classes.&lt;/li>
&lt;li>Create a Rails app and your models. You can use the scaffold generator. You need not yet add the associations in the Rails app.&lt;/li>
&lt;li>Tag your project: &amp;ldquo;WEEK01&amp;rdquo; and upload it to github.&lt;/li>
&lt;li>Put your project description, Use Case and Class Diagrams and Scenarios into a PDF-Report and upload it to moodle.&lt;/li>
&lt;/ol></description></item><item><title>Web Applications WS2015/2016 - Homework 11</title><link>https://bkleinen.github.io/classes/ws2015/wt1wa/homework/week11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/wt1wa/homework/week11/</guid><description>&lt;h1 id="homework-for-week-11--sprint-7">Homework for Week 11 / Sprint 7&lt;/h1>
&lt;p>You just keep working on your Project, one Story in your Backlog at a time:&lt;/p>
&lt;ul>
&lt;li>include the backlog in your report. For each story, list
&lt;ul>
&lt;li>its number/id&lt;/li>
&lt;li>its name&lt;/li>
&lt;li>storypoints&lt;/li>
&lt;li>sprint(s) it was/is in (eg. sprint3, or: sprint4(committed, but not completed) sprint5 (completed) etc.)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>include your level of done in each report, such that I don&amp;rsquo;t have to search for it. (you should have that starting with sprint4)&lt;/li>
&lt;li>for each story you&amp;rsquo;ve been working on, write down acceptance criteria.&lt;/li>
&lt;li>tests for the stories should be included both in level of done and the acceptance criteria.&lt;/li>
&lt;li>report on what worked, what didn&amp;rsquo;t, how you solved especially difficulties.&lt;/li>
&lt;li>for the described tasks, please include a link to the main file(s) you needed to change for that or make the changes clearly visible in a commit comment (e.g. &amp;ldquo;Story #38: created search box&amp;rdquo;) and note that in your report.&lt;/li>
&lt;li>Tag your project: &amp;ldquo;SPRINT7&amp;rdquo; and push it to github (or another git server). Provide a link in your report.&lt;/li>
&lt;li>Upload your PDF-Report to moodle. Your Report should describe what you did, problems you&amp;rsquo;ve encountered and how you solved them - and the project description, the backlog and the stories you worked on during the sprint. See the details above!&lt;/li>
&lt;/ul>
&lt;p>And yes, this is the same as last week. Would be great if more than 50% of the reports would adhere to this requirements!
And this is why I don&amp;rsquo;t want links to google docs etc in the reports:&lt;/p></description></item><item><title>Web Applications WS2015/2016 - Homework 2</title><link>https://bkleinen.github.io/classes/ws2015/wt1wa/homework/week2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/wt1wa/homework/week2/</guid><description>&lt;h1 id="homework-for-week-2">Homework for Week 2&lt;/h1>
&lt;ol>
&lt;li>Make sure that you&amp;rsquo;re clear on the associations between the classes in your domain model.&lt;/li>
&lt;li>Create Migrations for adding the foreign keys and, if needed, association tables to the database. Write down the commands you used. You should have at least two associations of different kinds.&lt;/li>
&lt;li>Run the migrations.&lt;/li>
&lt;li>Experiment using the rails console to create AR Instances and Associations.&lt;/li>
&lt;li>using this, create a rake task db:populate to create example data.&lt;/li>
&lt;li>Tag your project: &amp;ldquo;WEEK02&amp;rdquo; and push it to github.&lt;/li>
&lt;li>upload your PDF-Report to moodle.&lt;/li>
&lt;/ol>
&lt;p>update 5.11.2015 19:30: as we didn&amp;rsquo;t cover all of the topics, these two things will be
postponed to next week:&lt;/p></description></item><item><title>Web Applications WS2015/2016 - Homework 3</title><link>https://bkleinen.github.io/classes/ws2015/wt1wa/homework/week3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/wt1wa/homework/week3/</guid><description>&lt;h1 id="homework-for-week-3">Homework for Week 3&lt;/h1>
&lt;ol>
&lt;li>Decide on (at least) one more advanced view making use of an association, design and implement it.&lt;/li>
&lt;li>Find a way to practice working with the request parameters that makes sense in your application, e.g.
&lt;ul>
&lt;li>implement a search&lt;/li>
&lt;li>implement a sort on a field&lt;/li>
&lt;li>create forms editing more than one object&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>If you&amp;rsquo;re more than 2 people in the group, pick a second view to work on.&lt;/li>
&lt;li>Add rspec and basic test cases as discussed in class.&lt;/li>
&lt;li>Set up Continuous Integration with Travis (or another service)&lt;/li>
&lt;li>Deploy your project to heroku.&lt;/li>
&lt;li>Tag your project: &amp;ldquo;WEEK03&amp;rdquo; and push it to github.&lt;/li>
&lt;li>Upload your PDF-Report to moodle.&lt;/li>
&lt;/ol></description></item><item><title>Web Applications WS2015/2016 - Homework 4</title><link>https://bkleinen.github.io/classes/ws2015/wt1wa/homework/week4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/wt1wa/homework/week4/</guid><description>&lt;h1 id="homework-for-week-4">Homework for Week 4&lt;/h1>
&lt;ol>
&lt;li>Create end-to-end (feature or integration tests) for the feature or feature you&amp;rsquo;ve
created last week.&lt;/li>
&lt;li>Create a test for exercise 2 of last week (search, sort, etc, whatever you&amp;rsquo;ve created)&lt;/li>
&lt;li>create more feature tests if you want to.&lt;/li>
&lt;li>create a hand-rolled login-procedure following Chapter 8 of &lt;a href="https://www.railstutorial.org/">Michael Hartl&amp;rsquo;s Tutorial&lt;/a>. (note: this is to do it once yourself, you wouldn&amp;rsquo;t create your own in a real project, but rather use a library)&lt;/li>
&lt;li>Do this either test-driven or add feature tests for the successful login.&lt;/li>
&lt;li>Tag your project: &amp;ldquo;WEEK04&amp;rdquo; and push it to github.&lt;/li>
&lt;li>Upload your PDF-Report to moodle. Your Report should describe what you did, problems you&amp;rsquo;ve encountered and how you solved them.&lt;/li>
&lt;/ol>
&lt;p>##Resources:&lt;/p></description></item><item><title>Web Applications WS2015/2016 - Homework 5</title><link>https://bkleinen.github.io/classes/ws2015/wt1wa/homework/week5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/wt1wa/homework/week5/</guid><description>&lt;h1 id="homework-for-week-5--sprint-1">Homework for Week 5 / Sprint 1&lt;/h1>
&lt;ol start="0">
&lt;li>Provide a short description for your Project: Goals/Vision, which Technologies you want to use.&lt;/li>
&lt;li>Create a backlog for your Project. See &lt;a href="https://www.mountaingoatsoftware.com/blog/a-sample-format-for-a-spreadsheet-based-product-backlog">https://www.mountaingoatsoftware.com/blog/a-sample-format-for-a-spreadsheet-based-product-backlog&lt;/a> for an example. Make sure your stories have an ID and that
you have a way to prioritize your backlog.&lt;/li>
&lt;li>Decide on one, two or a few stories you want to start with. You&amp;rsquo;re still learning the technology, but you should have a goal you&amp;rsquo;re aiming at.&lt;/li>
&lt;li>Mark those stories as being part of Sprint 1 either in the backlog or in some other way.&lt;/li>
&lt;li>Make sure to mark the basic installation as your &amp;ldquo;initial commit&amp;rdquo; and document each step with a commit reading something like &amp;ldquo;Story 4711: did this and that&amp;rdquo;&lt;/li>
&lt;li>Use the simple git workflow described in the links below to generate merges per story.&lt;/li>
&lt;li>Tag your project: &amp;ldquo;SPRINT1&amp;rdquo; and push it to github (or another git server). Provide a link in your report.&lt;/li>
&lt;li>Upload your PDF-Report to moodle. Your Report should describe what you did, problems you&amp;rsquo;ve encountered and how you solved them - and the project description, the backlog and the stories you worked on during the sprint.&lt;/li>
&lt;/ol>
&lt;p>##Resources:&lt;/p></description></item><item><title>Web Applications WS2015/2016 - Homework 6</title><link>https://bkleinen.github.io/classes/ws2015/wt1wa/homework/week6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/wt1wa/homework/week6/</guid><description>&lt;h1 id="homework-for-week-6--sprint-2">Homework for Week 6 / Sprint 2&lt;/h1>
&lt;ol>
&lt;li>Prioritize your backlog.&lt;/li>
&lt;li>Estimate a couple of stories.&lt;/li>
&lt;li>Create a screen flow for the next or next few stories. Mark these stories as being part of SPRINT2.&lt;/li>
&lt;li>Using an HTML templating engine / HTML generator library that can be used with your framework to create a click-dummy for the user stories.&lt;/li>
&lt;li>Make sure to mark the basic installation as your &amp;ldquo;initial commit&amp;rdquo; and document each step with a commit reading something like &amp;ldquo;Story 4711: did this and that&amp;rdquo;&lt;/li>
&lt;li>Use the simple git workflow described in the links below to generate merges per story.&lt;/li>
&lt;li>Tag your project: &amp;ldquo;SPRINT2&amp;rdquo; and push it to github (or another git server). Provide a link in your report.&lt;/li>
&lt;li>Upload your PDF-Report to moodle. Your Report should describe what you did, problems you&amp;rsquo;ve encountered and how you solved them - and the project description, the backlog and the stories you worked on during the sprint.&lt;/li>
&lt;/ol>
&lt;p>##Resources:&lt;/p></description></item><item><title>Web Applications WS2015/2016 - Homework 7</title><link>https://bkleinen.github.io/classes/ws2015/wt1wa/homework/week7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/wt1wa/homework/week7/</guid><description>&lt;h1 id="homework-for-week-7--sprint-3">Homework for Week 7 / Sprint 3&lt;/h1>
&lt;ol start="0">
&lt;li>Review and groom your Backlog. That is, if you&amp;rsquo;re created a click-dummy for one or more stories, you should defined new stories for actually implementing the functionality. Don&amp;rsquo;t forget to estimate them.&lt;/li>
&lt;li>Perform a Sprint Planning in your Team. Make sure you understand and write down the acceptance criteria for each story!&lt;/li>
&lt;li>Document the Tasks you identified for each of your stories.&lt;/li>
&lt;li>Decide on which stories you want to commit - that is, you are pretty sure you can complete till the next deadline.&lt;/li>
&lt;li>It&amp;rsquo;s ok to plan another story (or two) that you don&amp;rsquo;t yet commit on. Make sure to mark the stories clearly - which do you promise to deliver, which are an option?&lt;/li>
&lt;li>Work on the stories, preferably, if it is possible at all, the whole team on the first story, then the second. The defined tasks might help with that.&lt;/li>
&lt;li>Tag your project: &amp;ldquo;SPRINT3&amp;rdquo; and push it to github (or another git server). Provide a link in your report.&lt;/li>
&lt;li>Upload your PDF-Report to moodle. Your Report should describe what you did, problems you&amp;rsquo;ve encountered and how you solved them - and the project description, the backlog and the stories you worked on during the sprint.&lt;/li>
&lt;/ol></description></item><item><title>Web Applications WS2015/2016 - Homework 8</title><link>https://bkleinen.github.io/classes/ws2015/wt1wa/homework/week10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/wt1wa/homework/week10/</guid><description>&lt;h1 id="homework-for-week-10--sprint-6">Homework for Week 10 / Sprint 6&lt;/h1>
&lt;p>You just keep working on your Project, one Story in your Backlog at a time:&lt;/p>
&lt;ul>
&lt;li>include the backlog in your report. For each story, list
&lt;ul>
&lt;li>its number/id&lt;/li>
&lt;li>its name&lt;/li>
&lt;li>storypoints&lt;/li>
&lt;li>sprint(s) it was/is in (eg. sprint3, or: sprint4(committed, but not completed) sprint5 (completed) etc.)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>include your level of done in each report, such that I don&amp;rsquo;t have to search for it. (you should have that starting with sprint4)&lt;/li>
&lt;li>for each story you&amp;rsquo;ve been working on, write down acceptance criteria.&lt;/li>
&lt;li>tests for the stories should be included both in level of done and the acceptance criteria.&lt;/li>
&lt;li>report on what worked, what didn&amp;rsquo;t, how you solved especially difficulties.&lt;/li>
&lt;li>for the described tasks, please include a link to the main file(s) you needed to change for that or make the changes clearly visible in a commit comment (e.g. &amp;ldquo;Story #38: created search box&amp;rdquo;) and note that in your report.&lt;/li>
&lt;li>Tag your project: &amp;ldquo;SPRINT6&amp;rdquo; and push it to github (or another git server). Provide a link in your report.&lt;/li>
&lt;li>Upload your PDF-Report to moodle. Your Report should describe what you did, problems you&amp;rsquo;ve encountered and how you solved them - and the project description, the backlog and the stories you worked on during the sprint. See the details above!&lt;/li>
&lt;/ul></description></item><item><title>Web Applications WS2015/2016 - Homework 8</title><link>https://bkleinen.github.io/classes/ws2015/wt1wa/homework/week8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2015/wt1wa/homework/week8/</guid><description>&lt;h1 id="homework-for-week-8--sprint-4">Homework for Week 8 / Sprint 4&lt;/h1>
&lt;ol start="0">
&lt;li>If you haven&amp;rsquo;t done that yet, start testing your application.&lt;/li>
&lt;li>Define your level of done. &lt;a href="https://www.scrumalliance.org/community/articles/2008/september/what-is-definition-of-done-(dod)">see this article, for example.&lt;/a>&lt;/li>
&lt;li>Perform a Sprint Planning in your Team.&lt;/li>
&lt;li>Document the Tasks you identified for each of your stories.&lt;/li>
&lt;li>Decide on which stories you want to commit - that is, you are pretty sure you can complete till the next deadline.&lt;/li>
&lt;li>It&amp;rsquo;s ok to plan another story (or two) that you don&amp;rsquo;t yet commit on. Make sure to mark the stories clearly - which do you promise to deliver, which are an option?&lt;/li>
&lt;li>Work on the stories, preferably, if it is possible at all, the whole team on the first story, then the second. The defined tasks might help with that.&lt;/li>
&lt;li>Tag your project: &amp;ldquo;SPRINT4&amp;rdquo; and push it to github (or another git server). Provide a link in your report.&lt;/li>
&lt;li>Upload your PDF-Report to moodle. Your Report should describe what you did, problems you&amp;rsquo;ve encountered and how you solved them - and the project description, the backlog and the stories you worked on during the sprint.&lt;/li>
&lt;/ol></description></item><item><title>Web Applications WS2019/2020</title><link>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/homework0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/homework0/</guid><description>&lt;h2 id="assignment-1">Assignment 1&lt;/h2>
&lt;p>Bitte eine Seite schreiben zu den Fragen:&lt;/p>
&lt;ul>
&lt;li>Foto und Name&lt;/li>
&lt;li>Was bringe ich mit?&lt;/li>
&lt;li>Was möchte ich lernen/vertiefen?&lt;/li>
&lt;li>Welche Use Cases / User Stories sind für die App zu implementieren?&lt;/li>
&lt;li>In welchen Arbeitsgruppen waren Sie?&lt;/li>
&lt;li>Bitte fassen Sie das Ergebnis einer Arbeitsgruppe kurz in eigenen Worten zusammen.&lt;/li>
&lt;/ul>
&lt;p>bis DIENSTAG abend 22:00 als PDF in Moodle hochladen.&lt;/p></description></item><item><title>Web Applications WS2019/2020</title><link>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/homework1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/homework1/</guid><description>&lt;h2 id="assignment-2">Assignment 2&lt;/h2>
&lt;p>Based on the Storys defined in Class, prepare Storyboards and where suitable
Paper Prototypes for at least the first Story.&lt;/p>
&lt;p>Reading Material:&lt;/p>
&lt;h3 id="storyboards">Storyboards&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://www.interaction-design.org/literature/book/the-encyclopedia-of-human-computer-interaction-2nd-ed/contextual-design#toc_2_6">Brief Intro in Contextual Design Article&lt;/a>&lt;/li>
&lt;li>Chapter 12 of Rapid Contextual Design (Moodle)&lt;/li>
&lt;li>Chapter 13 of Contextual Design (Moodle, optional)&lt;/li>
&lt;/ul>
&lt;h3 id="paper-prototypes">Paper Prototypes&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://www.interaction-design.org/literature/book/the-encyclopedia-of-human-computer-interaction-2nd-ed/contextual-design#toc_2_8">Brief Intro in Contextual Design Article&lt;/a>&lt;/li>
&lt;li>Chapter 13 Rapid Contextual Design (Moodle)&lt;/li>
&lt;li>Chapter 17 Validating the Design (Moodle, optional)&lt;/li>
&lt;/ul>
&lt;h4 id="videos-optional">Videos, optional:&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=JMjozqJS44M">Video: Google Rapid Prototyping 1 of 3: Sketching &amp;amp; Paper Prototyping&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=mH2IlUwWT3w">Video: Web Application - Paper Prototype&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=85muhAaySps">Design Thinking - Paper Prototypes&lt;/a> - including a paper prototype for a service&lt;/li>
&lt;/ul>
&lt;p>The articles in moodle refer to a method called &amp;ldquo;Contextual Design&amp;rdquo; by Holtzblatt and Beyer.
there&amp;rsquo;s a good brief intro on the method on &lt;a href="https://www.interaction-design.org/literature/book/the-encyclopedia-of-human-computer-interaction-2nd-ed/contextual-design">interaction-design.org&lt;/a>&lt;/p></description></item><item><title>Web Applications WS2019/2020</title><link>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/homework3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/homework3/</guid><description>&lt;h2 id="assignment-3">Assignment 3&lt;/h2>
&lt;p>This weeks work has two main parts:&lt;/p>
&lt;ul>
&lt;li>perform a Paper Prototype Usability Test&lt;/li>
&lt;li>Set up your Project with SCM&lt;/li>
&lt;/ul>
&lt;h3 id="paper-prototype-usability-test">Paper Prototype Usability Test&lt;/h3>
&lt;p>Use the time in class to run a brief usability test based on your paper prototypes.
Make sure you&amp;rsquo;re testing a clearly defined tasks, and assign the roles User, Human Computer,
Facilitator/Notetaker and Oberservers as described in &lt;a href="https://usabilitygeek.com/paper-prototyping-as-a-usability-testing-technique/">Paper Prototyping As A Usability Testing Technique&lt;/a>.&lt;/p>
&lt;p>Reading Material:&lt;/p></description></item><item><title>Web Applications WS2019/2020 - Tentative Schedule</title><link>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/schedule/</guid><description>&lt;p>Tentative - this will still be changed and adapted.&lt;/p>
&lt;h1 id="tentative-schedule">Tentative Schedule&lt;/h1>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">What&lt;/th>
 &lt;th style="text-align: left">Who&lt;/th>
 &lt;th style="text-align: left">Homework / Due Tue 22:00 next week&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Thu 10/10/2019&lt;/td>
 &lt;td style="text-align: left">Class Intro&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/homework0">Homework 0&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Thu 17/10/2019&lt;/td>
 &lt;td style="text-align: left">User Story Mapping &amp;amp; First Project&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Thu 24/10/2019&lt;/td>
 &lt;td style="text-align: left">Paper Prototypes / Storyboards&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Thu 31/10/2019&lt;/td>
 &lt;td style="text-align: left">e-learning&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Thu 07/11/2019&lt;/td>
 &lt;td style="text-align: left">Patterns of Enterprise Application Architectures&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Continuous Deployment&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Thu 14/11/2019&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://www.eventbrite.de/e/world-usability-day-berlin-2019-designing-for-the-future-we-want-registrierung-77513275293">Gemeinsamer Besuch des World Usability Days - bitte anmelden!&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Thu 21/11/2019&lt;/td>
 &lt;td style="text-align: left">WebGL&lt;/td>
 &lt;td style="text-align: left">Chris, Florian W&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Docker&lt;/td>
 &lt;td style="text-align: left">Christian, Johann&lt;/td>
 &lt;td style="text-align: left">finish First Project&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Thu 28/11/2019&lt;/td>
 &lt;td style="text-align: left">(ausgefallen)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Thu 05/12/2019&lt;/td>
 &lt;td style="text-align: left">rescheduled to 23/01&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Thu 12/12/2019&lt;/td>
 &lt;td style="text-align: left">Presentations 1st Project&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Thu 19/12/2019&lt;/td>
 &lt;td style="text-align: left">Progressive WebApps&lt;/td>
 &lt;td style="text-align: left">Kevin&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Serverless Architectures&lt;/td>
 &lt;td style="text-align: left">David M, Eko&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Thu 09/01/2020&lt;/td>
 &lt;td style="text-align: left">Realtime, WebRTC, Websockets&lt;/td>
 &lt;td style="text-align: left">Paul&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Microfrontents&lt;/td>
 &lt;td style="text-align: left">Markus, Florian S&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Thu 16/01/2020&lt;/td>
 &lt;td style="text-align: left">Microservices: &lt;a href="https://martinfowler.com/microservices/">Microservices Guide&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Simon&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Authentication and Authorization&lt;/td>
 &lt;td style="text-align: left">Lennard&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Thu 23/01/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">finish Second Project&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Thu 30/01/2020&lt;/td>
 &lt;td style="text-align: left">Presentations 2nd Project&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h1 id="presentation-topic-list">Presentation Topic List&lt;/h1>
&lt;ol>
&lt;li>Intro to a Framework and Learning Pointers: React, AngularJS - HIGH LEVEL!&lt;/li>
&lt;li>&lt;a href="https://martinfowler.com/articles/evodb.html#scenario">Evolutionary Database Design&lt;/a>, &lt;a href="https://martinfowler.com/data/">Data Management Guide&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://martinfowler.com/articles/serverless.html">Serverless Architectures&lt;/a>&lt;/li>
&lt;li>Architectures: &lt;a href="https://martinfowler.com/bliki/PresentationDomainDataLayering.html">PresentationDomainDataLayering&lt;/a>&lt;/li>
&lt;li>&lt;/li>
&lt;li>&lt;a href="https://martinfowler.com/articles/micro-frontends.html">Micro Frontends&lt;/a>&lt;/li>
&lt;li>Docker&lt;/li>
&lt;li>Continuous Deployment&lt;/li>
&lt;li>Testing, TDD, BDD, UI-Testing&lt;/li>
&lt;li>Dependency Management&lt;/li>
&lt;li>Web Security&lt;/li>
&lt;li>Authentication and Authorization (in a Framework apart of Rails)&lt;/li>
&lt;li>Realtime, WebRTC, Websockets&lt;/li>
&lt;li>CSS and Responsive Design&lt;/li>
&lt;li>Rails Architecture, Conventions, MVC and Active Record&lt;/li>
&lt;li>JavaScript: Foundations and Manipulating the DOM&lt;/li>
&lt;li>History of the Web&lt;/li>
&lt;li>Progressive WebApps&lt;/li>
&lt;/ol>
&lt;h1 id="project-topics-apart-from-implementing-use-cases">Project Topics (Apart from implementing Use Cases)&lt;/h1>
&lt;ol>
&lt;li>Assessing and Setting up CI/CD&lt;/li>
&lt;li>Implementing the Authorization/Authentication part&lt;/li>
&lt;/ol>
&lt;p>Authentication &amp;amp; Authorization | BK&lt;/p></description></item><item><title>Web Applications WS2019/2020 - Homework 1</title><link>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/week1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/week1/</guid><description>&lt;h1 id="homework-for-week-1">Homework for Week 1&lt;/h1>
&lt;ol>
&lt;li>Project description: Describe your Project on about half a page in complete sentences.&lt;/li>
&lt;li>Create a github repository and list your project in the wiki: &lt;a href="https://github.com/htw-imi-wt1wa-ws2015/rails-projects/wiki">https://github.com/htw-imi-wt1wa-ws2015/rails-projects/wiki&lt;/a>&lt;/li>
&lt;li>Create Use Case Scenarios accompanied with Screen Scribbles for at least one Use Case per Person.&lt;/li>
&lt;li>Design a Domain Model for your Project. Document it using UML. It should show the associations between the Model classes.&lt;/li>
&lt;li>Create a Rails app and your models. You can use the scaffold generator. You need not yet add the associations in the Rails app.&lt;/li>
&lt;li>Tag your project: &amp;ldquo;WEEK01&amp;rdquo; and upload it to github.&lt;/li>
&lt;li>Put your project description, Use Case and Class Diagrams and Scenarios into a PDF-Report and upload it to moodle.&lt;/li>
&lt;/ol></description></item><item><title>Web Applications WS2019/2020 - Homework 11</title><link>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/week11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/week11/</guid><description>&lt;h1 id="homework-for-week-11--sprint-7">Homework for Week 11 / Sprint 7&lt;/h1>
&lt;p>You just keep working on your Project, one Story in your Backlog at a time:&lt;/p>
&lt;ul>
&lt;li>include the backlog in your report. For each story, list
&lt;ul>
&lt;li>its number/id&lt;/li>
&lt;li>its name&lt;/li>
&lt;li>storypoints&lt;/li>
&lt;li>sprint(s) it was/is in (eg. sprint3, or: sprint4(committed, but not completed) sprint5 (completed) etc.)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>include your level of done in each report, such that I don&amp;rsquo;t have to search for it. (you should have that starting with sprint4)&lt;/li>
&lt;li>for each story you&amp;rsquo;ve been working on, write down acceptance criteria.&lt;/li>
&lt;li>tests for the stories should be included both in level of done and the acceptance criteria.&lt;/li>
&lt;li>report on what worked, what didn&amp;rsquo;t, how you solved especially difficulties.&lt;/li>
&lt;li>for the described tasks, please include a link to the main file(s) you needed to change for that or make the changes clearly visible in a commit comment (e.g. &amp;ldquo;Story #38: created search box&amp;rdquo;) and note that in your report.&lt;/li>
&lt;li>Tag your project: &amp;ldquo;SPRINT7&amp;rdquo; and push it to github (or another git server). Provide a link in your report.&lt;/li>
&lt;li>Upload your PDF-Report to moodle. Your Report should describe what you did, problems you&amp;rsquo;ve encountered and how you solved them - and the project description, the backlog and the stories you worked on during the sprint. See the details above!&lt;/li>
&lt;/ul>
&lt;p>And yes, this is the same as last week. Would be great if more than 50% of the reports would adhere to this requirements!
And this is why I don&amp;rsquo;t want links to google docs etc in the reports:&lt;/p></description></item><item><title>Web Applications WS2019/2020 - Homework 2</title><link>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/week2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/week2/</guid><description>&lt;h1 id="homework-for-week-2">Homework for Week 2&lt;/h1>
&lt;ol>
&lt;li>Make sure that you&amp;rsquo;re clear on the associations between the classes in your domain model.&lt;/li>
&lt;li>Create Migrations for adding the foreign keys and, if needed, association tables to the database. Write down the commands you used. You should have at least two associations of different kinds.&lt;/li>
&lt;li>Run the migrations.&lt;/li>
&lt;li>Experiment using the rails console to create AR Instances and Associations.&lt;/li>
&lt;li>using this, create a rake task db:populate to create example data.&lt;/li>
&lt;li>Tag your project: &amp;ldquo;WEEK02&amp;rdquo; and push it to github.&lt;/li>
&lt;li>upload your PDF-Report to moodle.&lt;/li>
&lt;/ol>
&lt;p>update 5.11.2015 19:30: as we didn&amp;rsquo;t cover all of the topics, these two things will be
postponed to next week:&lt;/p></description></item><item><title>Web Applications WS2019/2020 - Homework 3</title><link>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/week3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/week3/</guid><description>&lt;h1 id="homework-for-week-3">Homework for Week 3&lt;/h1>
&lt;ol>
&lt;li>Decide on (at least) one more advanced view making use of an association, design and implement it.&lt;/li>
&lt;li>Find a way to practice working with the request parameters that makes sense in your application, e.g.
&lt;ul>
&lt;li>implement a search&lt;/li>
&lt;li>implement a sort on a field&lt;/li>
&lt;li>create forms editing more than one object&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>If you&amp;rsquo;re more than 2 people in the group, pick a second view to work on.&lt;/li>
&lt;li>Add rspec and basic test cases as discussed in class.&lt;/li>
&lt;li>Set up Continuous Integration with Travis (or another service)&lt;/li>
&lt;li>Deploy your project to heroku.&lt;/li>
&lt;li>Tag your project: &amp;ldquo;WEEK03&amp;rdquo; and push it to github.&lt;/li>
&lt;li>Upload your PDF-Report to moodle.&lt;/li>
&lt;/ol></description></item><item><title>Web Applications WS2019/2020 - Homework 4</title><link>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/week4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/week4/</guid><description>&lt;h1 id="homework-for-week-4">Homework for Week 4&lt;/h1>
&lt;ol>
&lt;li>Create end-to-end (feature or integration tests) for the feature or feature you&amp;rsquo;ve
created last week.&lt;/li>
&lt;li>Create a test for exercise 2 of last week (search, sort, etc, whatever you&amp;rsquo;ve created)&lt;/li>
&lt;li>create more feature tests if you want to.&lt;/li>
&lt;li>create a hand-rolled login-procedure following Chapter 8 of &lt;a href="https://www.railstutorial.org/">Michael Hartl&amp;rsquo;s Tutorial&lt;/a>. (note: this is to do it once yourself, you wouldn&amp;rsquo;t create your own in a real project, but rather use a library)&lt;/li>
&lt;li>Do this either test-driven or add feature tests for the successful login.&lt;/li>
&lt;li>Tag your project: &amp;ldquo;WEEK04&amp;rdquo; and push it to github.&lt;/li>
&lt;li>Upload your PDF-Report to moodle. Your Report should describe what you did, problems you&amp;rsquo;ve encountered and how you solved them.&lt;/li>
&lt;/ol>
&lt;p>##Resources:&lt;/p></description></item><item><title>Web Applications WS2019/2020 - Homework 5</title><link>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/week5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/week5/</guid><description>&lt;h1 id="homework-for-week-5--sprint-1">Homework for Week 5 / Sprint 1&lt;/h1>
&lt;ol start="0">
&lt;li>Provide a short description for your Project: Goals/Vision, which Technologies you want to use.&lt;/li>
&lt;li>Create a backlog for your Project. See &lt;a href="https://www.mountaingoatsoftware.com/blog/a-sample-format-for-a-spreadsheet-based-product-backlog">https://www.mountaingoatsoftware.com/blog/a-sample-format-for-a-spreadsheet-based-product-backlog&lt;/a> for an example. Make sure your stories have an ID and that
you have a way to prioritize your backlog.&lt;/li>
&lt;li>Decide on one, two or a few stories you want to start with. You&amp;rsquo;re still learning the technology, but you should have a goal you&amp;rsquo;re aiming at.&lt;/li>
&lt;li>Mark those stories as being part of Sprint 1 either in the backlog or in some other way.&lt;/li>
&lt;li>Make sure to mark the basic installation as your &amp;ldquo;initial commit&amp;rdquo; and document each step with a commit reading something like &amp;ldquo;Story 4711: did this and that&amp;rdquo;&lt;/li>
&lt;li>Use the simple git workflow described in the links below to generate merges per story.&lt;/li>
&lt;li>Tag your project: &amp;ldquo;SPRINT1&amp;rdquo; and push it to github (or another git server). Provide a link in your report.&lt;/li>
&lt;li>Upload your PDF-Report to moodle. Your Report should describe what you did, problems you&amp;rsquo;ve encountered and how you solved them - and the project description, the backlog and the stories you worked on during the sprint.&lt;/li>
&lt;/ol>
&lt;p>##Resources:&lt;/p></description></item><item><title>Web Applications WS2019/2020 - Homework 6</title><link>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/week6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/week6/</guid><description>&lt;h1 id="homework-for-week-6--sprint-2">Homework for Week 6 / Sprint 2&lt;/h1>
&lt;ol>
&lt;li>Prioritize your backlog.&lt;/li>
&lt;li>Estimate a couple of stories.&lt;/li>
&lt;li>Create a screen flow for the next or next few stories. Mark these stories as being part of SPRINT2.&lt;/li>
&lt;li>Using an HTML templating engine / HTML generator library that can be used with your framework to create a click-dummy for the user stories.&lt;/li>
&lt;li>Make sure to mark the basic installation as your &amp;ldquo;initial commit&amp;rdquo; and document each step with a commit reading something like &amp;ldquo;Story 4711: did this and that&amp;rdquo;&lt;/li>
&lt;li>Use the simple git workflow described in the links below to generate merges per story.&lt;/li>
&lt;li>Tag your project: &amp;ldquo;SPRINT2&amp;rdquo; and push it to github (or another git server). Provide a link in your report.&lt;/li>
&lt;li>Upload your PDF-Report to moodle. Your Report should describe what you did, problems you&amp;rsquo;ve encountered and how you solved them - and the project description, the backlog and the stories you worked on during the sprint.&lt;/li>
&lt;/ol>
&lt;p>##Resources:&lt;/p></description></item><item><title>Web Applications WS2019/2020 - Homework 7</title><link>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/week7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/week7/</guid><description>&lt;h1 id="homework-for-week-7--sprint-3">Homework for Week 7 / Sprint 3&lt;/h1>
&lt;ol start="0">
&lt;li>Review and groom your Backlog. That is, if you&amp;rsquo;re created a click-dummy for one or more stories, you should defined new stories for actually implementing the functionality. Don&amp;rsquo;t forget to estimate them.&lt;/li>
&lt;li>Perform a Sprint Planning in your Team. Make sure you understand and write down the acceptance criteria for each story!&lt;/li>
&lt;li>Document the Tasks you identified for each of your stories.&lt;/li>
&lt;li>Decide on which stories you want to commit - that is, you are pretty sure you can complete till the next deadline.&lt;/li>
&lt;li>It&amp;rsquo;s ok to plan another story (or two) that you don&amp;rsquo;t yet commit on. Make sure to mark the stories clearly - which do you promise to deliver, which are an option?&lt;/li>
&lt;li>Work on the stories, preferably, if it is possible at all, the whole team on the first story, then the second. The defined tasks might help with that.&lt;/li>
&lt;li>Tag your project: &amp;ldquo;SPRINT3&amp;rdquo; and push it to github (or another git server). Provide a link in your report.&lt;/li>
&lt;li>Upload your PDF-Report to moodle. Your Report should describe what you did, problems you&amp;rsquo;ve encountered and how you solved them - and the project description, the backlog and the stories you worked on during the sprint.&lt;/li>
&lt;/ol></description></item><item><title>Web Applications WS2019/2020 - Homework 8</title><link>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/week10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/week10/</guid><description>&lt;h1 id="homework-for-week-10--sprint-6">Homework for Week 10 / Sprint 6&lt;/h1>
&lt;p>You just keep working on your Project, one Story in your Backlog at a time:&lt;/p>
&lt;ul>
&lt;li>include the backlog in your report. For each story, list
&lt;ul>
&lt;li>its number/id&lt;/li>
&lt;li>its name&lt;/li>
&lt;li>storypoints&lt;/li>
&lt;li>sprint(s) it was/is in (eg. sprint3, or: sprint4(committed, but not completed) sprint5 (completed) etc.)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>include your level of done in each report, such that I don&amp;rsquo;t have to search for it. (you should have that starting with sprint4)&lt;/li>
&lt;li>for each story you&amp;rsquo;ve been working on, write down acceptance criteria.&lt;/li>
&lt;li>tests for the stories should be included both in level of done and the acceptance criteria.&lt;/li>
&lt;li>report on what worked, what didn&amp;rsquo;t, how you solved especially difficulties.&lt;/li>
&lt;li>for the described tasks, please include a link to the main file(s) you needed to change for that or make the changes clearly visible in a commit comment (e.g. &amp;ldquo;Story #38: created search box&amp;rdquo;) and note that in your report.&lt;/li>
&lt;li>Tag your project: &amp;ldquo;SPRINT6&amp;rdquo; and push it to github (or another git server). Provide a link in your report.&lt;/li>
&lt;li>Upload your PDF-Report to moodle. Your Report should describe what you did, problems you&amp;rsquo;ve encountered and how you solved them - and the project description, the backlog and the stories you worked on during the sprint. See the details above!&lt;/li>
&lt;/ul></description></item><item><title>Web Applications WS2019/2020 - Homework 8</title><link>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/week8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/m-wt1-webapplications/assignments/week8/</guid><description>&lt;h1 id="homework-for-week-8--sprint-4">Homework for Week 8 / Sprint 4&lt;/h1>
&lt;ol start="0">
&lt;li>If you haven&amp;rsquo;t done that yet, start testing your application.&lt;/li>
&lt;li>Define your level of done. &lt;a href="https://www.scrumalliance.org/community/articles/2008/september/what-is-definition-of-done-(dod)">see this article, for example.&lt;/a>&lt;/li>
&lt;li>Perform a Sprint Planning in your Team.&lt;/li>
&lt;li>Document the Tasks you identified for each of your stories.&lt;/li>
&lt;li>Decide on which stories you want to commit - that is, you are pretty sure you can complete till the next deadline.&lt;/li>
&lt;li>It&amp;rsquo;s ok to plan another story (or two) that you don&amp;rsquo;t yet commit on. Make sure to mark the stories clearly - which do you promise to deliver, which are an option?&lt;/li>
&lt;li>Work on the stories, preferably, if it is possible at all, the whole team on the first story, then the second. The defined tasks might help with that.&lt;/li>
&lt;li>Tag your project: &amp;ldquo;SPRINT4&amp;rdquo; and push it to github (or another git server). Provide a link in your report.&lt;/li>
&lt;li>Upload your PDF-Report to moodle. Your Report should describe what you did, problems you&amp;rsquo;ve encountered and how you solved them - and the project description, the backlog and the stories you worked on during the sprint.&lt;/li>
&lt;/ol></description></item><item><title>Web Applications WS2020/2021 - Tentative Schedule</title><link>https://bkleinen.github.io/classes/ws2020/m-wt1-webapplications/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/m-wt1-webapplications/schedule/</guid><description>&lt;h1 id="tentative-schedule">Tentative Schedule&lt;/h1>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Fri 09/10/2020&lt;/td>
 &lt;td style="text-align: left">Class Intro&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Fri 16/10/2020&lt;/td>
 &lt;td style="text-align: left">Design Sprint: Monday - Map &amp;amp; Target&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Fri 23/10/2020&lt;/td>
 &lt;td style="text-align: left">Design Sprint: Tuesday - Sketch&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Fri 30/10/2020&lt;/td>
 &lt;td style="text-align: left">Design Sprint: Wednesday - Decide&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Fri 06/11/2020&lt;/td>
 &lt;td style="text-align: left">Design Sprint: Thursday - Prototype&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Fri 13/11/2020&lt;/td>
 &lt;td style="text-align: left">Design Sprint: Friday - Test&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Fri 20/11/2020&lt;/td>
 &lt;td style="text-align: left">&amp;ndash; no class &amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Fri 27/11/2020&lt;/td>
 &lt;td style="text-align: left">Tech Pitch&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Fri 04/12/2020&lt;/td>
 &lt;td style="text-align: left">Development&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Fri 11/12/2020&lt;/td>
 &lt;td style="text-align: left">Development&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Fri 18/12/2020&lt;/td>
 &lt;td style="text-align: left">Development&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Fri 08/01/2021&lt;/td>
 &lt;td style="text-align: left">Development&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Fri 15/01/2021&lt;/td>
 &lt;td style="text-align: left">Development&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Fri 22/01/2021&lt;/td>
 &lt;td style="text-align: left">&amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Fri 29/01/2021&lt;/td>
 &lt;td style="text-align: left">Usability Assessment&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Fri 05/02/2021&lt;/td>
 &lt;td style="text-align: left">Security Assessment &amp;amp; Group Consultations&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">Fri 12/02/2021&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://showtime.f4.htw-berlin.de/">Showtime der Praxisprojekte&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Web Applications WS2020/2021 - Tentative Schedule</title><link>https://bkleinen.github.io/classes/ws2021/m-wt1-webapplications/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2021/m-wt1-webapplications/schedule/</guid><description>&lt;p>The schedule is, as always, tentative.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">The App&lt;/th>
 &lt;th style="text-align: left">Hand-Ins (mon before)&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Tue 12/10/2021&lt;/td>
 &lt;td style="text-align: left">Class Intro&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Tue 19/10/2021&lt;/td>
 &lt;td style="text-align: left">no class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Tue 26/10/2021&lt;/td>
 &lt;td style="text-align: left">Design Sprint: Monday - Map &amp;amp; Target&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Tue 02/11/2021&lt;/td>
 &lt;td style="text-align: left">Design Sprint: Tuesday - Sketch&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Tue 09/11/2021&lt;/td>
 &lt;td style="text-align: left">Design Sprint: Wednesday - Decide&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Tue 16/11/2021&lt;/td>
 &lt;td style="text-align: left">Design Sprint: Thursday - Prototype&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Tue 23/11/2021&lt;/td>
 &lt;td style="text-align: left">Design Sprint: Friday - Test&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Tue 30/11/2021&lt;/td>
 &lt;td style="text-align: left">Tech Pitch, Decision &amp;amp; Dev Planning&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Tue 07/12/2021&lt;/td>
 &lt;td style="text-align: left">(cancelled)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Tue 14/12/2021&lt;/td>
 &lt;td style="text-align: left">Development / CI/CD Pipeline&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Tue 21/12/2021&lt;/td>
 &lt;td style="text-align: left">Development / Containers&lt;/td>
 &lt;td style="text-align: left">Project Descriptions / Technical Challenge&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">52&lt;/td>
 &lt;td style="text-align: left">Tue 28/12/2021&lt;/td>
 &lt;td style="text-align: left">&amp;mdash; Vorlesungsfrei &amp;mdash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Tue 04/01/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Tue 11/01/2022&lt;/td>
 &lt;td style="text-align: left">Development / Usability&lt;/td>
 &lt;td style="text-align: left">10.1. Book Chapters for Review&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Tue 18/01/2022&lt;/td>
 &lt;td style="text-align: left">Development / Security&lt;/td>
 &lt;td style="text-align: left">17.1. (Peer-) Reviews of Book Chapters&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Tue 25/01/2022 PZ1&lt;/td>
 &lt;td style="text-align: left">Usability Assessment&lt;/td>
 &lt;td style="text-align: left">24.1.-7.2. 2. CI/CD Documentation 8. Documentation of Infrastructure-Part&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Tue 01/02/2022 PZ1&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">31.1. 5. Usability Assessments ~~Security Assessments ~~&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">Tue 08/02/2022 PZ1&lt;/td>
 &lt;td style="text-align: left">Group Consultations?&lt;/td>
 &lt;td style="text-align: left">7. Final Book Chapters&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Tue 15/02/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">9. Final Project Documentation&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Tue 22/02/2022&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;ol start="2">
&lt;li>CI/CD Documentation&lt;/li>
&lt;li>Project Descriptions / Technical Challenge&lt;/li>
&lt;li>CI/CD Documentation&lt;/li>
&lt;li>10.1. Book Chapters for Review&lt;/li>
&lt;li>17.1. (Peer-) Reviews of Book Chapters&lt;/li>
&lt;li>31.1. Usability Assessments
&lt;del>6. Security Assessments&lt;/del>&lt;/li>
&lt;li>Final Book Chapters&lt;/li>
&lt;li>Documentation of Infrastructure-Part&lt;/li>
&lt;li>Final Project Documentation&lt;/li>
&lt;/ol>
&lt;p>Verbuchungsfrist 1. PZ 28.2.&lt;/p></description></item><item><title>Web Applications WS2020/2021 - Sprint Day 1 - Monday</title><link>https://bkleinen.github.io/classes/ws2020/m-wt1-webapplications/sprint/day1-monday/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2020/m-wt1-webapplications/sprint/day1-monday/</guid><description>&lt;h1 id="day-1-monday-map">Day 1 (Monday): Map&lt;/h1>
&lt;ul>
&lt;li>how to: &lt;a href="https://www.thesprintbook.com/remote#map">https://www.thesprintbook.com/remote#map&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="schedule">Schedule&lt;/h1>
&lt;p>See the &lt;a href="https://static1.squarespace.com/static/56778f460ab377c981686546/t/56c2b6c337013bc7bcab14c7/1456958631313/Sprint+checklists.pdf">Checklist&lt;/a>&lt;/p>
&lt;h2 id="preparation">Preparation&lt;/h2>
&lt;ul>
&lt;li>Decide who will be the Decider and who the Facilitator&lt;/li>
&lt;li>Fill out the SprintPlanner for your Team and upload it to Moodle&lt;/li>
&lt;/ul>
&lt;h2 id="monday">Monday&lt;/h2>
&lt;h3 id="10-am">10 a.m.&lt;/h3>
&lt;ul>
&lt;li>Explain the Sprint (10min?)&lt;/li>
&lt;/ul>
&lt;h3 id="1015-ish">10:15-ish&lt;/h3>
&lt;ul>
&lt;li>Set a long-term goal&lt;/li>
&lt;li>List Sprint Questions (30min?)&lt;/li>
&lt;/ul>
&lt;h3 id="1130-ish">11:30-ish&lt;/h3>
&lt;ul>
&lt;li>Make a map: use &lt;a href="https://sprintstories.com/the-design-sprint-note-n-map-a9bf0ca88f51">The Design Sprint Note-n-Map&lt;/a> - (45min?)&lt;/li>
&lt;/ul>
&lt;p>sum: 90 min?&lt;/p>
&lt;h3 id="1pm">1pm&lt;/h3>
&lt;ul>
&lt;li>Lunch Break&lt;/li>
&lt;/ul>
&lt;h3 id="2pm">2pm&lt;/h3>
&lt;ul>
&lt;li>Ask the Experts: dies können Sie überspringen, bzw. stark kürzen,
indem die Teammitglieder sich den Hut &amp;ldquo;Experte&amp;rdquo; aufsetzen und von
ihren Erfahrungen berichten&lt;/li>
&lt;li>Explain and Create &amp;ldquo;How Might We Notes&amp;rdquo; (30min)&lt;/li>
&lt;li>Experts/Questions - Use &lt;a href="https://library.gv.com/note-and-vote-how-to-avoid-groupthink-in-meetings-24e829e43295">Note-and-vote&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="4-ish">4-ish&lt;/h3>
&lt;ul>
&lt;li>Organize and Vote on How Might We notes. (20min)&lt;/li>
&lt;/ul></description></item><item><title>Web Technology Schedule</title><link>https://bkleinen.github.io/classes/ss2017/media-programming-rails/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/media-programming-rails/schedule/</guid><description>&lt;p>Tentative. Aka subject to possible change.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic&lt;/th>
 &lt;th style="text-align: left">Assignment&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-06-21&lt;/td>
 &lt;td style="text-align: left">Ruby and Ruby on Rails, Project Start&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/week-1">Week1&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-07-05&lt;/td>
 &lt;td style="text-align: left">Active Record, Associations and Migrations&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/week-2">Week2&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-07-12&lt;/td>
 &lt;td style="text-align: left">Testing, Deployment Workflow&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/week-3">Week3&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-07-19&lt;/td>
 &lt;td style="text-align: left">User Authentication and Templates, AJAX&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/week-4-5">Week4&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Wed, 2017-07-26&lt;/td>
 &lt;td style="text-align: left">Open Practice&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/week-4-5">Week5&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Web Technology Schedule</title><link>https://bkleinen.github.io/classes/ws2016/media-programming-rails/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2016/media-programming-rails/schedule/</guid><description>&lt;p>Tentative. Aka subject to possible change.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Topic&lt;/th>
 &lt;th style="text-align: left">Assignment&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-10-12&lt;/td>
 &lt;td style="text-align: left">Rails Dash, Project Start&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/#week-1">Week1&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-10-19&lt;/td>
 &lt;td style="text-align: left">Active Record Associations and Migrations&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/#week-2">Week2&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-10-26&lt;/td>
 &lt;td style="text-align: left">Testing, Deployment Workflow, Ruby&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/#week-3">Week3&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-11-02&lt;/td>
 &lt;td style="text-align: left">User Authentication and Templates&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/#week-4">Week4&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Wed, 2016-11-09&lt;/td>
 &lt;td style="text-align: left">AJAX, SPA and APIs&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Week 1 - First Steps in Ruby and Ruby on Rails</title><link>https://bkleinen.github.io/classes/ss2017/media-programming-rails/assignments/week-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/media-programming-rails/assignments/week-1/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;ul>
&lt;li>install ruby and ruby on rails&lt;/li>
&lt;li>contribute to the ruby-learning project&lt;/li>
&lt;li>create a project vision and backlog&lt;/li>
&lt;li>work through the &amp;ldquo;getting started with rails&amp;rdquo;-guide&lt;/li>
&lt;/ul>
&lt;h2 id="0-install-ruby-and-ruby-on-rails">0. Install Ruby and Ruby on Rails&lt;/h2>
&lt;p>There are hints for installtation in the Getting Started with Rails Guide linked below.&lt;/p>
&lt;h2 id="1-contribute-to-the-ruby-learning-project">1. contribute to the ruby-learning project&lt;/h2>
&lt;p>In class, we will / did start a project to learn about ruby:
&lt;a href="https://github.com/htw-imi-m1-ss2017/ruby-learning">https://github.com/htw-imi-m1-ss2017/ruby-learning&lt;/a>&lt;/p>
&lt;p>Finish one topic per person.&lt;/p></description></item><item><title>Week 2 - Active Record Associations, Migrations and Views</title><link>https://bkleinen.github.io/classes/ss2017/media-programming-rails/assignments/week-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/media-programming-rails/assignments/week-2/</guid><description>&lt;h1 id="week-2">Week 2&lt;/h1>
&lt;h2 id="ongoing-contribute-to-the-ruby-learning-project">ongoing: Contribute to the Ruby-Learning project&lt;/h2>
&lt;p>If you haven&amp;rsquo;t already, contribute to the ruby learning project:&lt;/p>
&lt;p>&lt;a href="https://github.com/htw-imi-m1-ss2017/ruby-learning">https://github.com/htw-imi-m1-ss2017/ruby-learning&lt;/a>&lt;/p>
&lt;p>Finish one topic per person. Please send me your github login to add you as a contributor for the project.&lt;/p>
&lt;h2 id="active-record-associations-migrations-and-views">Active Record Associations, Migrations and Views&lt;/h2>
&lt;h3 id="reading-and-preparation">Reading and preparation&lt;/h3>
&lt;p>You should have enough background information for working on this week&amp;rsquo;s assignment based
on the &lt;a href="https://guides.rubyonrails.org/getting_started.html">Getting started with Rails&lt;/a> you worked through last week.&lt;/p></description></item><item><title>Week 3 - Testing, CI and CD</title><link>https://bkleinen.github.io/classes/ss2017/media-programming-rails/assignments/week-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/media-programming-rails/assignments/week-3/</guid><description>&lt;h1 id="week-3">Week 3&lt;/h1>
&lt;h2 id="reading">Reading&lt;/h2>
&lt;p>In week 3, we&amp;rsquo;ll work on Rails Testing. Please read through the Rails Testing
Guide and have a look at the Capybara DSL which we will use to write end-to-end feature
tests.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://guides.rubyonrails.org/testing.html">A Guide to Testing Rails Applications&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/jnicklas/capybara#the-dsl">Capybara&amp;rsquo;s DSL&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Also, we&amp;rsquo;ll set up continuous integration and continuous deployment using the services travis and heroku respectively.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.travis-ci.com/user/languages/ruby/">Travis for Ruby&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://devcenter.heroku.com/articles/getting-started-with-rails5">Rails 5 on Heroku&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="background">Background&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://martinfowler.com/articles/continuousIntegration.html">Martin Fowler: Continuous Integration&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.thoughtworks.com/continuous-integration">Continuous Integration - The digest on the Thoughtworks Page&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="testing-setting-up-a-deployment-workflow-and-some-ruby">Testing, Setting up a Deployment Workflow, and some Ruby&lt;/h2>
&lt;h3 id="working-on-your-project">Working on your project&lt;/h3>
&lt;p>again, see the &lt;a href="../../example-project/week-3">example project&lt;/a> for clarification on what to do.&lt;/p></description></item><item><title>Week 4&amp;5 - Login and AJAX</title><link>https://bkleinen.github.io/classes/ss2017/media-programming-rails/assignments/week-4-5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/media-programming-rails/assignments/week-4-5/</guid><description>&lt;p>In the last two weeks, you will add a simple login-mechanism and add a bit of JavaScript.&lt;/p>
&lt;h2 id="reading">Reading&lt;/h2>
&lt;p>For next week, read about rolling your own authentication in rails:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.railstutorial.org/book/basic_login">Michael Hartl&amp;rsquo;s Rails Tutorial Chapter 8&lt;/a>
Alternatively, you can decide to use a third-party framework like devise, for example devise ;-) for
authentication:&lt;/li>
&lt;li>&lt;a href="https://github.com/plataformatec/devise">Plataformatec: devise&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://guides.rubyonrails.org/working_with_javascript_in_rails.html">Working with JavaScript in Rails&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="authentication-login--logout">Authentication /Login &amp;amp; Logout&lt;/h2>
&lt;h3 id="for-hand-rolled-variant">For hand rolled variant:&lt;/h3>
&lt;ol>
&lt;li>Add a user model and set it up with encrypted password&lt;/li>
&lt;li>Add Sessions, Login and Logout to your application&lt;/li>
&lt;li>Restrict Access to Some Pages&lt;/li>
&lt;/ol>
&lt;p>Again, see the &lt;a href="../../example-project/week-4">example project&lt;/a> for clarification on what to do.
Note that this is not a complete thing, as you don&amp;rsquo;t need to implement signup. It&amp;rsquo;s just about
getting an idea about how session management and login in rails might work. For a real life web
application you should use one of the available frameworks, like devise.&lt;/p></description></item><item><title>WT2 Poster Session</title><link>https://bkleinen.github.io/classes/ws2018/wt2/postersession/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/wt2/postersession/</guid><description>&lt;h2 id="topics">Topics&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">Chapter&lt;/th>
 &lt;th style="text-align: left">Pages&lt;/th>
 &lt;th style="text-align: left">Who?&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">0&lt;/td>
 &lt;td style="text-align: left">Chapter 07: A Basis for Good Product Behavior&lt;/td>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Chapter 08: Introduction&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Chapter 09: Platform and Posture&lt;/td>
 &lt;td style="text-align: left">31&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Chapter 10: Optimizing for Intermediates&lt;/td>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Chapter 11: Orchestration and Flow&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Chapter 12: Reducing Work and Eliminating Excise&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">Chapter 13: Metaphors, Idioms, and Affordances&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">Chapter 14: Rethinking Data Entry, Storage, and Retrieval&lt;/td>
 &lt;td style="text-align: left">31&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">Chapter 15: Preventing Errors and Informing Decisions&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">Chapter 16: Designing for Different Needs&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">Chapter 17: Integrating Visual Design&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="timetable">Timetable&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Min&lt;/th>
 &lt;th style="text-align: left">Topic&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">30&lt;/td>
 &lt;td style="text-align: left">Introduction&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">60&lt;/td>
 &lt;td style="text-align: left">Reading &amp;amp; Self-Study&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Break&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">30&lt;/td>
 &lt;td style="text-align: left">Poster Creation&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">60&lt;/td>
 &lt;td style="text-align: left">Poster Session&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="relevanz-und-auswertung-chapter-08-17">Relevanz und Auswertung (Chapter 08-17)&lt;/h2>
&lt;ul>
&lt;li>Eine Klausur-Frage zu Ihrem eigenen Kapitel&lt;/li>
&lt;li>Eine Klausur-Frage zu einem von Ihnen gewählten anderen Kapitel&lt;/li>
&lt;/ul></description></item><item><title>WT2 Poster Session</title><link>https://bkleinen.github.io/classes/ws2019/wt2-usability/postersession/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/wt2-usability/postersession/</guid><description>&lt;h2 id="topics">Topics&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">Chapter&lt;/th>
 &lt;th style="text-align: left">Pages&lt;/th>
 &lt;th style="text-align: left">Who?&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">0&lt;/td>
 &lt;td style="text-align: left">Chapter 07: A Basis for Good Product Behavior&lt;/td>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">BK&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Chapter 08: Digital Etiquette&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Chapter 09: Platform and Posture&lt;/td>
 &lt;td style="text-align: left">31&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Chapter 10: Optimizing for Intermediates&lt;/td>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Chapter 11: Orchestration and Flow&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Chapter 12: Reducing Work and Eliminating Excise&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">Chapter 13: Metaphors, Idioms, and Affordances&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">Chapter 14: Rethinking Data Entry, Storage, and Retrieval&lt;/td>
 &lt;td style="text-align: left">31&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">Chapter 15: Preventing Errors and Informing Decisions&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">Chapter 16: Designing for Different Needs&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">Chapter 17: Integrating Visual Design&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="timetable">Timetable&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Min&lt;/th>
 &lt;th style="text-align: left">Topic&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">30&lt;/td>
 &lt;td style="text-align: left">Introduction&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">60&lt;/td>
 &lt;td style="text-align: left">Reading &amp;amp; Self-Study&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Break&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">30&lt;/td>
 &lt;td style="text-align: left">Poster Creation&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">60&lt;/td>
 &lt;td style="text-align: left">Poster Session&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="relevanz-und-auswertung-chapter-08-17">Relevanz und Auswertung (Chapter 08-17)&lt;/h2>
&lt;ul>
&lt;li>Eine Klausur-Frage zu Ihrem eigenen Kapitel&lt;/li>
&lt;li>Eine Klausur-Frage zu einem von Ihnen gewählten anderen Kapitel&lt;/li>
&lt;/ul></description></item><item><title>WT2 Usability WS 2019/20</title><link>https://bkleinen.github.io/classes/ws2019/wt2-usability/literature/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/wt2-usability/literature/</guid><description>&lt;!-- raw HTML omitted --></description></item><item><title>WT2 Usability WS 2019/20 Schedule</title><link>https://bkleinen.github.io/classes/ws2019/wt2-usability/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/wt2-usability/schedule/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Due&lt;/th>
 &lt;th style="text-align: left">Lecture&lt;/th>
 &lt;th style="text-align: left">Lab&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Fri 11/10/2019&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Introduction, Guidelines Usability Heuristics&lt;/td>
 &lt;td style="text-align: left">Topic Brainstorming&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Fri 18/10/2019&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Overview UCD Process, Introduction e-learning&lt;/td>
 &lt;td style="text-align: left">Finalization of Topics and Project Focus&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Fri 25/10/2019&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/assignment_01/#e-learning-usability-heuristics">Usability Heuristics e-learning&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Heuristical Analysis of Example Applications&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Fri 01/11/2019&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/assignment_01/">A1&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Contextual Inquiry. Required Reading: About Face Ch.1+2 (Moodle)&lt;/td>
 &lt;td style="text-align: left">Contextual Interviews &amp;amp; Interpretation Sessions&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Fri 08/11/2019&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Personas. Required Reading: About Face Ch. 3 (Moodle)&lt;/td>
 &lt;td style="text-align: left">Contextual Interviews &amp;amp; Interpretation Sessions&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Fri 15/11/2019&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Methods for User Research in User Centered Design&lt;/td>
 &lt;td style="text-align: left">Affinity&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Fri 22/11/2019&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Visioning and Product Concepts&lt;/td>
 &lt;td style="text-align: left">Affinity, Wall Walk and Personas.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Fri 29/11/2019&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/assignment_02/">A2&lt;/a>&lt;/td>
 &lt;td style="text-align: left">(ausgefallen)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Fri 06/12/2019&lt;/td>
 &lt;td style="text-align: left">RESCHEDULED!!&lt;/td>
 &lt;td style="text-align: left">RESCHEDULED to Fri 29/11/2019 and Fri 10/01/20 15:45-17:15&lt;/td>
 &lt;td style="text-align: left">RESCHEDULED&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Fri 13/12/2019&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../postersession/">Making Well-Behaved Products Poster Session (About Face Part II)&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Poster Session&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Fri 20/12/2019&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Storyboards and Paper Prototypes&lt;/td>
 &lt;td style="text-align: left">Visioning, Product Concepts, Storyboards&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Fri 10/01/2020&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/assignment_03/">A3&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Usability Testing 12:15-17:15!&lt;/td>
 &lt;td style="text-align: left">Usability Testing 12:15-17:15!!&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Fri 17/01/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Web Usabiltity&lt;/td>
 &lt;td style="text-align: left">Paper Prototypes Interviews&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Fri 24/01/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Contextual Design Roundup &amp;amp; Exam Preparation&lt;/td>
 &lt;td style="text-align: left">Exam Preparation &amp;amp; Moodle Trial Exam&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Fri 31/01/2020&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/assignment_04/">A4&lt;/a>&lt;/td>
 &lt;td style="text-align: left">SHOWTIME&lt;/td>
 &lt;td style="text-align: left">SHOWTIME&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">Wed, 2019-02-05&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Exam&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>Interface Design Principles /Don Norman: The Design of Everyday Things&lt;/p></description></item><item><title>WT2 WS 2018/19</title><link>https://bkleinen.github.io/classes/ws2018/wt2/literature/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/wt2/literature/</guid><description>&lt;!-- raw HTML omitted --></description></item><item><title>WT2 WS2018 Schedule</title><link>https://bkleinen.github.io/classes/ws2018/wt2/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2018/wt2/schedule/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">Due&lt;/th>
 &lt;th style="text-align: left">Lecture&lt;/th>
 &lt;th style="text-align: left">Lab&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-10-09&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Introduction, Guidelines Usability Heuristics&lt;/td>
 &lt;td style="text-align: left">Topic Brainstorming&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-10-16&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Overview UCD Process, Introduction e-learning&lt;/td>
 &lt;td style="text-align: left">Finalization of Topics and Project Focus&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-10-23&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/assignment_01/#e-learning-usability-heuristics">Usability Heuristics e-learning&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Heuristical Analysis of Example Applications&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-10-30&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/assignment_01/">A1&lt;/a>&lt;/td>
 &lt;td style="text-align: left">User Research and Modeling. Required Reading: About Face Ch.1+2 (Moodle)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-11-06&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">User Research and Modeling. Required Reading: About Face Ch.1+2 (Moodle)&lt;/td>
 &lt;td style="text-align: left">Persona Hypothesis &amp;amp; First User Interviews&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-11-13&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">(read Chapter 03 &amp;amp; 04 of UCD!) Interviews: As get Interviewed, Bs conduct the interview&lt;/td>
 &lt;td style="text-align: left">Interpretation Sessions&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-11-20&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Interviews: Bs get Interviewed, As conduct the interview&lt;/td>
 &lt;td style="text-align: left">Interpretation Sessions&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-11-27&lt;/td>
 &lt;td style="text-align: left">*&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">(read Chapter 03 of About Face!) User Modeling: Personas e-learning&lt;/td>
 &lt;td style="text-align: left">User Modeling&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-12-04&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/assignment_02/">A2&lt;/a>&lt;/td>
 &lt;td style="text-align: left">- will be rescheduled -&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-12-11&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Visioning and Product Concepts / Retrospective&lt;/td>
 &lt;td style="text-align: left">Visioning&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-12-18&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">- will be rescheduled -&lt;/td>
 &lt;td style="text-align: left">Visioning, Product Concepts Storyboarding&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Tue, 2019-01-08&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Storyboarding, Paper Prototypes&lt;/td>
 &lt;td style="text-align: left">Storyboarding&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Thu, 2019-01-10&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../postersession/">Making Well-Behaved Products Poster Session (About Face Part II)&lt;/a>, (extra-Termin)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Tue, 2019-01-15&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/assignment_03/">A3&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Usability Testing&lt;/td>
 &lt;td style="text-align: left">Paper Prototypes&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Tue, 2019-01-22&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Web Usability&lt;/td>
 &lt;td style="text-align: left">Paper Prototypes Interviews&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Tue, 2019-01-29&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Contextual Design Roundup, Exam Preparation&lt;/td>
 &lt;td style="text-align: left">Moodle Trial Exam, Paper Prototypes Interviews&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">Tue, 2019-02-05&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../assignments/assignment_04/">A4&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Exam&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>WT4 SS2017 - Report 1</title><link>https://bkleinen.github.io/classes/ss2017/user-centered-web-technology/labs/report-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/user-centered-web-technology/labs/report-1/</guid><description>&lt;h1 id="report-1-contextual-inquiry">Report 1: Contextual Inquiry&lt;/h1>
&lt;p>The first report is due before our next meeting: 31/05/2017, 22:00&lt;/p>
&lt;p>It should be submitted to moodle as pdf and contain the following parts:&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;ul>
&lt;li>Your topic, goal and names of all persons in your team&lt;/li>
&lt;/ul>
&lt;h2 id="documentation-of-contextual-inquiry">Documentation of Contextual Inquiry&lt;/h2>
&lt;ul>
&lt;li>Your Qualification Questions as well your&lt;/li>
&lt;li>Script for soliciting interviewees&lt;/li>
&lt;li>any other preparation for the interviews&lt;/li>
&lt;li>For each interview: (You should do at least 2 interviews per person in your team) the results of the interpretation session:
&lt;ul>
&lt;li>Student/User/Person Profile&lt;/li>
&lt;li>Affinity Notes captured in the interpretation session&lt;/li>
&lt;li>Any other Artefacts/Notes made during the interpretation session or that seem otherwise relevant&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="reflection">Reflection&lt;/h2>
&lt;p>A reflection on the work you did so far in the scheme of a retrospective:&lt;/p></description></item><item><title>WT4 SS2017 - Report 2</title><link>https://bkleinen.github.io/classes/ss2017/user-centered-web-technology/labs/report-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/user-centered-web-technology/labs/report-2/</guid><description>&lt;h1 id="report-2-visioning-and-product-concepts">Report 2: Visioning and Product Concepts&lt;/h1>
&lt;p>The second report is due Sunday, July 9th, 22:00&lt;/p>
&lt;p>It should be submitted to moodle as pdf and contain the following parts:&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;ul>
&lt;li>Your topic, goal and names of all persons in your team&lt;/li>
&lt;/ul>
&lt;h2 id="documentation-of-affinity-diagrams-and-wall-walk">Documentation of Affinity Diagrams and Wall Walk&lt;/h2>
&lt;ul>
&lt;li>Fotos of your Affinity Diagrams, summary of the main categories.&lt;/li>
&lt;li>List of Issues&lt;/li>
&lt;li>Hot Ideas&lt;/li>
&lt;/ul>
&lt;p>The latter list can be included as clearly readable fotos of the Flipcharts.&lt;/p></description></item><item><title>WT4 SS2017 - Report 3</title><link>https://bkleinen.github.io/classes/ss2017/user-centered-web-technology/labs/report-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2017/user-centered-web-technology/labs/report-3/</guid><description>&lt;p>The final Report should present your work for this course as a whole, with
an emphasis of the product concept as you&amp;rsquo;ve presented it in the final presentation.&lt;/p>
&lt;p>Please include the first two reports as well as your presentation slides,
compiling a coherent report on the complete project.&lt;/p>
&lt;p>The only new content would be the evaluation of the prototypes as a special
section, and probably a rewrite / addition to the product concept as a result of
this evaluation.&lt;/p></description></item><item><title>WT4 SS2020 - Report 1</title><link>https://bkleinen.github.io/classes/ss2020/m-wt4-ucd/reports/report-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/m-wt4-ucd/reports/report-1/</guid><description>&lt;h1 id="report-1-contextual-inquiry">Report 1: Contextual Inquiry&lt;/h1>
&lt;p>The first report is due before our next meeting: tbd, 22:00&lt;/p>
&lt;p>It should be submitted to moodle as pdf and contain the following parts:&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;ul>
&lt;li>Your topic, goal and names of all persons in your team&lt;/li>
&lt;/ul>
&lt;h2 id="documentation-of-contextual-inquiry">Documentation of Contextual Inquiry&lt;/h2>
&lt;ul>
&lt;li>any other preparation for the interviews&lt;/li>
&lt;li>For each interview: (You should do at least 2 interviews per person in your team) the results of the interpretation session:
&lt;ul>
&lt;li>Student/User/Person Profile&lt;/li>
&lt;li>Affinity Notes captured in the interpretation session&lt;/li>
&lt;li>Any other Artefacts/Notes made during the interpretation session or that seem otherwise relevant&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="reflection">Reflection&lt;/h2>
&lt;p>A reflection on the work you did so far in the scheme of a retrospective:&lt;/p></description></item><item><title>WT4 SS2020 - Report 2</title><link>https://bkleinen.github.io/classes/ss2020/m-wt4-ucd/reports/report-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/m-wt4-ucd/reports/report-2/</guid><description>&lt;h1 id="report-2-visioning-and-product-concepts">Report 2: Visioning and Product Concepts&lt;/h1>
&lt;p>The second report is due tbd, 22:00&lt;/p>
&lt;p>It should be submitted to moodle as pdf and contain the following parts:&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;ul>
&lt;li>Your topic, goal and names of all persons in your team&lt;/li>
&lt;/ul>
&lt;h2 id="documentation-of-affinity-diagrams-and-wall-walk">Documentation of Affinity Diagrams and Wall Walk&lt;/h2>
&lt;ul>
&lt;li>Fotos of your Affinity Diagrams, summary of the main categories.&lt;/li>
&lt;li>List of Issues&lt;/li>
&lt;li>Hot Ideas&lt;/li>
&lt;/ul>
&lt;p>The latter list can be included as clearly readable fotos of the Flipcharts.&lt;/p></description></item><item><title>WT4 SS2020 - Report 3</title><link>https://bkleinen.github.io/classes/ss2020/m-wt4-ucd/labs/report-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/m-wt4-ucd/labs/report-3/</guid><description>&lt;p>The final Report should present your work for this course as a whole, with
an emphasis of the product concept as you&amp;rsquo;ve presented it in the final presentation.&lt;/p>
&lt;p>Please include the first two reports as well as your presentation slides,
compiling a coherent report on the complete project.&lt;/p>
&lt;p>The only new content would be the evaluation of the prototypes as a special
section, and probably a rewrite / addition to the product concept as a result of
this evaluation.&lt;/p></description></item><item><title>WT4 SS2020 - Report 3</title><link>https://bkleinen.github.io/classes/ss2020/m-wt4-ucd/reports/report-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/m-wt4-ucd/reports/report-3/</guid><description>&lt;p>The third and final report should summarize your whole project,
starting with the visions and product concepts this term as this
was the start of your individual project.&lt;/p>
&lt;h2 id="paper-prototypes-in-their-final-state">Paper Prototypes in their final state&lt;/h2>
&lt;p>Include Fotos or other appropriate Form of Documentation of the paper prototypes,
Interpretation Notes of the Interview Sessions and Documentation /
Changes you made based on these interviews.&lt;/p>
&lt;p>Videos are also great to include, but please upload them to the mediathek or
somewhere else and just provide a link in your reports.&lt;/p></description></item><item><title>WT4 SS2020 - User-Centered Web Technology Schedule</title><link>https://bkleinen.github.io/classes/ss2020/m-wt4-ucd/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/m-wt4-ucd/schedule/</guid><description>&lt;h2 id="tentative-schedule---lab-topics-are-subject-to-change">Tentative Schedule - Lab Topics are subject to change!&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">Lab Assignment&lt;/th>
 &lt;th style="text-align: left">Work during the Week&lt;/th>
 &lt;th style="text-align: left">Milestones&lt;/th>
 &lt;th style="text-align: left">Reading&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">Thu 02/04/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Introduction&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Chapter 1 - Introduction &amp;amp; Chapter 2 - User Data Drives Design (27 + 11 P.)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Thu 09/04/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Interview Planning&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Chapter 3 - Principles of Contextual Inquiry (43-80, 37 P.)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Thu 16/04/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Groups, Topics, Planning of the Interviews&lt;/td>
 &lt;td style="text-align: left">User Interviews &amp;amp; Interpretation Sessions with peers&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Chapter 4 - The Interpretation Session (P81-105, 26P.)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Thu 23/04/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Interviewee Info, Qualification Questions&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Rapid Contextual Design Chapter 3 &amp;amp; 4&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Thu 30/04/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Interviews &amp;amp; Interpretation Sessions reflection&lt;/td>
 &lt;td style="text-align: left">User Interviews with Students, Interpretation Sessions&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Chapter 5 - From Data to Insight: Contextual Design Models &amp;amp; Chapter 6 - The Affinity Diagram (P127-146, 19 P.)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Thu 07/05/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Interviews &amp;amp; Interpretation Sessions&lt;/td>
 &lt;td style="text-align: left">User Interviews with Students, Interpretation Sessions&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Thu 14/05/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Write-Up&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Thu 21/05/2020&lt;/td>
 &lt;td style="text-align: left">Himmelfahrt&lt;/td>
 &lt;td style="text-align: left">no class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Thu 28/05/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Creating the Affinity Diagram&lt;/td>
 &lt;td style="text-align: left">Affinity Diagram cont'&lt;/td>
 &lt;td style="text-align: left">Report I&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Thu 04/06/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Affinity Diagram&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Chapter 10 - The Bridge From Data to Design: The Wall Walk (P. 253-275, 22P) &amp;amp; Chapter 11 Ideation&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Thu 11/06/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Wall Walk&lt;/td>
 &lt;td style="text-align: left">Create Visions &amp;amp; Product Concepts&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Excerpt from Chapters 7 &amp;amp; 8: Personas, Chapter 9 - Inventing the Next Product Concept (P. 233- 251, 18P. ) ,&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Thu 18/06/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Visioning, Planning of Paper Prototypes&lt;/td>
 &lt;td style="text-align: left">Paper Prototypes Creation&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Chapter 17 - Validating the Design (P. 413-441, 28P) (Paper Prototypes!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Thu 25/06/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Product Concepts&lt;/td>
 &lt;td style="text-align: left">Reading, Report&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Chapter 19 - Project Planning and execution&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Thu 02/07/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Creating Paper Prototypes, Evaluation&lt;/td>
 &lt;td style="text-align: left">Further Evaluation &amp;amp; Concept, Presentation Preparation&lt;/td>
 &lt;td style="text-align: left">Report II&lt;/td>
 &lt;td style="text-align: left">reread Chapter 11 Ideation for Visioning Session&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Thu 09/07/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Paper Prototype Interviews&lt;/td>
 &lt;td style="text-align: left">Paper Prototype Interviews&lt;/td>
 &lt;td style="text-align: left">Presentation&lt;/td>
 &lt;td style="text-align: left">read Chapter 17 - Validating the Design (Paper Prototypes!)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">Thu 16/07/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Final Presentations / Report&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Report III&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">30&lt;/td>
 &lt;td style="text-align: left">Thu 23/07/2020&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>WT4 SS2021 - Report 1</title><link>https://bkleinen.github.io/classes/ss2021/m-wt4-ucd/reports/report-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/m-wt4-ucd/reports/report-1/</guid><description>&lt;h1 id="report-1-contextual-inquiry">Report 1: Contextual Inquiry&lt;/h1>
&lt;p>The first report is due before our next meeting: tbd, 22:00&lt;/p>
&lt;p>It should be submitted to moodle as pdf and contain the following parts:&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;ul>
&lt;li>Your topic, goal and names of all persons in your team&lt;/li>
&lt;/ul>
&lt;h2 id="documentation-of-contextual-inquiry">Documentation of Contextual Inquiry&lt;/h2>
&lt;ul>
&lt;li>Your Qualification Questions as well your&lt;/li>
&lt;li>Script for soliciting interviewees&lt;/li>
&lt;li>any other preparation for the interviews&lt;/li>
&lt;li>For each interview: (You should do at least 2 interviews per person in your team) the results of the interpretation session:
&lt;ul>
&lt;li>Student/User/Person Profile&lt;/li>
&lt;li>Affinity Notes captured in the interpretation session&lt;/li>
&lt;li>Any other Artefacts/Notes made during the interpretation session or that seem otherwise relevant&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="reflection">Reflection&lt;/h2>
&lt;p>A reflection on the work you did so far in the scheme of a retrospective:&lt;/p></description></item><item><title>WT4 SS2021 - Report 2</title><link>https://bkleinen.github.io/classes/ss2021/m-wt4-ucd/reports/report-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/m-wt4-ucd/reports/report-2/</guid><description>&lt;h1 id="report-2-affinity-diagram-and-wall-walk">Report 2: Affinity Diagram and Wall Walk&lt;/h1>
&lt;p>It should be submitted to moodle as pdf and contain the following parts:&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;ul>
&lt;li>Your topic, goal and names of all persons in your team&lt;/li>
&lt;/ul>
&lt;h2 id="documentation-of-affinity-diagrams-and-wall-walk">Documentation of Affinity Diagrams and Wall Walk&lt;/h2>
&lt;ul>
&lt;li>Slide Show to present your Affinity. See the caption on Page 204 in Rapid Contextual Design,
&amp;ldquo;Comunicating with slide shows - the language of managers and corporations&amp;rdquo; for
an suggestion on how to present the user data from the affinity in a slide show.&lt;/li>
&lt;li>List of Issues&lt;/li>
&lt;li>List Hot Ideas&lt;/li>
&lt;li>List of Technologies&lt;/li>
&lt;/ul>
&lt;h2 id="reflection">Reflection&lt;/h2>
&lt;p>A reflection on the work you did so far in the scheme of a retrospective:&lt;/p></description></item><item><title>WT4 SS2021 - Report 3</title><link>https://bkleinen.github.io/classes/ss2021/m-wt4-ucd/reports/report-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/m-wt4-ucd/reports/report-3/</guid><description>&lt;h1 id="report-3-visioning-and-product-concepts">Report 3: Visioning and Product Concepts&lt;/h1>
&lt;p>It should be submitted to moodle as pdf and contain the following parts:&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;ul>
&lt;li>Your topic, goal and names of all persons in your team&lt;/li>
&lt;/ul>
&lt;h2 id="personas">Personas&lt;/h2>
&lt;ul>
&lt;li>include your Personas.&lt;/li>
&lt;/ul>
&lt;h2 id="visioning">Visioning&lt;/h2>
&lt;p>Document the&lt;/p>
&lt;ul>
&lt;li>Visions developed,&lt;/li>
&lt;li>their structured evaluation,&lt;/li>
&lt;/ul>
&lt;h1 id="product-concepts">Product Concepts&lt;/h1>
&lt;ul>
&lt;li>the Product Concept and the&lt;/li>
&lt;li>results of the cool drilldown.&lt;/li>
&lt;/ul>
&lt;p>If Fotos of your Flipcharts/Artefacts are legible and speak for their own,
they are sufficient.&lt;/p></description></item><item><title>WT4 SS2021 - Report 4</title><link>https://bkleinen.github.io/classes/ss2021/m-wt4-ucd/reports/report-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/m-wt4-ucd/reports/report-4/</guid><description>&lt;h1 id="report-4-prototype-evaluation-and-summary">Report 4: Prototype Evaluation and Summary&lt;/h1>
&lt;p>This report should summarize your whole project,
starting with the visions and product concepts this term as this
was the start of your individual project.&lt;/p>
&lt;h2 id="paper-prototypes-in-their-final-state">Paper Prototypes in their final state&lt;/h2>
&lt;p>Include Fotos or other appropriate Form of Documentation of the paper prototypes,
Interpretation Notes of the Interview Sessions and Documentation /
Changes you made based on these interviews.&lt;/p>
&lt;p>Videos are also great to include, but please upload them to the mediathek or
somewhere else and just provide a link in your reports.&lt;/p></description></item><item><title>WT4 SS2021 - User-Centered Web Technology Schedule</title><link>https://bkleinen.github.io/classes/ss2021/m-wt4-ucd/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/m-wt4-ucd/schedule/</guid><description>&lt;h2 id="tentative-schedule---definitive-only-for-the-week-to-come">Tentative Schedule - definitive only for the week to come.&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Reading Schedule (Tentative)&lt;/th>
 &lt;th style="text-align: left">Work during the Week&lt;/th>
 &lt;th style="text-align: left">Course Meeting&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">Fri 09/04/2021&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://www.youtube.com/watch?v=e3vxW1SiNSU">Video: Karen Holtzblatt - Contextual Design &amp;amp; The Cool Concepts&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://www.witops.org/ux-yall-2020/">Karen Holtzblatt: UX Y’All 2020 – Remote Contextual Design&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Introduction to class&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Fri 16/04/2021&lt;/td>
 &lt;td style="text-align: left">Chapter 1 - Introduction &amp;amp; Chapter 2 - User Data Drives Design (27 + 11 P.)&lt;/td>
 &lt;td style="text-align: left">Interview logistics&lt;/td>
 &lt;td style="text-align: left">Finalizaton of Topics &amp;amp; Groups&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Fri 23/04/2021&lt;/td>
 &lt;td style="text-align: left">Chapter 3 - Principles of Contextual Inquiry (43-80, 37 P.)&lt;/td>
 &lt;td style="text-align: left">Interview Planning &amp;amp; Preparation (Interviewee Info, Qualification Questions )&lt;/td>
 &lt;td style="text-align: left">Practice Interviews&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Fri 30/04/2021&lt;/td>
 &lt;td style="text-align: left">Chapter 4 - The Interpretation Session (P81-105, 26P.)&lt;/td>
 &lt;td style="text-align: left">Interviewees recruitement&lt;/td>
 &lt;td style="text-align: left">Practice Interpretation Session&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Fri 07/05/2021&lt;/td>
 &lt;td style="text-align: left">Rapid Contextual Design Chapter 3 &amp;amp; 4&lt;/td>
 &lt;td style="text-align: left">Interviews &amp;amp; Interpretation Sessions&lt;/td>
 &lt;td style="text-align: left">Lernteamcoaching&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Fri 14/05/2021&lt;/td>
 &lt;td style="text-align: left">Vorlesungsfrei&lt;/td>
 &lt;td style="text-align: left">Interviews &amp;amp; Interpretation Sessions&lt;/td>
 &lt;td style="text-align: left">no class, Report 1 due 17/5/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Fri 21/05/2021&lt;/td>
 &lt;td style="text-align: left">Chapter 5 - From Data to Insight: Contextual Design Models &amp;amp; Chapter 6 - The Affinity Diagram (P127-146, 19 P.)&lt;/td>
 &lt;td style="text-align: left">Affinity Diagram&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Fri 28/05/2021&lt;/td>
 &lt;td style="text-align: left">Chapter 10 - The Bridge From Data to Design: The Wall Walk (P. 253-275, 22P)&lt;/td>
 &lt;td style="text-align: left">Wall Walk&lt;/td>
 &lt;td style="text-align: left">Wall Walk&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Fri 04/06/2021&lt;/td>
 &lt;td style="text-align: left">Chapter 11 Ideation for Visioning Session Excerpt from Chapters 7 &amp;amp; 8: Personas, Chapter 9 - Inventing the Next Product Concept (P. 233- 251, 18P. )&lt;/td>
 &lt;td style="text-align: left">Create Visions &amp;amp; Product Concepts&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Fri 11/06/2021&lt;/td>
 &lt;td style="text-align: left">Chapter 12 The Challenge of Product Design&lt;/td>
 &lt;td style="text-align: left">Create Visions &amp;amp; Product Concepts&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Fri 18/06/2021&lt;/td>
 &lt;td style="text-align: left">Chapter 17 - Validating the Design (P. 413-441, 28P) (Paper Prototypes!)&lt;/td>
 &lt;td style="text-align: left">Paper Prototypes&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Fri 25/06/2021&lt;/td>
 &lt;td style="text-align: left">Chapter 19 - Project Planning and execution&lt;/td>
 &lt;td style="text-align: left">Paper Prototypes, maybe Interviews&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Fri 02/07/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Paper Prototype Interviews&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Fri 09/07/2021&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Write Up&lt;/td>
 &lt;td style="text-align: left">Project Presentations&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Fri 16/07/2021&lt;/td>
 &lt;td style="text-align: left">Write Up&lt;/td>
 &lt;td style="text-align: left">Showtime/Write Up&lt;/td>
 &lt;td style="text-align: left">Showtime&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>WTAT1 Literature</title><link>https://bkleinen.github.io/classes/ss2020/wtat1/literature/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/wtat1/literature/</guid><description>&lt;p>You will develop an application using the MERN - Stack: Mongo, Express, React and Node.&lt;/p>
&lt;p>During the Term, we will mainly use these books:&lt;/p>
&lt;h2 id="mern-stack">MERN Stack&lt;/h2>
&lt;ul>
&lt;li>Fischer, Ludovico (2017): React for Real. Raleigh: The Pragmatic Bookshelf.&lt;/li>
&lt;li>Redmond, Eric, Wilson, Jim R. (2012): Seven Databases in Seven Weeks. Raleigh: The Pragmatic Bookshelf.&lt;/li>
&lt;li>Wexler, Jonathan (2019): Get Programming with Node.js. Shelter Island: Manning.
&lt;ul>
&lt;li>&lt;a href="https://github.com/JonathanWexler/get-programming-with-nodejs">Source Code for this book on Github&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="agile-development-and-scrum">Agile Development and Scrum:&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.scrumalliance.org/learn-about-scrum/scrum-elearning-series">Scrum Foundations eLearning Series on scrumalliance.org&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.scrumguides.org/">The Scrum Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="javascript">JavaScript&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://eloquentjavascript.net/">Eloquent JavaScript 3rd Edition&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.w3schools.com/js/">JavaScript Tutorial w3schools&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>WTAT1 Literature</title><link>https://bkleinen.github.io/classes/ss2021/wtat1/literature/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/wtat1/literature/</guid><description>&lt;h1 id="literature-and-resources">Literature and Resources&lt;/h1>
&lt;h2 id="textbook-for-node-express-and-mongo">Textbook for Node, Express and Mongo&lt;/h2>
&lt;ul>
&lt;li>Wexler, Jonathan (2019): Get Programming with Node.js. Shelter Island: Manning.
&lt;ul>
&lt;li>&lt;a href="https://github.com/JonathanWexler/get-programming-with-nodejs">Source Code for this book on Github&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="javascript">JavaScript&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide">Mozilla Developer Network - JavaScript Guide&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://eloquentjavascript.net/">Eloquent JavaScript 3rd Edition&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.w3schools.com/js/">JavaScript Tutorial w3schools&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="vue">Vue&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://vuejs.org/v2/guide/">Documentation on vue.js site&lt;/a> - concrete parts will be assigned to the vue sprints&lt;/li>
&lt;/ul>
&lt;h2 id="agile-development-and-scrum">Agile Development and Scrum:&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.scrumalliance.org/learn-about-scrum/scrum-elearning-series">Scrum Foundations eLearning Series on scrumalliance.org&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.scrumguides.org/">The Scrum Guide&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>WTAT1 Literature</title><link>https://bkleinen.github.io/classes/ss2022/wtat1/literature/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/wtat1/literature/</guid><description>&lt;h5 id="textbook-for-node-express-and-mongo">Textbook for Node, Express and Mongo&lt;/h5>
&lt;ul>
&lt;li>Wexler, Jonathan (2019): Get Programming with Node.js. Shelter Island: Manning.
&lt;ul>
&lt;li>&lt;a href="https://github.com/JonathanWexler/get-programming-with-nodejs">Source Code for this book on Github&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5 id="javascript">JavaScript&lt;/h5>
&lt;ul>
&lt;li>&lt;a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide">Mozilla Developer Network - JavaScript Guide&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://eloquentjavascript.net/">Eloquent JavaScript 3rd Edition&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.w3schools.com/js/">JavaScript Tutorial w3schools&lt;/a>&lt;/li>
&lt;/ul>
&lt;h5 id="express">Express&lt;/h5>
&lt;ul>
&lt;li>&lt;a href="https://expressjs.com/">Express.js Home Page&lt;/a>&lt;/li>
&lt;/ul>
&lt;h5 id="mongo-db">Mongo DB&lt;/h5>
&lt;ul>
&lt;li>&lt;a href="https://www.mongodb.com/">Mongo DB Home Page&lt;/a>&lt;/li>
&lt;/ul>
&lt;h5 id="agile-development-and-scrum">Agile Development and Scrum:&lt;/h5>
&lt;ul>
&lt;li>&lt;a href="https://www.scrumalliance.org/learn-about-scrum/scrum-elearning-series">Scrum Foundations eLearning Series on scrumalliance.org&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.scrumguides.org/">The Scrum Guide&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>WTAT1 Literature</title><link>https://bkleinen.github.io/classes/ss2023/wtat1/literature/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/wtat1/literature/</guid><description>&lt;h5 id="textbook-for-node-express-and-mongo">Textbook for Node, Express and Mongo&lt;/h5>
&lt;ul>
&lt;li>Wexler, Jonathan (2019): Get Programming with Node.js. Shelter Island: Manning.
&lt;ul>
&lt;li>&lt;a href="https://github.com/JonathanWexler/get-programming-with-nodejs">Source Code for this book on Github&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5 id="javascript">JavaScript&lt;/h5>
&lt;ul>
&lt;li>&lt;a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide">Mozilla Developer Network - JavaScript Guide&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://eloquentjavascript.net/">Eloquent JavaScript 3rd Edition&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.w3schools.com/js/">JavaScript Tutorial w3schools&lt;/a>&lt;/li>
&lt;/ul>
&lt;h5 id="express">Express&lt;/h5>
&lt;ul>
&lt;li>&lt;a href="https://expressjs.com/">Express.js Home Page&lt;/a>&lt;/li>
&lt;/ul>
&lt;h5 id="mongo-db">Mongo DB&lt;/h5>
&lt;ul>
&lt;li>&lt;a href="https://www.mongodb.com/">Mongo DB Home Page&lt;/a>&lt;/li>
&lt;/ul>
&lt;h5 id="agile-development-and-scrum">Agile Development and Scrum:&lt;/h5>
&lt;ul>
&lt;li>&lt;a href="https://www.scrumalliance.org/learn-about-scrum/scrum-elearning-series">Scrum Foundations eLearning Series on scrumalliance.org&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.scrumguides.org/">The Scrum Guide&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>WTAT1 Schedule</title><link>https://bkleinen.github.io/classes/ss2020/wtat1/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2020/wtat1/schedule/</guid><description>&lt;p>Tentative Schedule.
Agile Track: please read or watch the according material in &lt;a href="https://www.scrumguides.org/">the Scrum Guide&lt;/a>.
Lecture: Brief input about the topic as BBB lecture.
Tech Track: Please read the provided material (moodle) before the lecture, such that you can start with the according sprint right away.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Agile Track&lt;/th>
 &lt;th style="text-align: left">Lecture&lt;/th>
 &lt;th style="text-align: left">Tech Track (According Sprints are due one week later)&lt;/th>
 &lt;th style="text-align: left">Due&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Tue 07/04/2020&lt;/td>
 &lt;td style="text-align: left">Intro&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Node.js Unit 0 - Installation and Setup&lt;/td>
 &lt;td style="text-align: left">A0: Project Ideas&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Tue 14/04/2020&lt;/td>
 &lt;td style="text-align: left">Product Backlog&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">A1: Proposals&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Tue 21/04/2020&lt;/td>
 &lt;td style="text-align: left">Scrum Theory and Values&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Node.js Unit 1 - Getting Started&lt;/td>
 &lt;td style="text-align: left">Backlog&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Tue 28/04/2020&lt;/td>
 &lt;td style="text-align: left">Scrum Roles&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Node.js Unit 2 - Express.js&lt;/td>
 &lt;td style="text-align: left">Sprint 1 - First Node App&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Tue 05/05/2020&lt;/td>
 &lt;td style="text-align: left">Scrum Events&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Node.js Unit 3 - Database and the first Model&lt;/td>
 &lt;td style="text-align: left">Sprint 2 - Express&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Tue 12/05/2020&lt;/td>
 &lt;td style="text-align: left">Scrum Artifacts&lt;/td>
 &lt;td style="text-align: left">CI/CD&lt;/td>
 &lt;td style="text-align: left">Node.js Unit 8 - Test &amp;amp; Deployment&lt;/td>
 &lt;td style="text-align: left">Sprint 3 - Model&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Tue 19/05/2020&lt;/td>
 &lt;td style="text-align: left">Distance Retrospective I&lt;/td>
 &lt;td style="text-align: left">Retro&lt;/td>
 &lt;td style="text-align: left">Node.js Unit 4 - User Model Part I&lt;/td>
 &lt;td style="text-align: left">Sprint 4 - CI/CD&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Tue 26/05/2020&lt;/td>
 &lt;td style="text-align: left">TBD&lt;/td>
 &lt;td style="text-align: left">Restful&lt;/td>
 &lt;td style="text-align: left">Node.js Unit 4 - User Model Part II&lt;/td>
 &lt;td style="text-align: left">(Sprint 5 - CR)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Tue 02/06/2020&lt;/td>
 &lt;td style="text-align: left">TBD&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Node.js Unit 5 - Authentication&lt;/td>
 &lt;td style="text-align: left">Sprint 5 - UD&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Tue 09/06/2020&lt;/td>
 &lt;td style="text-align: left">TBD&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Node.js Unit 6 - Building an API&lt;/td>
 &lt;td style="text-align: left">Sprint 6 - Authentication&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Tue 16/06/2020&lt;/td>
 &lt;td style="text-align: left">TBD&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Node.js Unit 7 - Real-Time Communication&lt;/td>
 &lt;td style="text-align: left">Sprint 7 - API&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Tue 23/06/2020&lt;/td>
 &lt;td style="text-align: left">Distance Retrospective II&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">React 1 - TBD&lt;/td>
 &lt;td style="text-align: left">Sprint 9 - Socket.io&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">Tue 30/06/2020&lt;/td>
 &lt;td style="text-align: left">TBD&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">React 2 - TBD&lt;/td>
 &lt;td style="text-align: left">Sprint 10 - React 1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">Tue 07/07/2020&lt;/td>
 &lt;td style="text-align: left">Trial Exam&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">React 3 - TBD&lt;/td>
 &lt;td style="text-align: left">Sprint 11 - React 2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">Tue 14/07/2020&lt;/td>
 &lt;td style="text-align: left">Exam&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Sprint 12 - React 3&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>WTAT1 Schedule Summer Term 2021</title><link>https://bkleinen.github.io/classes/ss2021/wtat1/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2021/wtat1/schedule/</guid><description>&lt;p>This is to be read as follows:
For example: During Week 2 of the term - which is Calendar Week 15 - you need to study the agile and tech topic, first individually and then within the team. Furthermore, you need to work on the corresponding sprint and turn in the sprint report by Friday, 22:00&lt;/p>
&lt;p>Reading Material for the Tech Topics can be found in Moodle.
For the Agile Topics, read the &lt;a href="https://scrumguides.org/index.html">scrum guides&lt;/a> and &lt;a href="https://www.scrumalliance.org/learn-about-scrum/scrum-elearning-series/">watch these short videos&lt;/a>.&lt;/p></description></item><item><title>WTAT1 Schedule Summer Term 2022</title><link>https://bkleinen.github.io/classes/ss2022/wtat1/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2022/wtat1/schedule/</guid><description>&lt;h5 id="overview-summer-term-2022">Overview Summer Term 2022&lt;/h5>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Agile Topic&lt;/th>
 &lt;th style="text-align: left">Tech Topic&lt;/th>
 &lt;th style="text-align: left">Development&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Time&lt;/th>
 &lt;th style="text-align: left">Presentations/Class Meeting&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">Scrum Theory and Values&lt;/td>
 &lt;td style="text-align: left">Unit 0 - Installation and Setup&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 08/04/2022&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Introduction to Class, Scrum Overview, Product Backlogs&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">** Good Friday **&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 15/04/2022&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">No class meeting&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Scrum Artifacts: Product Backlog&lt;/td>
 &lt;td style="text-align: left">Unit 1 - Getting Started&lt;/td>
 &lt;td style="text-align: left">Sprint 01 - Static Node App&lt;/td>
 &lt;td style="text-align: left">Fri 22/04/2022&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Project Proposals and Teams, Presentation Assignments, Node.js&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Scrum Roles: Product Owner&lt;/td>
 &lt;td style="text-align: left">Unit 2 - Express.js Part I&lt;/td>
 &lt;td style="text-align: left">Sprint 02 - Express Routes&lt;/td>
 &lt;td style="text-align: left">Fri 29/04/2022&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic 1, Design Patterns&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Scrum Roles: Scrum Master&lt;/td>
 &lt;td style="text-align: left">Unit 2 - Express.js Part II&lt;/td>
 &lt;td style="text-align: left">Sprint 03 - Express Views&lt;/td>
 &lt;td style="text-align: left">Fri 06/05/2022&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic 2, Data Models, Database Connectivity&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Scrum Event: Daily Stand Up&lt;/td>
 &lt;td style="text-align: left">Unit 3 - Database Access Part I&lt;/td>
 &lt;td style="text-align: left">Sprint 04 - Mongo&lt;/td>
 &lt;td style="text-align: left">Fri 13/05/2022&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic 3, Concurrency and Race Conditions&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">Scrum Artifacts: Sprint Backlog&lt;/td>
 &lt;td style="text-align: left">Unit 3 - Database Access Part II&lt;/td>
 &lt;td style="text-align: left">Sprint 05 - Promises&lt;/td>
 &lt;td style="text-align: left">Fri 20/05/2022&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic 4, Big Data Persistence&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">** Pentecost **&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 27/05/2022&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">No class meeting&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Scrum Event: Planning&lt;/td>
 &lt;td style="text-align: left">Unit 4 - User Model Part I&lt;/td>
 &lt;td style="text-align: left">Sprint 06 - Complex Models&lt;/td>
 &lt;td style="text-align: left">Fri 03/06/2022&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic 5, Data Consistency Strategies&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Scrum Event: Estimation&lt;/td>
 &lt;td style="text-align: left">Unit 4 - User Model Part II&lt;/td>
 &lt;td style="text-align: left">Sprint 07 - CRUD&lt;/td>
 &lt;td style="text-align: left">Fri 10/06/2022&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic 6, 12factor Applications&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Scrum Artifacts: Definition of Done&lt;/td>
 &lt;td style="text-align: left">Unit 5 - Authentication Part I&lt;/td>
 &lt;td style="text-align: left">Sprint 08 - Login&lt;/td>
 &lt;td style="text-align: left">Fri 17/06/2022&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic 7, Common Security Protocols&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Scrum Event: Sprint Review&lt;/td>
 &lt;td style="text-align: left">Unit 5 - Authentication Part II&lt;/td>
 &lt;td style="text-align: left">Sprint 09 - Passport&lt;/td>
 &lt;td style="text-align: left">Fri 24/06/2022&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic 8, Microservice Architectures&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Scrum Event: Retrospective&lt;/td>
 &lt;td style="text-align: left">Unit 6 - Building an API Part I&lt;/td>
 &lt;td style="text-align: left">Sprint 10 - REST API&lt;/td>
 &lt;td style="text-align: left">Fri 01/07/2022&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic 9, JWT&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Unit 6 - Building an API Part II&lt;/td>
 &lt;td style="text-align: left">Sprint 11 - Security&lt;/td>
 &lt;td style="text-align: left">Fri 08/07/2022&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic 10, gRPC&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Unit 7 - Real-Time Communication&lt;/td>
 &lt;td style="text-align: left">Sprint 12 - Socket.io&lt;/td>
 &lt;td style="text-align: left">Fri 15/07/2022&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic 11, High Availability&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Unit 8 - Test &amp;amp; Deployment&lt;/td>
 &lt;td style="text-align: left">Sprint 13 - Heroku&lt;/td>
 &lt;td style="text-align: left">Fri 22/07/2022&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Exam&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>This table is to be read as follows:
During week 2 of the term - which is calendar week 16 - you need to study the agile and tech topic, first individually and then within the team. Furthermore, you need to work on the corresponding sprint and turn in the sprint report by Friday of that week, 22:00h.&lt;/p></description></item><item><title>WTAT1 Schedule Summer Term 2023</title><link>https://bkleinen.github.io/classes/ss2023/wtat1/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2023/wtat1/schedule/</guid><description>&lt;h5 id="overview-summer-term-2023">Overview Summer Term 2023&lt;/h5>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Agile Topic&lt;/th>
 &lt;th style="text-align: left">Tech Topic&lt;/th>
 &lt;th style="text-align: left">Development&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Time&lt;/th>
 &lt;th style="text-align: left">Presentations/Class Topics&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">Scrum Theory and Values&lt;/td>
 &lt;td style="text-align: left">Unit 0 - Installation and Setup&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 14/04/2023&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Introduction to Class, Scrum Overview, Product Backlogs&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">Scrum Artifacts: Product Backlog&lt;/td>
 &lt;td style="text-align: left">Unit 1 - Getting Started&lt;/td>
 &lt;td style="text-align: left">Sprint 01 - Static Node App&lt;/td>
 &lt;td style="text-align: left">Fri 21/04/2023&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Project Proposals and Teams, Presentation Assignments, Node.js&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">Scrum Roles: Product Owner&lt;/td>
 &lt;td style="text-align: left">Unit 2 - Express.js Part I&lt;/td>
 &lt;td style="text-align: left">Sprint 02 - Express Routes&lt;/td>
 &lt;td style="text-align: left">Fri 28/04/2023&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic A, Design Patterns&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">Scrum Roles: Scrum Master&lt;/td>
 &lt;td style="text-align: left">Unit 2 - Express.js Part II&lt;/td>
 &lt;td style="text-align: left">Sprint 03 - Express Views&lt;/td>
 &lt;td style="text-align: left">Fri 05/05/2023&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic B, Data Models, Database Connectivity&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">19&lt;/td>
 &lt;td style="text-align: left">Scrum Event: Daily Stand Up&lt;/td>
 &lt;td style="text-align: left">Unit 3 - Database Access Part I&lt;/td>
 &lt;td style="text-align: left">Sprint 04 - Mongo&lt;/td>
 &lt;td style="text-align: left">Fri 12/05/2023&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic C, Concurrency and Race Conditions&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">20&lt;/td>
 &lt;td style="text-align: left">** Pentecost **&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 19/05/2023&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">No class&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">21&lt;/td>
 &lt;td style="text-align: left">Scrum Artifacts: Sprint Backlog&lt;/td>
 &lt;td style="text-align: left">Unit 3 - Database Access Part II&lt;/td>
 &lt;td style="text-align: left">Sprint 05 - Promises&lt;/td>
 &lt;td style="text-align: left">Fri 26/05/2023&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic D, Big Data Persistence&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">22&lt;/td>
 &lt;td style="text-align: left">Scrum Event: Planning&lt;/td>
 &lt;td style="text-align: left">Unit 4 - User Model Part I&lt;/td>
 &lt;td style="text-align: left">Sprint 06 - Complex Models&lt;/td>
 &lt;td style="text-align: left">Fri 02/06/2023&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic E, Data Consistency Strategies&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">23&lt;/td>
 &lt;td style="text-align: left">Scrum Event: Estimation&lt;/td>
 &lt;td style="text-align: left">Unit 4 - User Model Part II&lt;/td>
 &lt;td style="text-align: left">Sprint 07 - CRUD&lt;/td>
 &lt;td style="text-align: left">Fri 09/06/2023&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic F, 12factor Applications&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">24&lt;/td>
 &lt;td style="text-align: left">Scrum Artifacts: Definition of Done&lt;/td>
 &lt;td style="text-align: left">Unit 5 - Authentication Part I&lt;/td>
 &lt;td style="text-align: left">Sprint 08 - Login&lt;/td>
 &lt;td style="text-align: left">Fri 16/06/2023&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic G, Common Security Protocols&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">25&lt;/td>
 &lt;td style="text-align: left">Scrum Event: Sprint Review&lt;/td>
 &lt;td style="text-align: left">Unit 5 - Authentication Part II&lt;/td>
 &lt;td style="text-align: left">Sprint 09 - Passport&lt;/td>
 &lt;td style="text-align: left">Fri 23/06/2023&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic H, Microservice Architectures&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">26&lt;/td>
 &lt;td style="text-align: left">Scrum Event: Retrospective&lt;/td>
 &lt;td style="text-align: left">Unit 6 - Building an API Part I&lt;/td>
 &lt;td style="text-align: left">Sprint 10 - REST API&lt;/td>
 &lt;td style="text-align: left">Fri 30/06/2023&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic I, JWT&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">27&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Unit 6 - Building an API Part II&lt;/td>
 &lt;td style="text-align: left">Sprint 11 - Security&lt;/td>
 &lt;td style="text-align: left">Fri 07/07/2023&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic J, gRPC&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Unit 7 - Real-Time Communication&lt;/td>
 &lt;td style="text-align: left">Sprint 12 - Socket.io&lt;/td>
 &lt;td style="text-align: left">Fri 14/07/2023&lt;/td>
 &lt;td style="text-align: left">15:45-17:15&lt;/td>
 &lt;td style="text-align: left">Presentation Topic D, Cloud Native Development&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">29&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 21/07/2023&lt;/td>
 &lt;td style="text-align: left">15:45-18:45&lt;/td>
 &lt;td style="text-align: left">Exam (Raum WH C355)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">38&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri 22/09/2023&lt;/td>
 &lt;td style="text-align: left">15:45-18:45&lt;/td>
 &lt;td style="text-align: left">Exam (Raum WH C354)&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>This table is to be read as follows:
During week 2 of the term - which is calendar week 16 - you need to study the agile and tech topic, first individually and then within the team. Furthermore, you need to work on the corresponding sprint and turn in the sprint report by Friday of that week, 22:00h.&lt;/p></description></item><item><title>WTAT2 Tentative Schedule</title><link>https://bkleinen.github.io/classes/ws2017/wtat2/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2017/wtat2/schedule/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Week&lt;/th>
 &lt;th style="text-align: left">KW&lt;/th>
 &lt;th style="text-align: left">Date&lt;/th>
 &lt;th style="text-align: left">Lecture Topic&lt;/th>
 &lt;th style="text-align: left">Required Reading &lt;!-- raw HTML omitted -->read this before the corresponding class!&lt;!-- raw HTML omitted -->&lt;/th>
 &lt;th style="text-align: left">Lab&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">40&lt;/td>
 &lt;td style="text-align: left">Thu, 2017-10-05&lt;/td>
 &lt;td style="text-align: left">Agile Web Development - Intro&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Time Box, Topics, Rails Installation&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">41&lt;/td>
 &lt;td style="text-align: left">Thu, 2017-10-12&lt;/td>
 &lt;td style="text-align: left">Rails Dash, Ruby&lt;/td>
 &lt;td style="text-align: left">* &lt;a href="https://guides.rubyonrails.org/getting_started.html">Getting Started with Rails&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Definition of Topics &amp;amp; Groups, Installation cont&amp;rsquo;ed&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">42&lt;/td>
 &lt;td style="text-align: left">Thu, 2017-10-19&lt;/td>
 &lt;td style="text-align: left">Web Applications Overview, Active Record Associations and Migrations&lt;/td>
 &lt;td style="text-align: left">* &lt;a href="https://guides.rubyonrails.org/active_record_basics.html">Active Record Basics&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../topics/a1-activerecord/">Topic 1: Rails and Active Record&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">43&lt;/td>
 &lt;td style="text-align: left">Thu, 2017-10-26&lt;/td>
 &lt;td style="text-align: left">Domain Models, Associations in the View&lt;/td>
 &lt;td style="text-align: left">* &lt;a href="https://guides.rubyonrails.org/association_basics.html">Active Record Associations&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../topics/a1-activerecord/">Topic 1: Rails and Active Record&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">44&lt;/td>
 &lt;td style="text-align: left">Thu, 2017-11-02&lt;/td>
 &lt;td style="text-align: left">Testing and Bootstrap&lt;/td>
 &lt;td style="text-align: left">Ch. 7 Testing: Only &amp;ldquo;Installing RSpec for Testing&amp;rdquo;, Chapter 9 (Bootstrap)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../topics/a2-authentication/">Topic 2: Authentication &amp;amp; Testing&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">45&lt;/td>
 &lt;td style="text-align: left">Thu, 2017-11-09&lt;/td>
 &lt;td style="text-align: left">(no lecture)&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;td style="text-align: left">Thu, 2017-11-16&lt;/td>
 &lt;td style="text-align: left">Authentication with Devise&lt;/td>
 &lt;td style="text-align: left">(*) Chapter 2 (Devise)&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../topics/a2-authentication/">Topic 2: Authentication &amp;amp; Testing&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">47&lt;/td>
 &lt;td style="text-align: left">Thu, 2017-11-23&lt;/td>
 &lt;td style="text-align: left">Docker &amp;amp; Database&lt;/td>
 &lt;td style="text-align: left">Laura Frank: &lt;a href="https://blog.codeship.com/using-docker-for-rails-development/">Using Docker for Rails Development&lt;/a>. Codeship-Blog, 19.6.2017&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../topics/a3-search-database-docker/">Topic 3: Search Functionality, Database &amp;amp; Docker&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">9&lt;/td>
 &lt;td style="text-align: left">48&lt;/td>
 &lt;td style="text-align: left">Thu, 2017-11-30&lt;/td>
 &lt;td style="text-align: left">Active Record Queries&lt;/td>
 &lt;td style="text-align: left">* &lt;a href="https://guides.rubyonrails.org/active_record_querying.html">Rails Guides: Active Record Query Interface&lt;/a> or Chapter 4, Chapter 5 for all&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../topics/a3-search-database-docker/">Topic 3: Search Functionality, Database &amp;amp; Docker&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">10&lt;/td>
 &lt;td style="text-align: left">49&lt;/td>
 &lt;td style="text-align: left">Thu, 2017-12-07&lt;/td>
 &lt;td style="text-align: left">Rails Deployment and Continuous Integration&lt;/td>
 &lt;td style="text-align: left">Martin Fowler&amp;rsquo;s Bliki Article on &lt;a href="https://martinfowler.com/articles/continuousIntegration.html">Continuous Integration&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../topics/a4-ci-cd-javascript/">Topic 4: Deployment &amp;amp; Javascript&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">11&lt;/td>
 &lt;td style="text-align: left">50&lt;/td>
 &lt;td style="text-align: left">Thu, 2017-12-14&lt;/td>
 &lt;td style="text-align: left">Java Script&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://guides.rubyonrails.org/working_with_javascript_in_rails.html#turbolinks">Rails Guides: Working with JavaScript in Rails&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../topics/a4-ci-cd-javascript/">Topic 4: Deployment &amp;amp; Javascript&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">12&lt;/td>
 &lt;td style="text-align: left">51&lt;/td>
 &lt;td style="text-align: left">Thu, 2017-12-21&lt;/td>
 &lt;td style="text-align: left">no class&lt;/td>
 &lt;td style="text-align: left">&amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">13&lt;/td>
 &lt;td style="text-align: left">1&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-01-04&lt;/td>
 &lt;td style="text-align: left">External APIs&lt;/td>
 &lt;td style="text-align: left">&amp;ndash;&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../topics/a5-api-security/">Topic 5: External APIs &amp;amp; Security&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">14&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-01-11&lt;/td>
 &lt;td style="text-align: left">Securing Web Applications&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://guides.rubyonrails.org/security.html">Ruby on Rails Security Guide&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="../topics/a5-api-security/">Topic 5: External APIs &amp;amp; Security&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">15&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-01-18&lt;/td>
 &lt;td style="text-align: left">Exam Preparation, Planning of Own Topic &amp;amp; Project Finalization&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Topic 6: choose one yourself&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">16&lt;/td>
 &lt;td style="text-align: left">4&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-01-25&lt;/td>
 &lt;td style="text-align: left">Exam&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Topic 6: choose one yourself&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17&lt;/td>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">Thu, 2018-02-01&lt;/td>
 &lt;td style="text-align: left">No Lecture&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Fri, 2018-02-01&lt;/td>
 &lt;td style="text-align: left">SHOWTIME! 10:00 H001&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">18&lt;/td>
 &lt;td style="text-align: left">6&lt;/td>
 &lt;td style="text-align: left">Tue, 2018-02-06&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Final Reports/Projects due&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item></channel></rss>